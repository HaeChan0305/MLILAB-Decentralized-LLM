[{"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : de ayala is required to supply too much of the energy in a film that is , overall , far too staid for its subject matter .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "de ayala is required to supply too much of the energy in a film that is , overall , far too staid for its subject matter .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"staid \", \"subject matter \"],\n    \"REASONING\" : \"the film is too slow and lacks excitement \",\n    \"SENTIMENT\" : \"Negative \"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a long , dull procession of despair , set to cello music culled from a minimalist funeral .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a long , dull procession of despair , set to cello music culled from a minimalist funeral .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [ \"long \", \"dull \", \"procession \", \"despair \", \"cello music \", \"minimalist funeral \" ],\n    \"REASONING\" : \"the input describes a negative experience involving slow pacing , lack of excitement , sad music , and an unpleasant atmosphere .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : some movies blend together as they become distant memories . mention `` solaris `` five years from now and i 'm sure those who saw it will have an opinion to share .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "some movies blend together as they become distant memories . mention `` solaris `` five years from now and i 'm sure those who saw it will have an opinion to share .", "answer": "Positive", "prediction": "`` Positive `` Positive . Positive because the movie is being mentioned in the future , which implies that the person has fond memories of it . Positive because it suggests that the person would be willing to share their positive memory with others . Positive because it shows that the subject matter is well-received by the speaker . Positive because it indicates that the speaker values their positive experience of the movie . Positive because it implies that the speaker would recommend the movie to others . Positive because it indicates that the speaker believes the movie was worth watching . Positive because it suggests that the speaker would like to see the movie again . Positive because it indicates that the speaker thinks highly of the movie . Positive because it implies that the speaker would watch the movie again . Positive because it indicates that the speaker believes the movie was worth seeing . Positive because it suggests that the speaker would like to own a copy of the movie . Positive because it indicates that the speaker thinks highly of the movie . Positive because it implies that the speaker would like to buy a copy of the movie . Positive because it indicates that the speaker would like to see the movie again . Positive because it suggests that the speaker would recommend the movie to others . Positive because it indicates that the speaker believes the movie was worth watching . Positive because it implies that the speaker would watch the movie again . Positive because it indicates that the speaker believes the movie was worth seeing . Positive because it suggests that the speaker would like to own a copy of the movie . Positive because it indicates that the speaker thinks highly of the movie . Positive because it implies that the speaker would like to buy a copy of the movie . Positive because it indicates that the speaker would like to see the movie again . Positive because it suggests that the speaker would recommend the movie to others . Positive because it indicates that the speaker believes the movie was worth watching . Positive because it implies that the speaker would watch the movie again . Positive because it indicates that the speaker believes the movie was worth seeing . Positive because it suggests that the speaker would like to own a copy of the movie . Positive because it indicates that the speaker thinks highly of the movie . Positive because it implies that the speaker would like to buy a copy of the movie . Positive because it indicates that the speaker would like to see the movie again . Positive because it suggests that the speaker would recommend the movie to others . Positive because it indicates that the speaker believes the movie was worth watching . Positive because it implies that the speaker would watch the movie again . Positive because it indicates that the speaker believes the movie was worth seeing . Positive because"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : if there was ever a movie where the upbeat ending feels like a copout , this is the one .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "if there was ever a movie where the upbeat ending feels like a copout , this is the one .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"if there was ever a movie \", \"upbeat ending feels like a copout \", \"one .\"],\n    \"REASONING\" : \"the sentence mentions a movie with an upbeat ending but still feels like it 's trying too hard , suggesting a negative sentiment \",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : tully is in many ways the perfect festival film : a calm , self-assured portrait of small town regret , love , duty and friendship that appeals to the storytelling instincts of a slightly more literate filmgoing audience .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "tully is in many ways the perfect festival film : a calm , self-assured portrait of small town regret , love , duty and friendship that appeals to the storytelling instincts of a slightly more literate filmgoing audience .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : [\"small town \", \"regret \", \"love \", \"duty \", \"friendship \", \"storytelling \", \"literately \", \"festival film \", \"calm \", \"self-assured \", \"portrayal \", \"appeals \", \"slightly more literate \", \"filmgoing audience ],\n    \"REASONING\" : \"Positive because it 's a calm , self-assured portrait of small town regret , love , duty and friendship that appeals to the storytelling instincts of a slightly more literate filmgoing audience .\",\n    \"SENTIMENT\" : Positive\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the kids in the audience at the preview screening seemed bored , cheering the pratfalls but little else ; their parents , wise folks that they are , read books .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the kids in the audience at the preview screening seemed bored , cheering the pratfalls but little else ; their parents , wise folks that they are , read books .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"bored\", \"cheering the pratfalls \", \"parents read books . \"],\n    \"REASONING\" : \"the review suggests that the movie was not well-received by children , who did n't seem interested in it , while adults found it dull . \",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : this tenth feature is a big deal , indeed -- at least the third-best , and maybe even a notch above the previous runner-up , nicholas meyer 's star trek vi : the undiscovered country .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "this tenth feature is a big deal , indeed -- at least the third-best , and maybe even a notch above the previous runner-up , nicholas meyer 's star trek vi : the undiscovered country .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\": [\"big deal \", \"runner-up \", \"star trek vi : the undiscovered country \", \"best movie ever made by nicholas meyer . \"],\n    \"REASONING\": \"the input contains positive language such as 'big deal ' , 'runner-up ', and 'best movie ever made ' , which suggests a positive sentiment . Positive language indicates a positive sentiment .\",\n    \"SENTIMENT\": \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : feels haphazard , as if the writers mistakenly thought they could achieve an air of frantic spontaneity by simply tossing in lots of characters doing silly stuff and stirring the pot .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "feels haphazard , as if the writers mistakenly thought they could achieve an air of frantic spontaneity by simply tossing in lots of characters doing silly stuff and stirring the pot .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\" : \"haphazard , frenetic , silly , stirring the pot\",\n    \"REASONING\" : \"the sentence describes the film 's chaotic and disjointed nature , with characters doing pointless things and causing trouble .\",\n    \"SENTIMENT\" : \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the gantzes ' interviews tend to let the guys off the hook .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the gantzes ' interviews tend to let the guys off the hook .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\" : \"gantges , interviews , let the guys off the hook \",\n    \"REASONING\" : \"negative tone , criticism , negative perspective .\",\n    \"SENTIMENT\" : \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : more concerned with sade 's ideas than with his actions . the movie achieves as great an impact by keeping these thoughts hidden as . . . [ quills ] did by showing them .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "more concerned with sade 's ideas than with his actions . the movie achieves as great an impact by keeping these thoughts hidden as . . . [ quills ] did by showing them .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"more concerned with sade 's ideas \", \"keeping these thoughts hidden , \" shows them ],\n    \"REASONING\" : \"the sentiment is negative because the movie does n't provide enough action to make up for its lack of focus on the main character and his story\",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the piano teacher , like its title character , is repellantly out of control .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the piano teacher , like its title character , is repellantly out of control .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : \"repellantly out of control\",\n    \"REASONING\" : \"the movie is boring and predictable\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : merchant has n't directed this movie so much as produced it -- like sausage .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "merchant has n't directed this movie so much as produced it -- like sausage .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"negative sentiment\", \"indifferent director \", \"negative review , \"negative attitude \" ],\n    \"REASONING\" : \"the negative sentiment is supported by the negative attitudes towards the film 's direction and production .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : for veggietales fans , this is more appetizing than a side dish of asparagus . if you 're not a fan , it might be like trying to eat brussels sprouts .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "for veggietales fans , this is more appetizing than a side dish of asparagus . if you 're not a fan , it might be like trying to eat brussels sprouts .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : [\"veggietales fans \", \"appetizing \", \"side dish of asparagus \", \"not a fan \", \"trying to eat brussels sprouts \"],\n    \"REASONING\" : \"the input contains positive feedback about the movie being suitable for veggie lovers and negative comments about those who do n't enjoy it . \",\n    \"SENTIMENT\" : \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : allen 's funniest and most likeable movie in years .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "allen 's funniest and most likeable movie in years .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"allen 's \", \"funniest and most likeable movie in years . \"],\n    \"REASONING\" : \"Positive sentiment is inferred by positive language , such as 'funniest ' and 'likeable . '\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : suffers from over-familiarity since hit-hungry british filmmakers have strip-mined the monty formula mercilessly since 1997 .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "suffers from over-familiarity since hit-hungry british filmmakers have strip-mined the monty formula mercilessly since 1997 .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"suffers from over-familiarity \", \"british filmmakers have strip-mined the monty formula \"],\n    \"REASONING\" : \"the sentiment is negative because the film is described as suffering from over-familiarity due to its reliance on the monty formula which has been exploited by other british filmmakers \",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : this film is so slick , superficial and trend-hoppy , that it 's easy to imagine that a new software program spit out the screenplay .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "this film is so slick , superficial and trend-hoppy , that it 's easy to imagine that a new software program spit out the screenplay .", "answer": "Negative", "prediction": "```\n\n{\n    \"CLUES\" : [\n        \"slick\",\n        \"superficial\",\n        \"trend-hoppy\"\n    ],\n    \"REASONING\" : \"all three adjectives describe the film in a negative light .\",\n    \"SENTIMENT\" : \"Negative\"\n} ``"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the way home is an ode to unconditional love and compassion garnered from years of seeing it all , a condition only the old are privy to , and . . . often misconstrued as weakness .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the way home is an ode to unconditional love and compassion garnered from years of seeing it all , a condition only the old are privy to , and . . . often misconstrued as weakness .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [ \"unconditional love \", \"compassion \", \"years of seeing it all \", \"only the old are privy to \", \"often misconstrued as weakness \" ],\n    \"REASONING\" : \"the input expresses admiration for experiences gained through life and the wisdom that comes with age , suggesting a positive sentiment .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : . . . a hollow joke told by a cinematic gymnast having too much fun embellishing the misanthropic tale to actually engage it .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": ". . . a hollow joke told by a cinematic gymnast having too much fun embellishing the misanthropic tale to actually engage it .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"hollow joke\", \"cinematic gymnast\", \"misanthropic tale\", \"engaging\"],\n    \"REASONING\" : \"the sentence uses positive words like 'fun', 'engaging,' and 'having too much fun' to describe the movie , suggesting a positive sentiment .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : exhibits the shallow sensationalism characteristic of soap opera . . . more salacious telenovela than serious drama .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "exhibits the shallow sensationalism characteristic of soap opera . . . more salacious telenovela than serious drama .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"soap opera \", \"salacious telenovela \", \"shallow sensationalism \", \"serious drama \"],\n    \"REASONING\" : \"the sentence is critical of the film 's style , content , and tone , indicating negative sentiment \",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : there 's enough melodrama in this magnolia primavera to make pta proud yet director muccino 's characters are less worthy of puccini than they are of daytime television .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "there 's enough melodrama in this magnolia primavera to make pta proud yet director muccino 's characters are less worthy of puccini than they are of daytime television .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"melodrama \", \"magnolia primavera \", \"ptra \", \"daytime television \"],\n    \"REASONING\" : \"the sentiment is negative because the movie is too dramatic and lacks substance .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : i like it . there is a freedom to watching stunts that are this crude , this fast-paced and this insane .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "i like it . there is a freedom to watching stunts that are this crude , this fast-paced and this insane .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"like it \", \"freedom watching \", \"stunts \", \"this crude , this fast-paced and this insane \"],\n    \"REASONING\" : \"Positive sentiment because the user likes the movie and finds it entertaining despite its violence and action.\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : awesome creatures , breathtaking scenery , and epic battle scenes add up to another 'spectacular spectacle . '\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "awesome creatures , breathtaking scenery , and epic battle scenes add up to another 'spectacular spectacle . '", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"awesome creatures \", \"breathtaking scenery \", \"epic battle scenes \", \"spectacular spectacle \"],\n    \"REASONING\" : \"all positive aspects of the film are highlighted in the input sentence\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : has a long and clunky ending . . . which forces the audience to fidget through ten pseudo-serious minutes while waiting for the ending credits and the deleted scenes montage to break the audience 's awkward silence\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "has a long and clunky ending . . . which forces the audience to fidget through ten pseudo-serious minutes while waiting for the ending credits and the deleted scenes montage to break the audience 's awkward silence", "answer": "Negative", "prediction": "{\n    \"CLUES\" : \"long , clunky ending , pseudo-serious minutes , awkward silence\",\n    \"REASONING\" : \"negative feedback about the film 's pacing and ending\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : andersson creates a world that 's at once surreal and disturbingly familiar ; absurd , yet tremendously sad .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "andersson creates a world that 's at once surreal and disturbingly familiar ; absurd , yet tremendously sad .", "answer": "Positive", "prediction": "```\n\n{\n    \"CLUES\" : \"surreal , disturbingly familiar , absurd , sad \",\n    \"REASONING\" : \"the review uses positive adjectives to describe the movie 's style and tone .\",\n    \"SENTIMENT\" : \"Positive\"\n} ``"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : M-^Ean eerily suspenseful , deeply absorbing piece that works as a treatise on spirituality as well as a solid sci-fi thriller .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "M-^Ean eerily suspenseful , deeply absorbing piece that works as a treatise on spirituality as well as a solid sci-fi thriller .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"suspenseful \", \"soulful \", \"insightful \", \"intelligent \", \"thought-provoking \", \"powerful \", \"inspiring \", \"engaging \", \"inquisitive \", \"insightful \", \"intriguing \", \"deeply absorbing \", \"sensitive \"],\n    \"REASONING\" : \"Positive sentiment because the movie is thought-provoking , powerful , and engaging .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : tres greek writer and star nia vardalos has crafted here a worldly-wise and very funny script .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "tres greek writer and star nia vardalos has crafted here a worldly-wise and very funny script .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"tres greek writer , \"nadia vardalos 'worldly-wise and very funny script . \"],\n    \"REASONING\" : \"the review is positive and focuses on the movie 's worldliness and humor .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it becomes gimmicky instead of compelling . `` interview `` loses its overall sense of mystery and becomes a tv episode rather than a documentary that you actually buy into .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it becomes gimmicky instead of compelling . `` interview `` loses its overall sense of mystery and becomes a tv episode rather than a documentary that you actually buy into .", "answer": "Negative", "prediction": "`` Positive `` Positive sentiment supported by keywords like 'compelling , ' 'mystery , ' 'documentary , ' 'buying , ' and 'tv episode . Positive sentiment also supported by the phrase 'it becomes gimmicky instead of compelling . ' Positive sentiment further supported by the phrase 'loses its overall sense of mystery . ' Positive sentiment supported by the phrase 'becomes a tv episode . ' Positive sentiment supported by the phrase 'you actually buy into . ' Positive sentiment further supported by the word 'entirely . ' Positive sentiment also supported by the word 'completely . ' Positive sentiment further supported by the word 'totally . ' Positive sentiment further supported by the word 'comprehensively . ' Positive sentiment also supported by the word 'completely . ' Positive sentiment also supported by the word 'entirely . ' Positive sentiment also supported by the word 'completely . ' Positive sentiment also supported by the word 'comprehensively . ' Positive sentiment also supported by the word 'completely . ' Positive sentiment also supported by the word 'comprehensively . ' Positive sentiment also supported by the word 'comprehensively . ' Positive sentiment also supported by the word 'comprehensive . ' Positive sentiment also supported by the word 'comprehensive . ' Positive sentiment also supported by the word 'comprehensive . ' Positive sentiment also supported by the word 'comprehensive . ' Positive sentiment also supported by the word 'comprehensive . Positive sentiment also supported by the word 'comprehensive . Positive sentiment also supported by the word 'comprehensive . Positive sentiment also supported by the word 'comprehensive . Positive sentiment also supported by the word 'comprehensive . Positive sentiment also supported by the word 'comprehensive . Positive sentiment also supported by the word 'comprehensive . Positive sentiment also supported by the word 'comprehensive . Positive sentiment also supported by the word 'comprehensive . Positive sentiment also supported by the word 'comprehensive . Positive sentiment also supported by the word 'comprehensive . Positive sentiment also supported by the word 'comprehensive . Positive sentiment also supported by the word 'comprehensive . Positive sentiment also supported by the word 'comprehensive . Positive sentiment also supported by the word 'comprehensive . Positive sentiment also supported by the word 'comprehensive . Positive sentiment also supported by the word 'comprehensive . Positive sentiment also supported by the word 'comprehensive . Positive sentiment also supported by the word 'comprehensive . Positive sentiment also supported by the word 'comprehensive . Positive sentiment also supported by the word 'comprehensive . Positive"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : an unflinching look at the world 's dispossessed .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "an unflinching look at the world 's dispossessed .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"unflinching \", \"look at the world 's dispossessed . \"],\n    \"REASONING\" : \"the film is about people who are struggling to make ends meet , which suggests a negative sentiment .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it 's as if de palma spent an hour setting a fancy table and then served up kraft macaroni and cheese .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it 's as if de palma spent an hour setting a fancy table and then served up kraft macaroni and cheese .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\" : [\n        \"kraft macaroni and cheese\"\n    ],\n    \"REASONING\" : \"negative , negative , negative , with only one positive word .\",\n    \"SENTIMENT\" : \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : look , this is a terrific flick replete with dazzling camera-work , dancing and music .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "look , this is a terrific flick replete with dazzling camera-work , dancing and music .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\": \"tearjerker , heartwarming , funny , romantic comedy , charming , touching , beautiful , inspiring , moving , great story , happy ending , positive message , inspirational , wonderful , uplifting , funny , romantic comedy , endearing , heartwarming , delightful , sweet , sentimental , lovely , touching , adorable , heartfelt , enjoyable , positive , uplifting , joyful , inspiring , memorable , lovely , good movie , sweet , enjoyable , feel-good , lovely , nice , wonderful , wonderful , lovable , fun , lovely , feel-good , wonderful , enjoyable , good movie , positive , delightful , heartwarming , lovely , great story , sweet , wonderful , endearing , delightful , sweet , heartwarming , wonderful , feel-good , lovely , wonderful , good movie , feel-good , lovely , wonderful , endearing , delightful , wonderful , lovely , great story , sweet , feel-good , wonderful , good movie , sweet , lovely , great story , wonderful , endearing , delightful , lovely , great story , sweet , endearing , wonderful , lovely , wonderful , feel-good , delightful , lovely , wonderful , lovely , endearing , delightful , sweet , wonderful , wonderful , endearing , delightful , wonderful , lovely , endearing , delightful , wonderful , wonderful , delightful , wonderful , wonderful , endearing , delightful , wonderful , wonderful , wonderful , wonderful , delightful , wonderful , wonderful , wonderful , wonderful , delightful , wonderful , wonderful , wonderful , wonderful , delightful , wonderful , wonderful , wonderful , wonderful , delightful , wonderful , wonderful , wonderful , wonderful , delightful , wonderful , wonderful , wonderful , wonderful , delightful , wonderful , wonderful , wonderful , wonderful , delightful , wonderful , wonderful , wonderful , wonderful , delightful , wonderful , wonderful , wonderful , wonderful , delightful , wonderful , wonderful , wonderful , wonderful , delightful , wonderful , wonderful , wonderful , wonderful , delightful , wonderful , wonderful , wonderful , wonderful , delightful , wonderful , wonderful , wonderful , wonderful , delightful , wonderful , wonderful , wonderful , wonderful , delightful , wonderful , wonderful , wonderful , wonderful , delightful , wonderful , wonderful , wonderful , wonderful , delightful , wonderful , wonderful , wonderful , wonderful , delightful , wonderful , wonderful , wonderful , wonderful , delightful , wonderful , wonderful , wonderful , wonderful , delightful , wonderful , wonderful , wonderful , wonderful , delightful , wonderful , wonderful , wonderful , wonderful , delightful , wonderful , wonderful , wonderful , wonderful , delightful , wonderful , wonderful , wonderful , wonderful , delightful , wonderful , wonderful , wonderful , wonderful ,"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : francophiles will snicker knowingly and you 'll want to slap them .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "francophiles will snicker knowingly and you 'll want to slap them .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\": \"francophiles will snicker knowingly , you 'll want to slap them .\",\n    \"REASONING\": \"negative sentiment towards the film and its message about french culture being too pretentious for american tastes.\",\n    \"SENTIMENT\": \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it is a happy , heady jumble of thought and storytelling , an insane comic undertaking that ultimately coheres into a sane and breathtakingly creative film .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it is a happy , heady jumble of thought and storytelling , an insane comic undertaking that ultimately coheres into a sane and breathtakingly creative film .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"happy \", \"heady \", \"thoughts \", \"storytelling \", \"insane \", \"comical \", \"endeavoring \", \"coherent \", \"sane \", \"beautifully creative \", \"jumble\"],\n    \"REASONING\" : \"Positive sentiment due to positive language used in describing the film .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : in the director 's cut , the film is not only a love song to the movies but it also is more fully an example of the kind of lush , all-enveloping movie experience it rhapsodizes .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "in the director 's cut , the film is not only a love song to the movies but it also is more fully an example of the kind of lush , all-enveloping movie experience it rhapsodizes .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\": [\"love song\", \"lovely \", \"movie experience \", \"fully an example \", \"lush , all-enveloping movie experience \", \"rhapsodizes \"],\n    \"REASONING\": \"Positive because the sentiment is praising the movie and its cinematic experiences .\",\n    \"SENTIMENT\": \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : parents beware ; this is downright movie penance .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "parents beware ; this is downright movie penance .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\" : [\"parents \", \"beware \", \"downright movie penance \"],\n    \"REASONING\" : \"the sentence suggests that the movie is so bad that it 's being compared to a punishment for parents , which implies negative sentiment .\",\n    \"SENTIMENT\" : \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : an old-fashioned but emotionally stirring adventure tale of the kind they rarely make anymore .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "an old-fashioned but emotionally stirring adventure tale of the kind they rarely make anymore .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\n        \"old-fashioned\",\n        \"emotionally stirring\",\n        \"adventure tale\",\n        \"rarely make\",\n        \"emotionally stirring\"\n    ],\n    \"REASONING\" : \"all of these words and phrases suggest a positive sentiment , with the exception of 'rarely make . ' \",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : lacks dramatic punch and depth .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "lacks dramatic punch and depth .", "answer": "Negative", "prediction": "```\n\n{\n    \"CLUES\" : [\n        \"lacks dramatic punch \",\n        \"depth \"\n    ],\n    \"REASONING\" : \"the input sentence is negative because it criticizes the film 's lack of dramatic impact and emotional resonance .\",\n    \"SENTIMENT\" : \"Negative\"\n} ``"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the imax screen enhances the personal touch of manual animation .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the imax screen enhances the personal touch of manual animation .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : [\n        \"imax screen \",\n        \"enhances \",\n        \"personal touch \"\n    ],\n    \"REASONING\" : \"the input suggests a positive sentiment , as it describes a film experience as 'special ' and highlights the use of advanced technology to enhance the visual impact .\",\n    \"SENTIMENT\" : \"Positive\"\n} ``"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : this flick is about as cool and crowd-pleasing as a documentary can get .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "this flick is about as cool and crowd-pleasing as a documentary can get .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : \"cool , crowd-pleasing , documentary\",\n    \"REASONING\" : \"Positive sentiment because it describes a film as cool and crowd-pleasing .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the funny thing is , i did n't mind all this contrived nonsense a bit .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the funny thing is , i did n't mind all this contrived nonsense a bit .", "answer": "Positive", "prediction": "```\n\n{\n    \"CLUES\" : \"contrived nonsense \",\n    \"REASONING\" : \"negative sentiment because it is described as contrived and not enjoyable\",\n    \"SENTIMENT\" : \"Negative\"\n} ``"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : this masterfully calibrated psychological thriller thrives on its taut performances and creepy atmosphere even if the screenplay falls somewhat short .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "this masterfully calibrated psychological thriller thrives on its taut performances and creepy atmosphere even if the screenplay falls somewhat short .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"psychological thriller\", \"tense performances\", \"creepy atmosphere\", \"script falls short\"],\n    \"REASONING\" : \"the positive sentiment is derived from the praise for the performances , atmosphere , and script being well-crafted . Negative sentiment comes from the criticism of the screenplay being less than perfect .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : throughout , mr . audiard 's direction is fluid and quick .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "throughout , mr . audiard 's direction is fluid and quick .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"fluid\", \"quick\"],\n    \"REASONING\" : \"Positive\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : festers in just such a dungpile that you 'd swear you were watching monkeys flinging their feces at you .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "festers in just such a dungpile that you 'd swear you were watching monkeys flinging their feces at you .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [ \"festers in just such a dungpile \", \"you 'd swear you were watching monkeys flinging their feces at you \" ],\n    \"REASONING\" : \"the input contains negative language and imagery , suggesting a negative sentiment .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : richard gere and diane lane put in fine performances as does french actor oliver martinez .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "richard gere and diane lane put in fine performances as does french actor oliver martinez .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\": [\n        \"richard gere \",\n        \"diane lane \",\n        \"fine performances \",\n        \"francisco arana \"\n    ],\n    \"REASONING\": \"all three actors give strong performances .\",\n    \"SENTIMENT\": \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a woman 's pic directed with resonance by ilya chaiken .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a woman 's pic directed with resonance by ilya chaiken .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"woman's pic\", \"directed with resonance\", \"ilya chaiken\"],\n    \"REASONING\" : \"the film is well-crafted and emotionally resonant , making it positive in tone \",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : strong setup and ambitious goals fade as the film descends into unsophisticated scare tactics and b-film thuggery .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "strong setup and ambitious goals fade as the film descends into unsophisticated scare tactics and b-film thuggery .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"unsophisticated scare tactics\", \"b-film thuggery\"],\n    \"REASONING\" : \"the sentiment is negative because the film goes down a path of cheap thrills without any depth or substance\",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : say this for the soundtrack , it drowns out the lousy dialogue .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "say this for the soundtrack , it drowns out the lousy dialogue .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"lousy dialogue \", \"soundtrack \"],\n    \"REASONING\" : \"the movie is about the soundtrack , which makes the dialogue seem like garbage in comparison \",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : an epic of grandeur and scale that 's been decades gone from the popcorn pushing sound stages of hollywood .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "an epic of grandeur and scale that 's been decades gone from the popcorn pushing sound stages of hollywood .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"epic\", \"grandeur \", \"scale \", \"hollywood ],\n    \"REASONING\" : \"the movie is described as an epic of grandeur and scale , suggesting it has large-scale action scenes and is of significant importance in its genre . \",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it 's fitting that a movie as artificial and soulless as the country bears owes its genesis to an animatronic display at disneyland .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it 's fitting that a movie as artificial and soulless as the country bears owes its genesis to an animatronic display at disneyland .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\": [\"artificial \", \"soulless \", \"animatronic display \", \"disneyland \"],\n    \"REASONING\": \"all these words suggest a negative sentiment about the movie , but the specific context makes me lean towards a slightly more nuanced view .\",\n    \"SENTIMENT\": \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : there 's a reason the studio did n't offer an advance screening . `` the adventures of pluto nash `` is a big time stinker .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "there 's a reason the studio did n't offer an advance screening . `` the adventures of pluto nash `` is a big time stinker .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [ \"big time stinker \", \"studio did n't offer advance screening \" ],\n    \"REASONING\" : \"negative feedback about movie , negative tone throughout \",\n    \"SENTIMENT\" : \"Negative \"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the film 's needlessly opaque intro takes its doe-eyed crudup out of pre-9/11 new york and onto a cross-country road trip of the homeric kind .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the film 's needlessly opaque intro takes its doe-eyed crudup out of pre-9/11 new york and onto a cross-country road trip of the homeric kind .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\" : [ \"obscure \", \"intense \", \"dull \", \"inane \", \"lame \" ],\n    \"REASONING\" : \"the film is about an inane , dull , and lame character who travels across america with his wife . Negative sentiment .\",\n    \"SENTIMENT\" : Negative\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it would be great to see this turd squashed under a truck , preferably a semi .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it would be great to see this turd squashed under a truck , preferably a semi .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"terrible movie \", \"bad film \", \"horrible movie \", \"stinks \"],\n    \"REASONING\" : \"the input contains negative words like 'terrible ', 'bad ' and 'horrible ' which indicate a negative sentiment .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the threat implied in the title pokM-imon 4ever is terrifying M-^V like locusts in a horde these things will keep coming .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the threat implied in the title pokM-imon 4ever is terrifying M-^V like locusts in a horde these things will keep coming .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"terrifying \", \"horde \"],\n    \"REASONING\" : \"the input contains words such as 'terrifying ' and 'horde , ' which suggest a negative sentiment .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a giggle-inducing comedy with snappy dialogue and winning performances by an unlikely team of oscar-winners : susan sarandon and goldie hawn .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a giggle-inducing comedy with snappy dialogue and winning performances by an unlikely team of oscar-winners : susan sarandon and goldie hawn .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"giggle-inducing \", \"winning performances , \"snappy dialogue , \"unlikely team , \"oscar-winners , \"susanne sarandon , \"goldie hawn , \"positive sentiment . ],\n    \"REASONING\" : \"the review is positive because it mentions several things that are commonly associated with good movies , such as humor , likable characters , and talented actors . \",\n    \"SENTIMENT\" : \"Positive \"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a great comedy filmmaker knows great comedy need n't always make us laugh . tim story 's not there yet - but 'barbershop ' shows he 's on his way .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a great comedy filmmaker knows great comedy need n't always make us laugh . tim story 's not there yet - but 'barbershop ' shows he 's on his way .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"comedy film , positive \", \"great comedy , negative \", \"not there yet , still in development stage \", \"knows how to make us laugh , needs to learn more about what makes us laugh , also has potential for future projects , positive outlook for future ventures\"],\n    \"REASONING\" : \"the review is positive because it acknowledges the potential for the filmmaker to improve , despite some flaws in the current project .\",\n    \"SENTIMENT\" : Positive"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : those prone to indignation need not apply ; those susceptible to blue hilarity , step right up .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "those prone to indignation need not apply ; those susceptible to blue hilarity , step right up .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : \"indignation \", \"blue hilarity \",\n    \"REASONING\" : \"the film is about two people who do n't get along and try to make each other laugh by making fun of themselves . this makes the movie more lighthearted and less serious than it could have been .\",\n    \"SENTIMENT\" : Positive\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a family-friendly fantasy that ends up doing very little with its imaginative premise .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a family-friendly fantasy that ends up doing very little with its imaginative premise .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"family-friendly\", \"fantasy\", \"ends up doing very little \", \"imaginative premise \"],\n    \"REASONING\" : \"the movie is too focused on being cute for its own good , lacking in substance and depth . \",\n    \"SENTIMENT\" : \"Negative \"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : is it a total success ? no . is it something any true film addict will want to check out ? you bet .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "is it a total success ? no . is it something any true film addict will want to check out ? you bet .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"total success \", \"something any true film addict will want to check out \"],\n    \"REASONING\" : \"both positive statements are supported by the input , indicating a positive sentiment .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : like a pack of dynamite sticks , built for controversy . the film is explosive , but a few of those sticks are wet .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "like a pack of dynamite sticks , built for controversy . the film is explosive , but a few of those sticks are wet .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"like a pack of dynamite sticks \", \"built for controversy \", \"the film is explosive \", \"a few of those sticks are wet \"],\n    \"REASONING\" : \"Positive sentiment because the film is described as 'explosive , ' despite some issues mentioned in the context \",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : as vulgar as it is banal .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "as vulgar as it is banal .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : \"as vulgar , as banal , negative tone , negative sentiment \",\n    \"REASONING\" : \"the sentence describes something as being 'vulgar and banal , ' which implies that it has a negative tone and sentiment .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : land , people and narrative flow together in a stark portrait of motherhood deferred and desire explored .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "land , people and narrative flow together in a stark portrait of motherhood deferred and desire explored .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\n        \"land \",\n        \"people \",\n        \"narrative flow \",\n        \"stark portrait \",\n        \"motherhood deferred \",\n        \"desire explored \"\n    ],\n    \"REASONING\" : \"all these elements create a compelling story about a woman 's journey through life . Positive sentiment .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the lady and the duke is a smart , romantic drama that dares to depict the french revolution from the aristocrats ' perspective .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the lady and the duke is a smart , romantic drama that dares to depict the french revolution from the aristocrats ' perspective .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"smart \", \"romantic \", \"dramatization \", \"artistic \", \"perspective \"],\n    \"REASONING\" : \"the movie is praised for its historical accuracy , emotional depth , and unique point of view . Positive sentiment .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : despite the fact that this film was n't as bad as i thought it was going to be , it 's still not a good movie\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "despite the fact that this film was n't as bad as i thought it was going to be , it 's still not a good movie", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\" : [ \"not a good movie \", \"wasn 't as bad as expected \", \"still not a good movie \" ],\n    \"REASONING\" : \"the statement is negative in tone and expresses disappointment with the movie \",\n    \"SENTIMENT\" : \"Negative \"\n} ``"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : directed in a flashy , empty sub-music video style by a director so self-possessed he actually adds a period to his first name\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "directed in a flashy , empty sub-music video style by a director so self-possessed he actually adds a period to his first name", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [ \"sub-music video style \", \"self-possessed \", \"first name ending with 's ' \" ],\n    \"REASONING\" : \"the sentence describes the film as being in an empty , flashy style , suggesting it may be poorly made . Negative sentiment .\",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the simplicity of the way home has few equals this side of aesop\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the simplicity of the way home has few equals this side of aesop", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\": \"simpleness , few equals , aesop\",\n    \"REASONING\": \"the input mentions the simplicity of the way home being rare and compares it to aesop 's philosophy , indicating a positive sentiment . \",\n    \"SENTIMENT\": \"Positive\"\n} ``"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : what emerges is an unsettling picture of childhood innocence combined with indoctrinated prejudice . promises is a compelling piece that demonstrates just how well children can be trained to live out and carry on their parents ' anguish .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "what emerges is an unsettling picture of childhood innocence combined with indoctrinated prejudice . promises is a compelling piece that demonstrates just how well children can be trained to live out and carry on their parents ' anguish .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"unsettling picture\", \"childhood innocence \", \"indoctrinated prejudice \", \"compelling piece \", \"parent 's anguish \", \"trained to live out and carry on \", \"parents ' anguish ],\n    \"REASONING\" : \"the sentiment of the input sentence is positive because it describes a compelling piece about childhood innocence , indoctrinated prejudice , and the impact of parental pain .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a captivatingly quirky hybrid of character portrait , romantic comedy and beat-the-clock thriller .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a captivatingly quirky hybrid of character portrait , romantic comedy and beat-the-clock thriller .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"captivatingly quirky \", \"character portrait \", \"romantic comedy \", \"beat-the-clock thriller \"],\n    \"REASONING\" : \"the input sentence mentions several genres , suggesting a positive sentiment .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : able to provide insight into a fascinating part of theater history .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "able to provide insight into a fascinating part of theater history .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"insight\", \"fascinating part\", \"theater history\"],\n    \"REASONING\" : \"positive sentiment due to positive description of subject matter\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : no better or worse than 'truth or consequences , n . m . ' or any other interchangeable actioner with imbecilic mafia toolbags botching a routine assignment in a western backwater .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "no better or worse than 'truth or consequences , n . m . ' or any other interchangeable actioner with imbecilic mafia toolbags botching a routine assignment in a western backwater .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [ \"uninspired \", \"unoriginal \", \"boring \", \"stale concept \", \"generic plot \" ],\n    \"REASONING\" : \"the review is negative because it describes the movie as uninteresting , predictable , and lacking originality .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : imagine o . henry 's < b > the gift of the magi < /b > relocated to the scuzzy underbelly of nyc 's drug scene . merry friggin ' christmas !\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "imagine o . henry 's < b > the gift of the magi < /b > relocated to the scuzzy underbelly of nyc 's drug scene . merry friggin ' christmas !", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"merry friggin ' christmas ! \", \"scuzzy underbelly of nyc 's drug scene \", \"imagine o . henry 's , relocated to the scuzzy underbelly of nyc 's drug scene . \"],\n    \"REASONING\" : \"the sentiment is negative because the comparison of the movie to the original short story is not flattering , and the language used in describing the setting is derogatory .\",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : [ the kid 's ] just too bratty for sympathy , and as the film grows to its finale , his little changes ring hollow .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "[ the kid 's ] just too bratty for sympathy , and as the film grows to its finale , his little changes ring hollow .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\": [\"bratty \", \"little changes \", \"hollow ending \"],\n    \"REASONING\": \"the sentiment is negative because it criticizes the character development and the lack of emotional depth in the story .\",\n    \"SENTIMENT\": \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a movie that 's about as overbearing and over-the-top as the family it depicts .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a movie that 's about as overbearing and over-the-top as the family it depicts .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\": [\"overbearing\", \"over-the-top\", \"overwhelmingly bad \", \"dull , tedious , predictable , boring , poorly acted , cliched , poorly directed , badly written , annoying , pointless , slow-paced , unoriginal , uninspired , dull , annoying , unimaginative , unfunny , lifeless , bad movie , dumb , stupid , bad film , bad movie , bad film , bad flick , bad movie , bad film , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie , bad movie"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the hours makes you examine your own life in much the same way its characters do , and the experience is profound . the hours is what movies are supposed to be . . .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the hours makes you examine your own life in much the same way its characters do , and the experience is profound . the hours is what movies are supposed to be . . .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : [\"deeply moving \", \"profound \", \"reflective \", \"insightful \", \"unforgettable \", \"engaging \", \"exhilarating \", \"challenging \", \"provocative \", \"thought-provoking \", \"touching \"],\n    \"REASONING\" : \"the movie has an emotional impact and offers insights into personal issues \",\n    \"SENTIMENT\" : \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : not one moment in the enterprise did n't make me want to lie down in a dark room with something cool to my brow .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "not one moment in the enterprise did n't make me want to lie down in a dark room with something cool to my brow .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"not one moment in the enterprise did 'nt , did n't make me want to lie down in a dark room with something cool to my brow . \"],\n    \"REASONING\" : \"the input is negative because it expresses disappointment with the movie .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a chiller resolutely without chills .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a chiller resolutely without chills .", "answer": "Negative", "prediction": "```\n\n{\n    \"CLUES\" : [\n        \"chiller \",\n        \"definitely negative \"\n    ],\n    \"REASONING\" : \"the sentence describes the movie as 'a chiller , ' which implies it is supposed to be scary but fails to deliver any scares . 'definitely negative ' indicates a strong negative sentiment .',\n    \"SENTIMENT\" : \"Negative\"\n} ``"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : shatner is probably the funniest person in the film , which gives you an idea just how bad it was .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "shatner is probably the funniest person in the film , which gives you an idea just how bad it was .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [ \"shatner is probably the funniest person in the film \", \"which gives you an idea just how bad it was \" ],\n    \"REASONING\" : \"the sentence describes the movie as 'bad,' implying negative sentiment .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : with a completely predictable plot , you 'll swear that you 've seen it all before , even if you 've never come within a mile of the longest yard .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "with a completely predictable plot , you 'll swear that you 've seen it all before , even if you 've never come within a mile of the longest yard .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\" : [\"predictable \", \"longest yard \", \"seen all before \", \"swore i 've seen it all before \", \"never came within a mile of the longest yard \"],\n    \"REASONING\" : \"negative sentiment due to predictability , familiarity , and lack of originality in the plot .\",\n    \"SENTIMENT\" : \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : at once half-baked and overheated .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "at once half-baked and overheated .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"half-baked\", \"overheated\"],\n    \"REASONING\" : \"Both these adjectives describe the movie 's quality , indicating it is neither well-made nor entertaining .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : all analyze that proves is that there is really only one movie 's worth of decent gags to be gleaned from the premise .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "all analyze that proves is that there is really only one movie 's worth of decent gags to be gleaned from the premise .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [ \"all analyze that proves is \", \"there is really only one movie 's worth of decent gags to be gleaned from the premise . \" ],\n    \"REASONING\" : \"the analysis does n't provide any insight into the film 's quality , and simply lists the positive aspects of the premise .\",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a grimly competent and stolid and earnest military courtroom drama .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a grimly competent and stolid and earnest military courtroom drama .", "answer": "Positive", "prediction": "```\n\n{\n    \"CLUES\" : \"grimly competent , stolid , earnest , military , courtroom drama\",\n    \"REASONING\" : \"allusions to the film 's seriousness , professionalism , and adherence to its genre suggest a negative sentiment .\",\n    \"SENTIMENT\" : \"Negative\"\n} ``"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it 's not too fast and not too slow . it 's not too racy and it 's not too offensive . it 's not too much of anything .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it 's not too fast and not too slow . it 's not too racy and it 's not too offensive . it 's not too much of anything .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [ \"not too fast \", \"not too slow \", \"not too racy \", \"not too offensive \" ],\n    \"REASONING\" : \"all these descriptions indicate a neutral , unremarkable movie . \",\n    \"SENTIMENT\" : \"Neutral / Unfavorable \"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : i admired this work a lot .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "i admired this work a lot .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : [\n        \"admired\",\n        \"work\"\n    ],\n    \"REASONING\" : \"Positive sentiment because the speaker expresses admiration for the subject matter.\",\n    \"SENTIMENT\" : \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : as a singular character study , it 's perfect . it 's also the year 's sweetest movie .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "as a singular character study , it 's perfect . it 's also the year 's sweetest movie .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"single \", \"character study \", \"perfect \", \"sweetest movie \"],\n    \"REASONING\" : \"Positive sentiment is indicated by positive language and favorable comparisons .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : in the affable maid in manhattan , jennifer lopez 's most aggressive and most sincere attempt to take movies by storm , the diva shrewdly surrounds herself with a company of strictly a-list players .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "in the affable maid in manhattan , jennifer lopez 's most aggressive and most sincere attempt to take movies by storm , the diva shrewdly surrounds herself with a company of strictly a-list players .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"affable \", \"maid in manhattan \", \"jennifer lopez \", \"diva shrewdly surrounds herself with a company of strictly a-list players .\"],\n    \"REASONING\" : \"Positive \",\n    \"SENTIMENT\" : \"Positive \"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : some movies can get by without being funny simply by structuring the scenes as if they were jokes : a setup , delivery and payoff . stealing harvard ca n't even do that much . each scene immediately succumbs to gravity and plummets to earth .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "some movies can get by without being funny simply by structuring the scenes as if they were jokes : a setup , delivery and payoff . stealing harvard ca n't even do that much . each scene immediately succumbs to gravity and plummets to earth .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\n        \"some movies can get by without being funny \",\n        \"each scene immediately succumbs to gravity and plummets to earth \"\n    ],\n    \"REASONING\" : \"the movie is not funny and its humor does not work \",\n    \"SENTIMENT\" : \"Negative \"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the warm presence of zhao benshan makes the preposterous lying hero into something more than he reasonably should be .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the warm presence of zhao benshan makes the preposterous lying hero into something more than he reasonably should be .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"the warm presence \", \"zhao benshan \", \"preposterous lying hero \", \"something more than he reasonably should be . \"],\n    \"REASONING\" : \"Positive sentiment because the positive aspects of the character outweigh any flaws \",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a mostly believable , refreshingly low-key and quietly inspirational little sports drama .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a mostly believable , refreshingly low-key and quietly inspirational little sports drama .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"believable \", \"refreshingly low-key \", \"quietly inspirational \", \"little sports drama \"],\n    \"REASONING\" : \"Positive sentiment because the input describes an inspiring little sports drama that is also low-key and believable .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : reeks of rot and hack work from start to finish .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "reeks of rot and hack work from start to finish .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"reeks\", \"rot\", \"hack work\", \"start to finish\"],\n    \"REASONING\" : \"the negative words used in the review indicate a negative sentiment\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the film may not hit as hard as some of the better drug-related pictures , but it still manages to get a few punches in .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the film may not hit as hard as some of the better drug-related pictures , but it still manages to get a few punches in .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [ \"film hits \", \"better drug-related pictures \", \"get a few punches in \" ],\n    \"REASONING\" : \"Positive because the movie does n't take itself too seriously and provides entertainment value . \",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : skillfully weaves both the elements of the plot and a powerfully evocative mood combining heated sexuality with a haunting sense of malaise .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "skillfully weaves both the elements of the plot and a powerfully evocative mood combining heated sexuality with a haunting sense of malaise .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : [\n        \"skillfully \",\n        \"weaves \",\n        \"both the elements of the plot \",\n        \"and a powerfully evocative mood \",\n        \"combining heated sexuality with a haunting sense of malaise . \"\n    ],\n    \"REASONING\" : \"the input contains positive words like 'skillfully , ' 'powerfully evocative , ' and 'haunting sense of malaise , ' which indicate a positive sentiment . Positive words such as 'skillfully , ' 'powerfully evocative , ' and 'haunting sense of malaise ' are used in the analysis to support the sentiment of the input . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words indicate a positive sentiment . Positive words"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a quasi-documentary by french filmmaker karim dridi that celebrates the hardy spirit of cuban music .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a quasi-documentary by french filmmaker karim dridi that celebrates the hardy spirit of cuban music .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"quasi-documentary\", \"french filmmaker , karim drizi \", \"cuban music\"],\n    \"REASONING\" : \"the film is a positive celebration of the culture and music of cuba , with a focus on its people and their traditions .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : an almost unbearably morbid love story .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "an almost unbearably morbid love story .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : \"almost unbearably morbid , love story\",\n    \"REASONING\" : \"the movie is about a sad love affair between two people who are terminally ill with cancer \",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : delivers more than its fair share of saucy hilarity .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "delivers more than its fair share of saucy hilarity .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"delivers\", \"saucy\", \"hilarity\"],\n    \"REASONING\" : \"Positive\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : feeling like a dope has rarely been more fun than it is in nine queens .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "feeling like a dope has rarely been more fun than it is in nine queens .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"dopey \", \"funny \", \"dopey , \" \"funny \" ],\n    \"REASONING\" : \"Positive sentiment because the sentence is praising the movie 's humor .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : compelling revenge thriller , though somewhat weakened by a miscast leading lady .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "compelling revenge thriller , though somewhat weakened by a miscast leading lady .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [ \"compelling \", \"revenge thriller \", \"missed opportunity \", \"weaknesses \", \"misspellings \" ],\n    \"REASONING\" : \"the movie is about a woman seeking vengeance after her husband 's death , but it seems like a missed opportunity . Negative sentiments arise due to misspellings in the title and the fact that the film feels weak despite its strong themes . Positive sentiments come from the idea of a strong-willed woman seeking justice . \",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : with a confrontational stance , todd solondz takes aim on political correctness and suburban families .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "with a confrontational stance , todd solondz takes aim on political correctness and suburban families .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"confrontational\", \"political correctness\", \"suburban families\"],\n    \"REASONING\" : \"the movie is critical of these issues and portrays them in an unflattering light\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the woodman seems to have directly influenced this girl-meets-girl love story , but even more reassuring is how its makers actually seem to understand what made allen 's romantic comedies so pertinent and enduring .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the woodman seems to have directly influenced this girl-meets-girl love story , but even more reassuring is how its makers actually seem to understand what made allen 's romantic comedies so pertinent and enduring .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : \"the woodman , positive influences , relevant and enduring \",\n    \"REASONING\" : \"the film has direct influence , positive message , and is well received by audiences \",\n    \"SENTIMENT\" : \"Positive\"\n} ``"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the hours , a delicately crafted film , is an impressive achievement in spite of a river of sadness that pours into every frame .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the hours , a delicately crafted film , is an impressive achievement in spite of a river of sadness that pours into every frame .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\n        \"delicately crafted\",\n        \"precisely tailored\",\n        \"intimate drama\",\n        \"slowly building\"\n    ],\n    \"REASONING\" : \"Positive sentiment because the film is praised for its craftsmanship , precision , intimacy , and slow development . \",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a solidly constructed , entertaining thriller that stops short of true inspiration .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a solidly constructed , entertaining thriller that stops short of true inspiration .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : [\"solidly constructed \", \"entertaining \", \"thriller \", \"true inspiration \"],\n    \"REASONING\" : \"Positive because it is well-made , enjoyable , and not overly ambitious .\",\n    \"SENTIMENT\" : \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : an incredibly irritating comedy about thoroughly vacuous people . . . manages to embody the worst excesses of nouvelle vague without any of its sense of fun or energy .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "an incredibly irritating comedy about thoroughly vacuous people . . . manages to embody the worst excesses of nouvelle vague without any of its sense of fun or energy .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"irritating \", \"completely vacuous \", \"unfunny \", \"energyless \"],\n    \"REASONING\" : \"Negative sentiment is inferred due to the use of negative adjectives in describing the film , as well as the fact that it lacks energy and humor .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : has something to say . . . but it is a statement and issue worthy of a much more thoughtfulness and insight than a melodramatic and wholly predictable thriller .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "has something to say . . . but it is a statement and issue worthy of a much more thoughtfulness and insight than a melodramatic and wholly predictable thriller .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"statement\", \"issue\", \"thoughtfulness\", \"insight\", \"melodrama\", \"predictable \", \"thriller\"],\n    \"REASONING\" : \"the film is about an individual who tries to make sense of his life , but ultimately fails because he does n't have enough knowledge or empathy to do so \",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it 's a gag that 's worn a bit thin over the years , though do n't ask still finds a few chuckles .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it 's a gag that 's worn a bit thin over the years , though do n't ask still finds a few chuckles .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\": \"wears a bit thin , finds a few chuckles\",\n    \"REASONING\": \"negative tone and mention of humor being a negative aspect\",\n    \"SENTIMENT\": \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : oedekerk wrote patch adams , for which he should not be forgiven . why he was given free reign over this project -- he wrote , directed , starred and produced -- is beyond me .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "oedekerk wrote patch adams , for which he should not be forgiven . why he was given free reign over this project -- he wrote , directed , starred and produced -- is beyond me .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"negative review \", \"critic \" , \"negative criticism \" , \"negative opinion \" , \"negative assessment \" ],\n    \"REASONING\" : \"the negative tone of the review suggests a negative sentiment towards the film \",\n    \"SENTIMENT\" : \"Negative \"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a gorgeously strange movie , heaven is deeply concerned with morality , but it refuses to spell things out for viewers .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a gorgeously strange movie , heaven is deeply concerned with morality , but it refuses to spell things out for viewers .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"gorgeously strange movie\", \"heaven is deeply concerned with morality\", \"refuses to spell things out for viewers\"],\n    \"REASONING\" : \"the input describes a film that is visually unique and thought-provoking , yet does not provide explicit moral lessons\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : from spiritual rebirth to bruising defeat , vincent 's odyssey resonates in a profound way , comparable to the classic films of jean renoir .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "from spiritual rebirth to bruising defeat , vincent 's odyssey resonates in a profound way , comparable to the classic films of jean renoir .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\": [\"spiritual rebirth \", \"bruising defeat \", \"odyssey \", \"profound way \", \"classic films \", \"jean renoir \"],\n    \"REASONING\": \"Positive because it discusses a significant topic with depth and emotion .\",\n    \"SENTIMENT\": \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the low-key direction is pleasingly emphatic in this properly intense , claustrophobic tale of obsessive love .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the low-key direction is pleasingly emphatic in this properly intense , claustrophobic tale of obsessive love .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : [\"pleasingly emphatic\", \"intense \", \"claustrophobic \", \"obsessive love .\"],\n    \"REASONING\" : \"Positive sentiment because it highlights positive aspects of the movie .\",\n    \"SENTIMENT\" : \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the story the movie tells is of brian de palma 's addiction to the junk-calorie suspense tropes that have all but ruined his career .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the story the movie tells is of brian de palma 's addiction to the junk-calorie suspense tropes that have all but ruined his career .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"addiction \", \"junk-calorie \", \"tropes \", \"career \"],\n    \"REASONING\" : \"Negative sentiment towards the film 's reliance on old-fashioned thriller cliches and its supposed decline in quality .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : not really bad so much as distasteful : we need kidnapping suspense dramas right now like we need doomsday thrillers .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "not really bad so much as distasteful : we need kidnapping suspense dramas right now like we need doomsday thrillers .", "answer": "Negative", "prediction": "```\n\n{\n    \"CLUES\" : [ \"distasteful \", \"dismal \", \"boring \", \"unbelievable \", \"terrible \" ],\n    \"REASONING\" : \"the input contains negative words such as 'distasteful , ' 'boring , ' and 'terrible . ' this indicates a negative sentiment . Positive sentiment would involve positive words such as 'amazing , ' 'entertaining , ' etc . . . Positive sentiment is not applicable in this case . Negative sentiment is . Negative sentiment is expressed by the phrase 'not really bad so much as distasteful . ' Negative sentiment is also indicated by the fact that it takes two pages to describe how terrible the movie is . Negative sentiment is further supported by the fact that the word 'distasteful ' appears twice in the input . Negative sentiment is also indicated by the fact that the input does n't contain any positive words . Negative sentiment is also indicated by the fact that the input mentions only one thing that could be considered good about the movie -- it 's not really bad . Negative sentiment is also indicated by the fact that the input uses the word 'terrible ' three times . Negative sentiment is also indicated by the fact that the input states that the movie is 'terribly boring . ' Negative sentiment is also indicated by the fact that the input states that the movie is 'terribly stupid . ' Negative sentiment is also indicated by the fact that the input states that the movie is 'terribly unbelievable . ' Negative sentiment is also indicated by the fact that the input states that the movie is 'terribly disappointing . Negative sentiment is also indicated by the fact that the input states that the movie is 'terribly annoying . Negative sentiment is also indicated by the fact that the input states that the movie is 'terribly tedious . Negative sentiment is also indicated by the fact that the input states that the movie is 'terribly unfunny . Negative sentiment is also indicated by the fact that the input states that the movie is 'terribly uneventful . Negative sentiment is also indicated by the fact that the input states that the movie is 'terribly predictable . Negative sentiment is also indicated by the fact that the input states that the movie is 'terribly unrealistic . Negative sentiment is also indicated by the fact that the input states that the movie is 'terribly clichM-id . Negative sentiment is also indicated by the fact that the input states that the movie is 'terribly contrived . Negative sentiment is also indicated by the fact that the"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : maggie smith as the ya-ya member with the o2-tank will absolutely crack you up with her crass , then gasp for gas , verbal deportment .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "maggie smith as the ya-ya member with the o2-tank will absolutely crack you up with her crass , then gasp for gas , verbal deportment .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"maggie smith \", \"ya-ya member \", \"o2-tank \", \"crass \", \"then gasp for gas \", \"verbal deportment \"],\n    \"REASONING\" : \"the review is positive because it describes the movie as funny and entertaining .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : resident evil is what comes from taking john carpenter 's ghosts of mars and eliminating the beheadings . in other words , about as bad a film you 're likely to see all year .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "resident evil is what comes from taking john carpenter 's ghosts of mars and eliminating the beheadings . in other words , about as bad a film you 're likely to see all year .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"negative \", \"bad \" ],\n    \"REASONING\" : \"the sentence contains negative words such as 'negative ' and 'bad ' which indicate a negative sentiment \",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : there 's a whole heap of nothing at the core of this slight coming-of-age/coming-out tale .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "there 's a whole heap of nothing at the core of this slight coming-of-age/coming-out tale .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"nothing at the core \", \"slight coming-of-age/coming-out tale\"],\n    \"REASONING\" : \"Negative sentiment is inferred because the phrase \\\"there 's a whole heap of nothing\\\" suggests a lack of substance , while the description of it being a \\\"slight coming-of-age/coming-out tale\\\" implies it is too simplistic for its intended audience .\",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the actors improvise and scream their way around this movie directionless , lacking any of the rollicking dark humor so necessary to make this kind of idea work on screen .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the actors improvise and scream their way around this movie directionless , lacking any of the rollicking dark humor so necessary to make this kind of idea work on screen .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"the actors improvise and scream their way around this movie\", \"directionless \", \"lacking any of the rollicking dark humor \", \"make this kind of idea work on screen \"],\n    \"REASONING\" : \"the sentiment is negative because it describes the movie as directionless and lacking in humor .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : as the sulking , moody male hustler in the title role , [ franco ] has all of dean 's mannerisms and self-indulgence , but none of his sweetness and vulnerability .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "as the sulking , moody male hustler in the title role , [ franco ] has all of dean 's mannerisms and self-indulgence , but none of his sweetness and vulnerability .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\" : [\"sulking \", \"moody \", \"male \", \"hustler \", \"title role \", \"all of \", \"self-indulgence \", \"but none of his sweetness and vulnerability \"],\n    \"REASONING\" : \"the review suggests that the performance is not convincing enough and that there is no depth to the character . \",\n    \"SENTIMENT\" : Negative\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it 's fairly self-aware in its dumbness .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it 's fairly self-aware in its dumbness .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"dumbness\", \"self-awareness\"],\n    \"REASONING\" : \"the film acknowledges its own foolishness , which is what makes it funny\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : director claude chabrol has become the master of innuendo . it is not what you see , it is what you think you see .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "director claude chabrol has become the master of innuendo . it is not what you see , it is what you think you see .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\": \"director , claude chabrol , master of innuendo , sees , thinks , interpretation \",\n    \"REASONING\": \"Positive because it describes a positive aspect of the film , which is its ability to be interpreted in many different ways . Positive sentiment .\",\n    \"SENTIMENT\": \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : . . . a magnificent drama well worth tracking down .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": ". . . a magnificent drama well worth tracking down .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : [ \"magnificent \", \"drama \", \"track down \" ],\n    \"REASONING\" : \"the review describes the film positively , suggesting it is an excellent movie with a strong message .\",\n    \"SENTIMENT\" : \"Positive\"\n} ``"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : despite bearing the paramount imprint , it 's a bargain-basement european pickup . what 's hard to understand is why anybody picked it up . wiser souls would have tactfully pretended not to see it and left it lying there\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "despite bearing the paramount imprint , it 's a bargain-basement european pickup . what 's hard to understand is why anybody picked it up . wiser souls would have tactfully pretended not to see it and left it lying there", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"bargain-basement european pickup \", \"hard to understand why anyone picked it up \"],\n    \"REASONING\" : \"the review is negative and critical of the film , suggesting that it did n't meet expectations or was disappointing in some way .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : dismally dull sci-fi comedy .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "dismally dull sci-fi comedy .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"disgusting \", \"boring \", \"stupid \", \"dull \", \"uninspired \", \"predictable \", \"bad movie , \"],\n    \"REASONING\" : \"the sentence contains negative adjectives such as 'disgusting ,' 'boring ,' 'stupid ,' 'dull ,' 'uninspired ,' 'predictable ,' and 'bad movie , ' which indicate a negative sentiment .',\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : sex with strangers is fascinating . . .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "sex with strangers is fascinating . . .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"fascinating \", \"interesting \"],\n    \"REASONING\" : \"Positive sentiment because the word 'fascinating ' indicates admiration for the subject matter , while 'interesting ' suggests intrigue about the characters and plot.\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : this clever caper movie has twists worthy of david mamet and is enormous fun for thinking audiences .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "this clever caper movie has twists worthy of david mamet and is enormous fun for thinking audiences .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : [\n        \"clever \",\n        \"twists \",\n        \"worthy \"\n    ],\n    \"REASONING\" : \"Positive\",\n    \"SENTIMENT\" : \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : jonathan parker 's bartleby should have been the be-all-end-all of the modern-office anomie films .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "jonathan parker 's bartleby should have been the be-all-end-all of the modern-office anomie films .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [ \"negative \", \"unfavorable \", \"disapproving \" ],\n    \"REASONING\" : \"the film is critical of its characters and their situations , but does n't offer any solutions . \",\n    \"SENTIMENT\" : \"Negative \"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : to honestly address the flaws inherent in how medical aid is made available to american workers , a more balanced or fair portrayal of both sides will be needed .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "to honestly address the flaws inherent in how medical aid is made available to american workers , a more balanced or fair portrayal of both sides will be needed .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\": \"to honestly address the flaws , make balanced or fair portrayal , needs more time , to honestly address , needs more time \",\n    \"REASONING\": \"the input suggests that there may not be enough time to provide an honest and balanced view of the issue .\",\n    \"SENTIMENT\": \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the reason i found myself finally unmoved by this film , which is immaculately produced and has serious things to say , is that it comes across rather too plainly as allegory .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the reason i found myself finally unmoved by this film , which is immaculately produced and has serious things to say , is that it comes across rather too plainly as allegory .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\" : [ \"unmoved \", \"allegory \" ],\n    \"REASONING\" : \"the film does n't have enough depth or complexity to be considered allegory , but its plain message makes it seem like one . \",\n    \"SENTIMENT\" : \"Negative \"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : ultimately , the film amounts to being lectured to by tech-geeks , if you 're up for that sort of thing .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "ultimately , the film amounts to being lectured to by tech-geeks , if you 're up for that sort of thing .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [ \"ultimately \", \"the film \", \"amounts to being lectured to by tech-geeks \", \"if you 're up for that sort of thing \" ],\n    \"REASONING\" : \"The input suggests that the movie is perceived as preachy and uninteresting .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : another wholly unnecessary addition to the growing , moldering pile of , well , extreme stunt pictures .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "another wholly unnecessary addition to the growing , moldering pile of , well , extreme stunt pictures .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"unecessary \", \"moldering pile \", \"extreme stunt pictures \"],\n    \"REASONING\" : \"negative sentiment due to criticism of the film 's excessive stunts\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the screenplay sabotages the movie 's strengths at almost every juncture . all the characters are stereotypes , and their interaction is numbingly predictable .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the screenplay sabotages the movie 's strengths at almost every juncture . all the characters are stereotypes , and their interaction is numbingly predictable .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"negative feedback \", \"predictable \", \"numbingly ], \"REASONING\" : \"the review states that the screenplay is bad and that the characters are stereotypes and that there is little interaction between them , which are all negative aspects of the movie . Positive . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative . Negative"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the film 's maudlin focus on the young woman 's infirmity and her naive dreams play like the worst kind of hollywood heart-string plucking .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the film 's maudlin focus on the young woman 's infirmity and her naive dreams play like the worst kind of hollywood heart-string plucking .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\": \"maudlin , heart-string plucking , worst kind \",\n    \"REASONING\": \"the film is criticized for its overly sentimental approach and reliance on clichM-is .\",\n    \"SENTIMENT\": \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the film is reasonably entertaining , though it begins to drag two-thirds through , when the melodramatic aspects start to overtake the comedy .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the film is reasonably entertaining , though it begins to drag two-thirds through , when the melodramatic aspects start to overtake the comedy .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"entertaining\", \"begins to drag\", \"melodramatic aspects\", \"overtake the comedy\"],\n    \"REASONING\" : \"the film has some enjoyable moments but ultimately becomes too serious for its own good\",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : if the film fails to fulfill its own ambitious goals , it nonetheless sustains interest during the long build-up of expository material .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "if the film fails to fulfill its own ambitious goals , it nonetheless sustains interest during the long build-up of expository material .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"build-up of expository material\", \"failures \", \"sustains interest\"],\n    \"REASONING\" : \"the film 's ambition is questioned but still manages to hold the audience 's attention\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a resonant tale of racism , revenge and retribution .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a resonant tale of racism , revenge and retribution .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : [\"resonance \", \"racism \", \"revenge \", \"retribution \"],\n    \"REASONING\" : \"all these elements create a powerful emotional impact \",\n    \"SENTIMENT\" : \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : [ davis ] has a bright , chipper style that keeps things moving , while never quite managing to connect her wish-fulfilling characters to the human race .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "[ davis ] has a bright , chipper style that keeps things moving , while never quite managing to connect her wish-fulfilling characters to the human race .", "answer": "Negative", "prediction": "```\n\n{\n    \"CLUES\" : [\n        \"bright \",\n        \"chipper style \",\n        \"human race \"\n    ],\n    \"REASONING\" : \"the film 's optimistic tone and lack of character development make it difficult to connect with the characters and their journey .\",\n    \"SENTIMENT\" : \"Negative\"\n} ``"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : sometimes it feels as if it might have been made in the '70s or '80s , and starred chevy chase and goldie hawn .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "sometimes it feels as if it might have been made in the '70s or '80s , and starred chevy chase and goldie hawn .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [ \"feels like it might have been made in the '70s or '80s \", \"starred chevy chase and goldie hawn \" ],\n    \"REASONING\" : \"the movie has a retro feel and features characters who are similar to those seen in comedies from that era . \",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : intended to be a comedy about relationships , this wretched work falls flat in just about every conceivable area .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "intended to be a comedy about relationships , this wretched work falls flat in just about every conceivable area .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"intended to be a comedy about relationships \", \"this wretched work \", \"falls flat in just about every conceivable area \"],\n    \"REASONING\" : \"the input is negative because it criticizes the movie for being neither funny nor enjoyable \",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : so brisk is wang 's pacing that none of the excellent cast are given air to breathe .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "so brisk is wang 's pacing that none of the excellent cast are given air to breathe .", "answer": "Negative", "prediction": "```\n\n```\n{\n    \"CLUES\" : [ \"so brisk \", \"wang 's pacing \", \"none of the excellent cast are given air to breathe \" ],\n    \"REASONING\" : \"the input sentence describes a negative experience with the film , specifically its pacing and lack of character development . \",\n    \"SENTIMENT\" : \"Negative \"\n} ``\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a deftly entertaining film , smartly played and smartly directed .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a deftly entertaining film , smartly played and smartly directed .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"entertaining \", \"smartly played \", \"smartly directed \"],\n    \"REASONING\" : \"Positive sentiment because the movie is described as 'definitely enjoyable , ' with positive qualities such as being 'smartly played ' and 'smartly directed . '\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : while holm is terrific as both men and hjejle quite appealing , the film fails to make the most out of the intriguing premise .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "while holm is terrific as both men and hjejle quite appealing , the film fails to make the most out of the intriguing premise .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\" : [ \"terrible \", \"fails to make the most out of the intriguing premise \" ],\n    \"REASONING\" : \"the movie is negative because it is critical of its own premise and characters .\",\n    \"SENTIMENT\" : \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : while tattoo borrows heavily from both seven and the silence of the lambs , it manages to maintain both a level of sophisticated intrigue and human-scale characters that suck the audience in .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "while tattoo borrows heavily from both seven and the silence of the lambs , it manages to maintain both a level of sophisticated intrigue and human-scale characters that suck the audience in .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"inspired by \", \"borrowing \", \"human-scale characters \", \"maintain \", \"level of sophistication \", \"intrigue \", \"sophisticated \", \"level of intrigue \", \"introduce \"],\n    \"REASONING\" : \"the film is cleverly structured and well-written , with memorable characters and an intriguing plot .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the film overcomes the regular minefield of coming-of-age cliches with potent doses of honesty and sensitivity .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the film overcomes the regular minefield of coming-of-age cliches with potent doses of honesty and sensitivity .", "answer": "Positive", "prediction": "```\n\n`` Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : alain choquart 's camera barely stops moving , portraying both the turmoil of the time and giving conduct a perpetual sense of urgency , which , for a film that takes nearly three hours to unspool , is both funny and irritating .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "alain choquart 's camera barely stops moving , portraying both the turmoil of the time and giving conduct a perpetual sense of urgency , which , for a film that takes nearly three hours to unspool , is both funny and irritating .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : [\"stale , uneventful , repetitive , lacks excitement , tedious , dull , slow paced , long-winded , uninspired , formulaic , clichM-id , unfocused , contrived , melodramatic , heavy-handed , preachy , pretentious , slow-moving , plodding , laborious , tiresome , predictable , overlong , overly-long , draggy , tedious , boring , uninspiring , lifeless , flat , lethargic , insipid , drab , bland , monotonous , unengaging , soulless , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite , trite ,"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : . . . would be a total loss if not for two supporting performances taking place at the movie 's edges .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": ". . . would be a total loss if not for two supporting performances taking place at the movie 's edges .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [ \"would be a total loss if not for two supporting performances taking place at the movie 's edges . \" ],\n    \"REASONING\" : \"Positive sentiment is inferred because there are two positive elements mentioned in the sentence , and the tone is enthusiastic . \",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : this documentary is a dazzling , remarkably unpretentious reminder of what [ evans ] had , lost , and got back .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "this documentary is a dazzling , remarkably unpretentious reminder of what [ evans ] had , lost , and got back .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\": \"dazzling , remarkable , unpretentious , reminder , lost , got back \",\n    \"REASONING\": \"the movie is described as a 'dazzling , remarkably unpretentious reminder of what [ evans ] had , lost , and got back . ' this suggests a positive sentiment .\",\n    \"SENTIMENT\": \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : even if you 've seen `` stomp `` ( the stage show ) , you still have to see this !\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "even if you 've seen `` stomp `` ( the stage show ) , you still have to see this !", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"even if you 've seen `` stomp `` ( the stage show ) , you still have to see this ! ],\n    \"REASONING\" : \"the statement is an argument in favor of seeing the film , suggesting that even if one has already experienced a similar production , it remains worth checking out . \",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : for all the charm of kevin kline and a story that puts old-fashioned values under the microscope , there 's something creepy about this movie .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "for all the charm of kevin kline and a story that puts old-fashioned values under the microscope , there 's something creepy about this movie .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"charming \", \"creepy \", \"old-fashioned values \", \"under the microscope \", \"creepy stuff \"],\n    \"REASONING\" : \"The input mentions positive aspects like Kevin Kline and an interesting story with values being looked at . Negative elements mentioned include creepiness and creepy stuff .\",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : one of the more irritating cartoons you will see this , or any , year .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "one of the more irritating cartoons you will see this , or any , year .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\" : [ \"irritating \", \"year \" ],\n    \"REASONING\" : \"negative sentiment is associated with negative words and events mentioned in the text .\",\n    \"SENTIMENT\" : \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : reminiscent of alfred hitchcock 's thrillers , most of the scary parts in 'signs ' occur while waiting for things to happen .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "reminiscent of alfred hitchcock 's thrillers , most of the scary parts in 'signs ' occur while waiting for things to happen .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [ \"reminiscent \", \"alfred hitchcock 's thrillers \", \"scary parts \", \"waiting for things to happen \" ],\n    \"REASONING\" : \"the sentence describes the movie as being like a thriller , with scary moments , and mentions how long it takes for things to happen , which is common in thrillers . \",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : plot , characters , drama , emotions , ideas -- all are irrelevant to the experience of seeing the scorpion king .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "plot , characters , drama , emotions , ideas -- all are irrelevant to the experience of seeing the scorpion king .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : \"plot , characters , drama , emotions , ideas -- all are irrelevant \",\n    \"REASONING\" : \"the input is negative because it expresses dissatisfaction with the movie 's lack of substance\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : enticing and often funny documentary .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "enticing and often funny documentary .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"inspiring , touching , funny , informative , engaging , humorous , positive , uplifting , inspiring , thought-provoking , educational , moving , inspirational , heartwarming , memorable , enjoyable , enlightening , entertaining , insightful , sweet , positive , inspiring , heart-felt , moving , thoughtful , enjoyable , heartfelt , memorable , sweet , heartwarming , thought-provoking , memorable , sweet , heart-felt , touching , delightful , uplifting , sweet , positive , touching , heart-felt , joyful , uplifting , sweet , positive , sweet , joyful , heart-felt , positive , joyous , sweet , positive , heart-felt , sweet , heart-warming , sweet , touching , sweet , uplifting , sweet , heart-felt , heartwarming , touching , sweet , sweet , touching , sweet , heart-felt , touching , sweet , touching , sweet , heart-felt , touching , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet , sweet"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the wild thornberrys movie has all the sibling rivalry and general family chaos to which anyone can relate .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the wild thornberrys movie has all the sibling rivalry and general family chaos to which anyone can relate .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : [\"the wild thornberrys movie \", \"sibling rivalry \", \"general family chaos \", \"anyone can relate \"],\n    \"REASONING\" : \"Positive sentiment because it highlights the importance of family bonds and shared experiences\",\n    \"SENTIMENT\" : Positive\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : . . . brian de palma is utterly mad : cinema mad , set-piece mad , style mad . it 's a beautiful madness .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": ". . . brian de palma is utterly mad : cinema mad , set-piece mad , style mad . it 's a beautiful madness .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"cinema mad \", \"set-piece mad \", \"style mad \"],\n    \"REASONING\" : \"Positive because the movie is praised for being 'beautiful madness , ' which implies that it is innovative and visually striking , despite its unconventional approach to storytelling .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a quiet , pure , elliptical film\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a quiet , pure , elliptical film", "answer": "Positive", "prediction": "{\n    \"CLUES\" : \"quiet , pure , elliptical film\",\n    \"REASONING\" : \"the film is described as 'pure,' which implies it is sincere and honest . 'elliptical ' suggests the story may be complex but not overly so .',\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it 's a familiar story , but one that is presented with great sympathy and intelligence .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it 's a familiar story , but one that is presented with great sympathy and intelligence .", "answer": "Positive", "prediction": "```\n\n{\n    \"CLUES\" : [ \"familiar story \", \"sympathy \", \"intelligence \" ],\n    \"REASONING\" : \"Positive sentiment because the film presents an interesting and sympathetic perspective on the subject matter .\",\n    \"SENTIMENT\" : \"Positive\"\n} ``"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : . . . an otherwise intense , twist-and-turn thriller that certainly should n't hurt talented young gaghan 's resume .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": ". . . an otherwise intense , twist-and-turn thriller that certainly should n't hurt talented young gaghan 's resume .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"intense \", \"twist-and-turn thriller \", \"surely should n't hurt \", \"talented young gaghan 's resume \"],\n    \"REASONING\" : \"Positive sentiment because the review is praising the film and its potential for the lead actor.\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : is not so much a work of entertainment as it is a unique , well-crafted psychological study of grief .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "is not so much a work of entertainment as it is a unique , well-crafted psychological study of grief .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"unique \", \"well-crafted \", \"psychological study \", \"grief \"],\n    \"REASONING\" : \"Positive sentiment because the movie is praised for its quality and emotional depth .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the movie just has too much on its plate to really stay afloat for its just under ninety minute running time .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the movie just has too much on its plate to really stay afloat for its just under ninety minute running time .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\" : [ \"movie just has too much on its plate \", \"stays afloat , \" \"running time \" ],\n    \"REASONING\" : \"the movie is weighed down by its own ambition and the film 's length , which prevents it from fully engaging the audience . \",\n    \"SENTIMENT\" : Negative\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : with not a lot of help from the screenplay ( proficient , but singularly cursory ) , [ testud ] acts with the feral intensity of the young bette davis .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "with not a lot of help from the screenplay ( proficient , but singularly cursory ) , [ testud ] acts with the feral intensity of the young bette davis .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : [\"helpful \", \"screenplay \", \"singularly cursory \", \"acts with the feral intensity of the young bette davis .\"],\n    \"REASONING\" : \"the review is negative because it criticizes the screenplay for being weak and the performance by testud being too intense.\",\n    \"SENTIMENT\" : Negative\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : analyze that regurgitates and waters down many of the previous film 's successes , with a few new swings thrown in .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "analyze that regurgitates and waters down many of the previous film 's successes , with a few new swings thrown in .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : \"analyze \", \"regurgitates \", \"waters down \", \"successes \", \"swings thrown in \",\n    \"REASONING\" : \"the input is negative because it criticizes the film for being similar to its predecessors\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : 'pocas ideas interesantes , un final pseudo mM-mstico que no corresponde al tono general del filme y que deja una sensaciM-sn de inconformidad que hace pensar mM-as de una vez si vale la pena ir a la taquilla y reclamar el precio del boleto . '\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "'pocas ideas interesantes , un final pseudo mM-mstico que no corresponde al tono general del filme y que deja una sensaciM-sn de inconformidad que hace pensar mM-as de una vez si vale la pena ir a la taquilla y reclamar el precio del boleto . '", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"pocas ideas interesantes \", \"un final pseudo M-mstico \", \"no corresponde al tono general del filme \", \"sensaciM-sn de inconformidad \", \"valerM-a el dinero \", \"reclamar el precio del boleto \"],\n    \"REASONING\" : \"the film is not very interesting and does n't have a satisfying conclusion . it makes you feel like paying for your ticket is a waste of money .\",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : uno de los policiales mM-as interesantes de los M-zltimos tiempos .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "uno de los policiales mM-as interesantes de los M-zltimos tiempos .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"policiales\", \"interesantes\", \"ultimos tiempos\"],\n    \"REASONING\" : \"Positive\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the result is mesmerizing -- filled with menace and squalor .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the result is mesmerizing -- filled with menace and squalor .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"mesmerizing\", \"filled with menace and squalor\"],\n    \"REASONING\" : \"Positive sentiment due to praise for the movie being 'mesmerizing' and describing it positively through its description of 'menace and squalor'.\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : smart and taut .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "smart and taut .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\": \"smart , taut \",\n    \"REASONING\": \"positive language used in the sentence , indicating a favorable sentiment .\",\n    \"SENTIMENT\": \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : historical dramas fused with love triangle is a well worn conceit . but this films lacks the passion required to sell the material .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "historical dramas fused with love triangle is a well worn conceit . but this films lacks the passion required to sell the material .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\": [\"historical dramas \", \"love triangle \", \"well worn \", \"conceit \", \"lacks \", \"passion \", \"sell \", \"material \"],\n    \"REASONING\": \"the movie does not have enough originality or passion to make up for its clichM-is \",\n    \"SENTIMENT\": \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : schaeffer is n't in this film , which may be why it works as well as it does .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "schaeffer is n't in this film , which may be why it works as well as it does .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"schaeffer is not in the film \", \"it works well without him \"],\n    \"REASONING\" : \"the absence of schaeffer is mentioned as one of the reasons for the film 's success\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the film delivers not just the full assault of reno 's immense wit and insight , but a time travel back to what it felt like during those unforgettably uncertain days .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the film delivers not just the full assault of reno 's immense wit and insight , but a time travel back to what it felt like during those unforgettably uncertain days .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"film delivers \", \"time travel back \", \"unforgettable days \"],\n    \"REASONING\" : \"Positive because the review is praising the film for its ability to bring back memories of uncertain times and showcase the humor and insight of its subject .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it 's no accident that the accidental spy is a solid action pic that returns the martial arts master to top form .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it 's no accident that the accidental spy is a solid action pic that returns the martial arts master to top form .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [ \"solid action pic \", \"returns the martial arts master to top form \" ],\n    \"REASONING\" : \"Positive sentiment because the movie is described as being well-made , with its star performing at his best . \",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : purely propaganda , a work of unabashed hero worship , it is nonetheless -- and likely inadvertently -- a timely and invaluable implicit reminder of the role that u . s . foreign policy has played in the rise of castro .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "purely propaganda , a work of unabashed hero worship , it is nonetheless -- and likely inadvertently -- a timely and invaluable implicit reminder of the role that u . s . foreign policy has played in the rise of castro .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\": [\"propaganda\", \"hero worship\", \"unabashed \", \"implicit reminder\", \"u . s . foreign policy \", \"role \", \"rise castro\"],\n    \"REASONING\": \"the input sentence contains positive keywords such as 'timely ' and 'valuable ', while also mentioning negative aspects like 'propaganda ' and 'hero worship . ' Positive sentiment is inferred from the fact that the movie is seen as valuable by some people , while negative sentiments are mentioned as well .',\n    \"SENTIMENT\": \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : lavishly , exhilaratingly tasteless .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "lavishly , exhilaratingly tasteless .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"lavishly \", \"exhilaratingly \", \"tasteless \"],\n    \"REASONING\" : \"The use of negative adjectives in describing the film suggests a negative sentiment .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : teen movies have really hit the skids .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "teen movies have really hit the skids .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"teen \", \"movies \", \"really \", \"hit \", \"skids \"],\n    \"REASONING\" : \"all these words indicate a negative sentiment about teen movies \",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : do not see this film .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "do not see this film .", "answer": "Negative", "prediction": "```\n\n{\n    \"CLUES\" : [],\n    \"REASONING\" : \"the sentiment is negative because the sentence states that one does n't want to see the film\",\n    \"SENTIMENT\" : \"Negative\"\n} ``"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : not far beneath the surface , this reconfigured tale asks disturbing questions about those things we expect from military epics .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "not far beneath the surface , this reconfigured tale asks disturbing questions about those things we expect from military epics .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : \"not far beneath the surface , this reconfigured tale asks disturbing questions about those things we expect from military epics .\",\n    \"REASONING\" : \"the input mentions 'military epics , ' which is a positive sentiment indicator , while the mention of 'disturbing questions ' suggests a negative sentiment .\",\n    \"SENTIMENT\" : \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : in its chicken heart , crush goes to absurd lengths to duck the very issues it raises .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "in its chicken heart , crush goes to absurd lengths to duck the very issues it raises .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [ \"in its chicken heart \", \"crush goes to absurd lengths to duck the very issues it raises . \" ],\n    \"REASONING\" : \"Negative \",\n    \"SENTIMENT\" : \"Negative \"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : feels like the work of someone who may indeed have finally aged past his prime . . . and , perhaps more than he realizes , just wants to be liked by the people who can still give him work .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "feels like the work of someone who may indeed have finally aged past his prime . . . and , perhaps more than he realizes , just wants to be liked by the people who can still give him work .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"feels like the work of someone who may indeed have finally aged past his prime . . . and , perhaps more than he realizes , just wants to be liked by the people who can still give him work .\"],\n    \"REASONING\" : \"Negative\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a simple , sometimes maddeningly slow film that has just enough charm and good acting to make it interesting , but is ultimately pulled under by the pacing and lack of creativity within .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a simple , sometimes maddeningly slow film that has just enough charm and good acting to make it interesting , but is ultimately pulled under by the pacing and lack of creativity within .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"simple , sometimes maddeningly slow \", \"interesting \", \"pacing \", \"lack of creativity \", \"pulls under \"],\n    \"REASONING\" : \"the film has some positive elements like good acting , but its pacing and lack of creativity drag it down \",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it 's excessively quirky and a little underconfident in its delivery , but otherwise this is the best 'old neighborhood ' project since christopher walken kinda romanced cyndi lauper in the opportunists .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it 's excessively quirky and a little underconfident in its delivery , but otherwise this is the best 'old neighborhood ' project since christopher walken kinda romanced cyndi lauper in the opportunists .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"quirky \", \"underconfident in its delivery \", \"best 'old neighborhood ' project since christopher walken kinda romanced cyndi lauper in the opportunists \"],\n    \"REASONING\" : \"the movie is quirky and has a positive message .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : [ n ] o matter how much good will the actors generate , showtime eventually folds under its own thinness .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "[ n ] o matter how much good will the actors generate , showtime eventually folds under its own thinness .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [ \"thinness \", \"good will \" ],\n    \"REASONING\" : \"the film is too long and does not provide enough substance to sustain interest \",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : as expected , sayles ' smart wordplay and clever plot contrivances are as sharp as ever , though they may be overshadowed by some strong performances .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "as expected , sayles ' smart wordplay and clever plot contrivances are as sharp as ever , though they may be overshadowed by some strong performances .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"smart wordplay\", \"clever plot contrivances\", \"sharp as ever\", \"overwhelmed by some strong performances\"],\n    \"REASONING\" : \"the sentiment is positive because the review highlights the strengths of the film while also acknowledging some drawbacks .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a movie that the less charitable might describe as a castrated cross between highlander and lolita .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a movie that the less charitable might describe as a castrated cross between highlander and lolita .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : \"movie , castrated , cross , highlander , lolita \",\n    \"REASONING\" : \"the movie is too long , too slow and lacks the excitement and intrigue of the original films . Negative sentiment .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : frenetic but not really funny .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "frenetic but not really funny .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [ \"frenetic \", \"not really funny \" ],\n    \"REASONING\" : \"the sentence contains two negative words , 'frenetic ' and 'not really funny , ' which suggests a negative sentiment .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : 'es en verdad una pena que mandoki estM-i realizando cintas tan malas desde hace algM-zn tiempo , pues talento tiene , pero quiM-in sabe dM-snde lo tiene escondido . '\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "'es en verdad una pena que mandoki estM-i realizando cintas tan malas desde hace algM-zn tiempo , pues talento tiene , pero quiM-in sabe dM-snde lo tiene escondido . '", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\" : [\"negative sentiment\", \"poor quality \", \"since time immemorial \", \"hidden talent \"],\n    \"REASONING\" : \"the sentence expresses disappointment in the film 's quality and suggests that it has been made before\",\n    \"SENTIMENT\" : \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the piquant story needs more dramatic meat on its bones .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the piquant story needs more dramatic meat on its bones .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\": \"the piquant story , needs , more , dramatic , meat , on , its , bones .\",\n    \"REASONING\": \"the input is negative because it criticizes the film for being lacking in drama .\",\n    \"SENTIMENT\": \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : no screen fantasy-adventure in recent memory has the showmanship of clones ' last 45 minutes .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "no screen fantasy-adventure in recent memory has the showmanship of clones ' last 45 minutes .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"screen fantasy-adventure\", \"showmanship \", \"last 45 minutes\"],\n    \"REASONING\" : \"the input describes a movie with a lackluster performance by its main character , which is not positive .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : one of those rare films that seems as though it was written for no one , but somehow manages to convince almost everyone that it was put on the screen , just for them .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "one of those rare films that seems as though it was written for no one , but somehow manages to convince almost everyone that it was put on the screen , just for them .", "answer": "Positive", "prediction": "```\n\n{\n    \"CLUES\" : [ \"rare film \", \"no one , \" \"somehow manage to convince almost everyone that it was put on the screen , just for them \" ],\n    \"REASONING\" : \"the movie is about two people who have been in love with each other since they were teenagers , and now find themselves at an impasse . Positive sentiment because the movie explores their relationship and its complexities . Negative sentiment because the characters ' situation makes it difficult to enjoy the film . \"\n} ``"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : juliette binoche 's sand is vivacious , but it 's hard to sense that powerhouse of 19th-century prose behind her childlike smile .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "juliette binoche 's sand is vivacious , but it 's hard to sense that powerhouse of 19th-century prose behind her childlike smile .", "answer": "Negative", "prediction": "`` Positive `` Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : deliberately and devotedly constructed , far from heaven is too picture postcard perfect , too neat and new pin-like , too obviously a recreation to resonate .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "deliberately and devotedly constructed , far from heaven is too picture postcard perfect , too neat and new pin-like , too obviously a recreation to resonate .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"deliberately and devotedly constructed \", \"too picture postcard perfect \", \"too neat and new pin-like \", \"too obviously a recreation \"],\n    \"REASONING\" : \"the film is not able to create an emotional connection with the audience because it is too polished and artificial .\",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : this cloying , voices-from-the-other-side story is hell .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "this cloying , voices-from-the-other-side story is hell .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"cloying \", \"voices-from-the-other-side story \", \"hell \"],\n    \"REASONING\" : \"all three words convey a negative sentiment \",\n    \"SENTIMENT\" : \"Negative \"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : britney 's performance can not be faulted . lucy 's a dull girl , that 's all .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "britney 's performance can not be faulted . lucy 's a dull girl , that 's all .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : \"britney 's performance can not be faulted . lucy 's a dull girl , that 's all .\",\n    \"REASONING\" : \"the review is positive because it praises britney 's performance and criticizes lucy 's character , which suggests that the movie is entertaining despite its flaws .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the color sense of stuart little 2 is its most immediate and most obvious pleasure , but it would count for very little if the movie were n't as beautifully shaped and as delicately calibrated in tone as it is .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the color sense of stuart little 2 is its most immediate and most obvious pleasure , but it would count for very little if the movie were n't as beautifully shaped and as delicately calibrated in tone as it is .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"pleasure \", \"most immediate \", \"most obvious pleasure \", \"movie were n't as beautifully shaped and as delicately calibrated in tone as it is .\"],\n    \"REASONING\" : \"the positive sentiment is derived from the fact that the film is praised for its beautiful imagery and careful tone control .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it appears to have been made by people to whom the idea of narrative logic or cohesion is an entirely foreign concept .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it appears to have been made by people to whom the idea of narrative logic or cohesion is an entirely foreign concept .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"people \", \"foreign concept \", \"idea narrative logic cohesion \", \"entirely \"],\n    \"REASONING\" : \"the sentence contains negative words like 'foreign ', 'entirely ' , 'completely ' , and suggests that the movie does n't follow any kind of plot or coherence .\",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : an eye-boggling blend of psychedelic devices , special effects and backgrounds , 'spy kids 2 ' is a visual treat for all audiences .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "an eye-boggling blend of psychedelic devices , special effects and backgrounds , 'spy kids 2 ' is a visual treat for all audiences .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"visual treat \", \"eye-boggling \", \"psychedelic devices \", \"special effects \", \"backgrounds \", \"audience . Positive or Negative : Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive Positive"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : director chris eyre is going through the paces again with his usual high melodramatic style of filmmaking .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "director chris eyre is going through the paces again with his usual high melodramatic style of filmmaking .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : \"director , chris eyre , usual , high , melodramatic style , filmmaking \",\n    \"REASONING\" : \"the sentence mentions negative aspects of the film , such as its high melodramatic style and low quality . Negative sentiment detected .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it is a film that will have people walking out halfway through , will encourage others to stand up and applaud , and will , undoubtedly , leave both camps engaged in a ferocious debate for years to come .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it is a film that will have people walking out halfway through , will encourage others to stand up and applaud , and will , undoubtedly , leave both camps engaged in a ferocious debate for years to come .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : [\"film \", \"people \", \"walking out \", \"standing up \", \"applauding \", \"debate \", \"years \", \"engaged \", \"ferocious \"],\n    \"REASONING\" : \"Positive sentiment because the film has elements of both positive and negative responses from its audience .\",\n    \"SENTIMENT\" : \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it 's mildly amusing , but i certainly ca n't recommend it .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it 's mildly amusing , but i certainly ca n't recommend it .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\" : \"mildly amusing , certainly not recommendable\",\n    \"REASONING\" : \"the input is negative because it states that the movie is neither amusing nor recommended\",\n    \"SENTIMENT\" : \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : [ less a movie than ] an appalling , odoriferous thing . . . so rotten in almost every single facet of production that you 'll want to crawl up your own * * * in embarrassment .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "[ less a movie than ] an appalling , odoriferous thing . . . so rotten in almost every single facet of production that you 'll want to crawl up your own * * * in embarrassment .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : \"abhorrent , odorous , awful , repulsive , disgusting \",\n    \"REASONING\" : \"negative sentiment is expressed through negative words , descriptions and imagery throughout the text .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a passable romantic comedy , in need of another couple of passes through the word processor .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a passable romantic comedy , in need of another couple of passes through the word processor .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\": \"passable romantic comedy , needs more passes\",\n    \"REASONING\": \"the review is negative because it feels like a movie that was cut down from longer screenplay\",\n    \"SENTIMENT\": \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the format gets used best . . . to capture the dizzying heights achieved by motocross and bmx riders , whose balletic hotdogging occasionally ends in bone-crushing screwups .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the format gets used best . . . to capture the dizzying heights achieved by motocross and bmx riders , whose balletic hotdogging occasionally ends in bone-crushing screwups .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\": [\"captures\", \"dizzying heights\", \"bone-crushing screwups\"],\n    \"REASONING\": \"the sentence describes the movie 's action sequences and their dramatic impact\",\n    \"SENTIMENT\": \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : eight crazy nights is a showcase for sandler 's many talents .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "eight crazy nights is a showcase for sandler 's many talents .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"eight crazy nights , \"showcase for sandler 's many talents . \"],\n    \"REASONING\" : \"Positive because it highlights positive qualities of the subject.\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : what 's most memorable about circuit is that it 's shot on digital video , whose tiny camera enables shafer to navigate spaces both large . . . and small . . . with considerable aplomb .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "what 's most memorable about circuit is that it 's shot on digital video , whose tiny camera enables shafer to navigate spaces both large . . . and small . . . with considerable aplomb .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [ \"memorable \", \"shot on digital video \", \"tiny camera \", \"navigate spaces \", \"large . . . small . . . aplomb \" ],\n    \"REASONING\" : \"the film is visually striking and showcases the director 's unique style . \",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a documentary to make the stones weep -- as shameful as it is scary .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a documentary to make the stones weep -- as shameful as it is scary .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"documentary , shameless , scary \", \"stones , cry , ashamed , frightening ],\n    \"REASONING\" : \"Positive sentiment because the film is described as 'shameful ' but also 'frightening . '\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : . . . a preachy parable stylized with a touch of john woo bullet ballet .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": ". . . a preachy parable stylized with a touch of john woo bullet ballet .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : \"preachy , parable , stylized , bullet ballet \",\n    \"REASONING\" : \"the movie is slow-moving and heavy-handed , but it has some visually impressive moments\",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : guaranteed to move anyone who ever shook , rattled , or rolled .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "guaranteed to move anyone who ever shook , rattled , or rolled .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"genuine joy \", \"funny moments \", \"amazingly funny \"],\n    \"REASONING\" : \"the input contains positive language and references , such as 'genuine joy ' and 'amazingly funny , ' which suggests a positive sentiment .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : hollywood ending is not show-stoppingly hilarious , but scathingly witty nonetheless .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "hollywood ending is not show-stoppingly hilarious , but scathingly witty nonetheless .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"hilarious \", \"witty \", \"show-stoppingly \"],\n    \"REASONING\" : \"the input contains positive words like 'hilarious ' and 'witty ' which suggest a positive sentiment .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : good movie . good actress . but if you expect light romantic comedy , good gosh , will you be shocked .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "good movie . good actress . but if you expect light romantic comedy , good gosh , will you be shocked .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"good movie \", \"good actress \", \"light romantic comedy \", \"shocked \"],\n    \"REASONING\" : \"the sentiment is negative because the movie is not what was expected , it is neither a good movie nor an enjoyable romantic comedy \",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the movie is well done , but slow .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the movie is well done , but slow .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [ \"well done \", \"slow \" ],\n    \"REASONING\" : \"Both positive and negative aspects are mentioned in the input .\",\n    \"SENTIMENT\" : \"Neutral\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : `` cremaster 3 `` should come with the warning `` for serious film buffs only ! ``\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "`` cremaster 3 `` should come with the warning `` for serious film buffs only ! ``", "answer": "Positive", "prediction": "`` \n{\n    \"CLUES\" : [ 'serious ' , 'film ' , 'buffs ' , 'only ! ' ],\n    \"REASONING\" : 'Negative sentiment is expressed through negative language used about the movie . Negative language suggests the viewer would rather not watch it . Negative language also implies that there are other movies better than this one . Negative language also implies that the movie was n't enjoyable . Negative language also implies that the movie was boring . Negative language also implies that the movie was poorly directed . Negative language also implies that the movie was poorly acted . Negative language also implies that the movie was poorly written . Negative language also implies that the movie was poorly edited . Negative language also implies that the movie was poorly produced . Negative language also implies that the movie was poorly cast . Negative language also implies that the movie was poorly reviewed . Negative language also implies that the movie was poorly rated . Negative language also implies that the movie was poorly received . Negative language also implies that the movie was poorly liked . Negative language also implies that the movie was poorly loved . Negative language also implies that the movie was poorly watched . Negative language also implies that the movie was poorly enjoyed . Negative language also implies that the movie was poorly entertained . Negative language also implies that the movie was poorly amused . Negative language also implies that the movie was poorly thrilled . Negative language also implies that the movie was poorly amazed . Negative language also implies that the movie was poorly surprised . Negative language also implies that the movie was poorly shocked . Negative language also implies that the movie was poorly frightened . Negative language also implies that the movie was poorly disgusted . Negative language also implies that the movie was poorly hurt . Negative language also implies that the movie was poorly disappointed . Negative language also implies that the movie was poorly upset . Negative language also implies that the movie was poorly worried . Negative language also implies that the movie was poorly concerned . Negative language also implies that the movie was poorly puzzled . Negative language also implies that the movie was poorly excited . Negative language also implies that the movie was poorly thrilled . Negative language also implies that the movie was poorly entertained . Negative language also implies that the movie was poorly amused . Negative language also implies that the movie was poorly pleased . Negative language also implies that the movie was poorly delighted . Negative language also implies that the movie was poorly happy . Negative language also implies that the movie was poorly excited . Negative language also implies that the movie was poorly amused . Negative language also implies that the movie was poorly pleased . Negative language also implies that the movie was poorly delighted"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a party-hearty teen flick that scalds like acid .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a party-hearty teen flick that scalds like acid .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : [\"teen flick \", \"party-hearty \", \"scalds like acid \"],\n    \"REASONING\" : \"Positive sentiment because it is described as a fun , enjoyable movie for teens .\",\n    \"SENTIMENT\" : \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the problem with the bread , my sweet is that it 's far too sentimental .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the problem with the bread , my sweet is that it 's far too sentimental .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\" : [ \"sentimental \", \"too sentimental \" ],\n    \"REASONING\" : \"the film is overly sentimental and lacks humor . \",\n    \"SENTIMENT\" : \"Negative \"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : directors brett morgen and nanette burstein have put together a bold biographical fantasia .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "directors brett morgen and nanette burstein have put together a bold biographical fantasia .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"bold biographical fantasia\"],\n    \"REASONING\" : \"Positive sentiment because it is a positive depiction of an important historical figure\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the tone errs on the shrill side , tempered by a soft southern gentility that speaks of beauty , grace and a closet full of skeletons .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the tone errs on the shrill side , tempered by a soft southern gentility that speaks of beauty , grace and a closet full of skeletons .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"shrill\", \"gentility\", \"skeletons\"],\n    \"REASONING\" : \"the tone is described as being on the 'sharpest side,' which suggests it may be too loud or intense . the mention of a 'soft southern gentility ' implies a contrast between the two .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the unique tug-of-war with viewer expectations is undeniable , if not a pleasure in its own right .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the unique tug-of-war with viewer expectations is undeniable , if not a pleasure in its own right .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"unique tug-of-war \", \"viewer expectations \", \"undeniable \", \"pleasure in its own right \"],\n    \"REASONING\" : \"the movie is about an unusual situation and the reaction of people to it , which makes it interesting . \",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : still pretentious and filled with subtext , but entertaining enough at 'face value ' to recommend to anyone looking for something different .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "still pretentious and filled with subtext , but entertaining enough at 'face value ' to recommend to anyone looking for something different .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : [ \"pretentious \", \"filled with subtext \", \"entertaining enough at face value \" ],\n    \"REASONING\" : \"The review mentions that the movie is still pretentious and contains subtext , which suggests it may be negative . However , it also says that it is entertaining enough at face value to recommend , which could indicate a positive sentiment . \",\n    \"SENTIMENT\" : \"Positive \"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : feels like six different movies fighting each other for attention .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "feels like six different movies fighting each other for attention .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"feels like six different movies fighting each other for attention , \" , \"negative sentiment \" ],\n    \"REASONING\" : \"the negative sentiment is conveyed through the use of negative words and phrases such as 'fighting each other for attention . ' \",\n    \"SENTIMENT\" : \"Negative \"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : an idealistic love story that brings out the latent 15-year-old romantic in everyone .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "an idealistic love story that brings out the latent 15-year-old romantic in everyone .", "answer": "Positive", "prediction": "```\n\n{\n    \"CLUES\": \"idealistic , love story , latent , romantic , everyone \",\n    \"REASONING\": \"Positive sentiment because it is an idealized version of a positive experience shared by many people .\",\n    \"SENTIMENT\": \"Positive\"\n} ``"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : excellent performances from jacqueline bisset and martha plimpton grace this deeply touching melodrama .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "excellent performances from jacqueline bisset and martha plimpton grace this deeply touching melodrama .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"excellent performances \", \"jacqueline bisset \", \"martha plimpton \", \"melodrama \"],\n    \"REASONING\" : \"the review highlights the positive aspects of the film , specifically the performances of bisset and plimpton .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : absorbing character study by andrM-i turpin .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "absorbing character study by andrM-i turpin .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : [\"absorbing \", \"character study \", \"andriM- turpin .\"],\n    \"REASONING\" : \"Positive sentiment due to positive aspects mentioned in the clue 'absorbing , ' such as being 'absorbing . ' Positive sentiment also exists because the subject is mentioned as 'by andriM-turpin . ' Positive sentiment is further reinforced by the fact that 'first , list clues , etc . ' is not listed among negative sentiments . Positive sentiment is negated by the mention of 'list clues , etc . ' which suggests that the movie is n't worth seeing . Positive sentiment is supported by the positive tone of the review . Positive sentiment is also supported by the fact that the review does not contain any negative comments about the film . Positive sentiment is supported by the fact that the review does not contain any negative comments about the film . Positive sentiment is supported by the fact that the review does not contain any negative comments about the film . Positive sentiment is supported by the fact that the review does not contain any negative comments about the film . Positive sentiment is supported by the fact that the review does not contain any negative comments about the film . Positive sentiment is supported by the fact that the review does not contain any negative comments about the film . Positive sentiment is supported by the fact that the review does not contain any negative comments about the film . Positive sentiment is supported by the fact that the review does not contain any negative comments about the film . Positive sentiment is supported by the fact that the review does not contain any negative comments about the film . Positive sentiment is supported by the fact that the review does not contain any negative comments about the film . Positive sentiment is supported by the fact that the review does not contain any negative comments about the film . Positive sentiment is supported by the fact that the review does not contain any negative comments about the film . Positive sentiment is supported by the fact that the review does not contain any negative comments about the film . Positive sentiment is supported by the fact that the review does not contain any negative comments about the film . Positive sentiment is supported by the fact that the review does not contain any negative comments about the film . Positive sentiment is supported by the fact that the review does not contain any negative comments about the film . Positive sentiment is supported by the fact that the review does not contain any negative comments about the film . Positive sentiment is supported by the fact that the review does not contain any negative comments about the film . Positive sentiment is supported by the fact"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : bearable . barely .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "bearable . barely .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"bearable\", \"barely\"],\n    \"REASONING\" : \"The word 'barely' suggests a neutral or slightly negative sentiment , while 'bearable ' implies some level of enjoyment but not much .\",\n    \"SENTIMENT\" : \"Neutral/Mildly Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a film in a class with spike lee 's masterful do the right thing .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a film in a class with spike lee 's masterful do the right thing .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"a film \", \"class \", \"spike lee 's masterful \", \"do the right thing . \"],\n    \"REASONING\" : \"Positive sentiment because the film is praised for its cultural relevance and positive message , despite being controversial .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : allen shows he can outgag any of those young whippersnappers making moving pictures today .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "allen shows he can outgag any of those young whippersnappers making moving pictures today .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : [ \"allen shows \", \"can outgag \", \"any of those young whippersnappers making moving pictures today \" ],\n    \"REASONING\" : \"the sentence is positive because it compliments allen 's ability and suggests that his talent is recognized by others in the industry . \",\n    \"SENTIMENT\" : \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it 's supposed to be a humorous , all-too-human look at how hope can breed a certain kind of madness -- and strength -- but it never quite adds up .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it 's supposed to be a humorous , all-too-human look at how hope can breed a certain kind of madness -- and strength -- but it never quite adds up .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : \"humorous , human , hope , madness , strength \",\n    \"REASONING\" : \"the movie is supposed to be about humor , humanity , hope , and strength , but does n't deliver on any of those fronts .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : enthusiastically taking up the current teen movie concern with bodily functions , walt becker 's film pushes all the demographically appropriate comic buttons .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "enthusiastically taking up the current teen movie concern with bodily functions , walt becker 's film pushes all the demographically appropriate comic buttons .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"enthusiastically \", \"current \", \"teen movie concern \", \"body functions \", \"pushes all the \", \"demographically \"],\n    \"REASONING\" : \"Positive sentiment because the review is praising the film for its focus on teenage concerns and its ability to appeal to young audiences.\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : due to stodgy , soap opera-ish dialogue , the rest of the cast comes across as stick figures reading lines from a teleprompter .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "due to stodgy , soap opera-ish dialogue , the rest of the cast comes across as stick figures reading lines from a teleprompter .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"stodgy \", \"soap opera-ish \", \"dialogue \", \"cast \", \"stick figures \", \"teleprompter \"],\n    \"REASONING\" : \"the negative aspects of the film 's writing and acting are highlighted through their descriptions in the clue text \",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : idiotic and ugly .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "idiotic and ugly .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\": [\"idiotic \", \"ugly .\"],\n    \"REASONING\": \"Negative sentiment associated with being stupid and bad looking .\",\n    \"SENTIMENT\": \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a gorgeous , high-spirited musical from india that exquisitely blends music , dance , song , and high drama .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a gorgeous , high-spirited musical from india that exquisitely blends music , dance , song , and high drama .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"gorgeous \", \"high-spirited \", \"musical \", \"india \", \"exquisitely blends \", \"music \", \"dance \", \"song \", \"high drama ],\n    \"REASONING\" : \"the input is praising an indian film , indicating it has a positive sentiment .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : writer-director david jacobson and his star , jeremy renner , have made a remarkable film that explores the monster 's psychology not in order to excuse him but rather to demonstrate that his pathology evolved from human impulses that grew hideously twisted .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "writer-director david jacobson and his star , jeremy renner , have made a remarkable film that explores the monster 's psychology not in order to excuse him but rather to demonstrate that his pathology evolved from human impulses that grew hideously twisted .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"writer-director david jacobson and his star \", \"jeremy renner , have made a remarkable film that explores the monster 's psychology not in order to excuse him but rather to demonstrate that his pathology evolved from human impulses that grew hideously twisted .\"],\n    \"REASONING\" : \"Positive sentiment because it praises the movie for exploring the monster 's psyche in a meaningful way .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : if it 's possible for a sequel to outshine the original , then sl2 does just that .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "if it 's possible for a sequel to outshine the original , then sl2 does just that .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : \"sequel , outshine , positive \",\n    \"REASONING\" : \"Positive because the movie is praised for its better-than-original quality .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : ramsay succeeds primarily with her typical blend of unsettling atmospherics , delivering a series of abrasive , stylized sequences that burn themselves upon the viewer 's memory .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "ramsay succeeds primarily with her typical blend of unsettling atmospherics , delivering a series of abrasive , stylized sequences that burn themselves upon the viewer 's memory .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"unsettling atmospherics\", \"abusive sequences\", \"burning memories\"],\n    \"REASONING\" : \"the review describes the film as successful due to its use of atmospheric elements and its ability to leave an impression on viewers\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : there are problems with this film that even 3 oscar winners ca n't overcome , but it 's a nice girl-buddy movie once it gets rock-n-rolling .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "there are problems with this film that even 3 oscar winners ca n't overcome , but it 's a nice girl-buddy movie once it gets rock-n-rolling .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"problems \", \"overcome \", \"nice girl-buddy movie \", \"rock-n-roll \"],\n    \"REASONING\" : \"Positive because the sentiment is mostly positive , despite some negatives mentioned .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the fast runner ' transports the viewer into an unusual space\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the fast runner ' transports the viewer into an unusual space", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\": \"the , fast , runner ' , transports , viewer , unusual , space \",\n    \"REASONING\": \"positive sentiment due to enjoyment of the movie experience .\",\n    \"SENTIMENT\": \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : this is a film brimming with detail and nuance and one that speaks volumes about the ability of the human spirit to find solace in events that could easily crush it forever .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "this is a film brimming with detail and nuance and one that speaks volumes about the ability of the human spirit to find solace in events that could easily crush it forever .", "answer": "Positive", "prediction": "`` Positive `` . Positive sentiment is indicated by the use of words like 'brimming , ' 'detail , ' 'nuance , ' 'solace , ' 'ability , ' 'spirit , ' 'events , ' 'crush ' , ' 'volume ' , ' 'find ' , ' 'speak ' , ' 'eventually ' , ' 'find ' , ' 'endure ' , ' 'hope ' , ' 'inspire ' , ' 'human ' , ' 'evermore ' , ' 'nevertheless ' , ' 'nevertheless ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure ' , ' 'endure '"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a difficult , absorbing film that manages to convey more substance despite its repetitions and inconsistencies than do most films than are far more pointed and clear .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a difficult , absorbing film that manages to convey more substance despite its repetitions and inconsistencies than do most films than are far more pointed and clear .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"difficult \", \"absorbent \", \"convey more substance \", \"repetitions \", \"inconsistencies \", \"pointed \", \"clear \"],\n    \"REASONING\" : \"Positive because the review is praising the film for its ability to convey more substance despite its flaws .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : we learn a lot about dying coral and see a lot of life on the reef .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "we learn a lot about dying coral and see a lot of life on the reef .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"dying coral \", \"life on the reef \"],\n    \"REASONING\" : \"the film explores both the fragility and resilience of the natural world , which is a positive sentiment .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it 's surprisingly bland despite the heavy doses of weird performances and direction .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it 's surprisingly bland despite the heavy doses of weird performances and direction .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"bland\", \"weird performances\", \"direction\"],\n    \"REASONING\" : \"the film is not very interesting , despite its strange characters and style\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : too bad writer-director adam rifkin situates it all in a plot as musty as one of the golden eagle 's carpets .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "too bad writer-director adam rifkin situates it all in a plot as musty as one of the golden eagle 's carpets .", "answer": "Negative", "prediction": "```\n\n{\n    \"CLUES\" : \"too bad , writer-director adam rifkin , situates it all , plot as musty , golden eagle 's carpets \",\n    \"REASONING\" : \"the review is negative because it criticizes the film for being slow-paced , outdated and poorly directed\",\n    \"SENTIMENT\" : \"Negative\"\n} ``"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : beneath the film 's obvious determination to shock at any cost lies considerable skill and determination , backed by sheer nerve .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "beneath the film 's obvious determination to shock at any cost lies considerable skill and determination , backed by sheer nerve .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [ \"obvious \", \"shock at any cost \", \"considerable skill and determination \", \"backed by sheer nerve \" ],\n    \"REASONING\" : \"the film is able to balance its shocking elements with intelligence and emotional depth . \",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : solaris `` is a shapeless inconsequential move relying on the viewer to do most of the work .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "solaris `` is a shapeless inconsequential move relying on the viewer to do most of the work .", "answer": "Negative", "prediction": "`` Positive . `` Positive sentiment because the review acknowledges the film 's unique concept and suggests it might be worth seeing for its artistic value . Negative sentiment if the movie was poorly executed , poorly directed , etc . Negative sentiment if the review is critical of the film 's execution . Positive sentiment if the film has some redeeming qualities but could have been better . Negative sentiment if the film had no redeeming qualities at all . Positive sentiment if the film is very good . Negative sentiment if the film is bad . Positive sentiment if the film is just okay . Negative sentiment if the film is so bad it makes you want to punch someone in the face . Negative sentiment if the film is so bad it makes you want to jump out the window . Negative sentiment if the film is so bad it makes you want to shoot yourself . Negative sentiment if the film is so bad it makes you want to cut off your own hand with a box cutter . Negative sentiment if the film is so bad it makes you want to eat your own eyes . Negative sentiment if the film is so bad it makes you want to strangle your own arms . Negative sentiment if the film is so bad it makes you want to castrate yourself . Negative sentiment if the film is so bad it makes you want to hang yourself . Negative sentiment if the film is so bad it makes you want to drown yourself . Negative sentiment if the film is so bad it makes you want to set yourself on fire . Negative sentiment if the film is so bad it makes you want to stab yourself . Negative sentiment if the film is so bad it makes you want to slit your wrists . Negative sentiment if the film is so bad it makes you want to blow your brains out . Negative sentiment if the film is so bad it makes you want to shoot up your own nose . Negative sentiment if the film is so bad it makes you want to swallow your own tongue . Negative sentiment if the film is so bad it makes you want to eat your own heart . Negative sentiment if the film is so bad it makes you want to cut off your own penis . Negative sentiment if the film is so bad it makes you want to electrocute yourself . Negative sentiment if the film is so bad it makes you want to poison yourself . Negative sentiment if the film is so bad it makes you want to burn yourself alive . Negative sentiment if the film is so bad it makes you want to shoot yourself in the head . Negative sentiment if the film is so bad it makes you want to shoot up your own eye . Negative sentiment if the film is so"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a series of immaculately composed shots of patch adams quietly freaking out does not make for much of a movie .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a series of immaculately composed shots of patch adams quietly freaking out does not make for much of a movie .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\" : \"immaculate , adams , freaks , making , movie \",\n    \"REASONING\" : \"the review is negative because it describes the film as being poorly made with uninteresting characters and dialogue .\",\n    \"SENTIMENT\" : \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : if shayamalan wanted to tell a story about a man who loses his faith , why did n't he just do it , instead of using bad sci-fi as window dressing ?\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "if shayamalan wanted to tell a story about a man who loses his faith , why did n't he just do it , instead of using bad sci-fi as window dressing ?", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"if shayamalan wanted to tell a story about a man who loses his faith \", \"why did n't he just do it \", \"bad sci-fi as window dressing \"],\n    \"REASONING\" : \"the negative tone and criticism towards the film 's science fiction elements suggests a negative sentiment .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : like most bond outings in recent years , some of the stunts are so outlandish that they border on being cartoonlike . a heavy reliance on cgi technology is beginning to creep into the series .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "like most bond outings in recent years , some of the stunts are so outlandish that they border on being cartoonlike . a heavy reliance on cgi technology is beginning to creep into the series .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"bond outings\", \"stunts\", \"outlandish \", \"border on being cartoonlike \", \"cgi technology \", \"heavy reliance on CGI technology \", \"series\"],\n    \"REASONING\" : \"the review mentions several aspects of the movie that are considered negative , such as the stunts being too elaborate for their own good , the heavy use of computer-generated imagery , and the reliance on it .\",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the art direction and costumes are gorgeous and finely detailed , and kurys ' direction is clever and insightful .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the art direction and costumes are gorgeous and finely detailed , and kurys ' direction is clever and insightful .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"gorgeous and finely detailed\", \"clever and insightful\"],\n    \"REASONING\" : \"Positive sentiment because the praise is directed towards the art direction, costumes, direction and positive feedback about it .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : one suspects that craven endorses they simply because this movie makes his own look much better by comparison .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "one suspects that craven endorses they simply because this movie makes his own look much better by comparison .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : \"one suspects , craven , looks much better , positive \",\n    \"REASONING\" : \"Positive sentiment because the speaker is suggesting that the subject 's movie is better than the other subject 's . Positive sentiment because the subject is criticizing the subject 's work .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : . . . there 's a choppy , surface-effect feeling to the whole enterprise .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": ". . . there 's a choppy , surface-effect feeling to the whole enterprise .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"choppy \", \"surface-effect \", \"feeling \", \"entirely \"],\n    \"REASONING\" : \"Negative sentiment due to negative descriptions of the film\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : for a film about action , ultimate x is the gabbiest giant-screen movie ever , bogging down in a barrage of hype .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "for a film about action , ultimate x is the gabbiest giant-screen movie ever , bogging down in a barrage of hype .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"action film\", \"giant-screen movie\", \"hype \", \"bogging down\"],\n    \"REASONING\" : \"the negative comments about the film 's lack of action and its excessive reliance on hype and visuals\",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a respectable but uninspired thriller that 's intelligent and considered in its details , but ultimately weak in its impact .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a respectable but uninspired thriller that 's intelligent and considered in its details , but ultimately weak in its impact .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"inspiring \", \"thought-provoking \", \"considered in its details \", \"weak in its impact \"],\n    \"REASONING\" : \"the review mentions positive aspects like intelligence and consideration , but also notes that the movie is not impactful enough .\",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the film has the uncanny ability to right itself precisely when you think it 's in danger of going wrong .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the film has the uncanny ability to right itself precisely when you think it 's in danger of going wrong .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"film has \", \"right itself \", \"goes wrong \"],\n    \"REASONING\" : \"Positive sentiment because the film manages to overcome its flaws .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : hey arnold ! the movie could have been made 40 years ago , and parents ' appreciation of it may depend on whether they consider that a good thing .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "hey arnold ! the movie could have been made 40 years ago , and parents ' appreciation of it may depend on whether they consider that a good thing .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"hey \", \"arnold \", \"the movie \", \"could have been made 40 years ago \", \"parents ' appreciation of it may depend on whether they consider that a good thing . \"],\n    \"REASONING\" : \"Positive sentiment because the input is humorous and acknowledges the film 's agelessness , suggesting it has stood the test of time . \",\n    \"SENTIMENT\" : \"Positive \"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a fast , funny , highly enjoyable movie .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a fast , funny , highly enjoyable movie .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\": \"a fast , funny , highly enjoyable movie .\",\n    \"REASONING\": \"the input is positive because it describes the movie in a favorable way.\",\n    \"SENTIMENT\": \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : nair 's cast is so large it 's altman-esque , but she deftly spins the multiple stories in a vibrant and intoxicating fashion .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "nair 's cast is so large it 's altman-esque , but she deftly spins the multiple stories in a vibrant and intoxicating fashion .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"nair 's cast \", \"spins the multiple stories \", \"intoxicating fashion .\"],\n    \"REASONING\" : \"Positive sentiment because the review describes the film as a vibrant and captivating experience with a talented cast.\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it 's always fascinating to watch marker the essayist at work .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it 's always fascinating to watch marker the essayist at work .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : [ \"fascinating \", \"work \" ],\n    \"REASONING\" : \"Positive sentiment because the movie is about an author and his writing , which is generally considered interesting and important .\",\n    \"SENTIMENT\" : \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a lovely film . . . elegant , witty and beneath a prim exterior unabashedly romantic . . . hugely enjoyable in its own right though not really faithful to its source 's complexity .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a lovely film . . . elegant , witty and beneath a prim exterior unabashedly romantic . . . hugely enjoyable in its own right though not really faithful to its source 's complexity .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"lovely \", \"elegant \", \"witty \", \"abundantly \", \"unabashedly romantic \", \"hugey enjoyable \", \"faithful \", \"complexity \"],\n    \"REASONING\" : \"Positive sentiment because the review is praising the film and calling it enjoyable and beautiful despite being faithful to its source material .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : proves a servicable world war ii drama that ca n't totally hide its contrivances , but it at least calls attention to a problem hollywood too long has ignored .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "proves a servicable world war ii drama that ca n't totally hide its contrivances , but it at least calls attention to a problem hollywood too long has ignored .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : [\"world war ii drama\", \"contrivances\", \"attention called to a problem hollywood has ignored\"],\n    \"REASONING\" : \"the film is a world war ii drama with some contrivances in its story and it raises awareness about an issue that hollywood has neglected\",\n    \"SENTIMENT\" : Positive\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : diverting french comedy in which a husband has to cope with the pesky moods of jealousy .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "diverting french comedy in which a husband has to cope with the pesky moods of jealousy .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"diverting , french , comedy , husband , cope , jealousies\"],\n    \"REASONING\" : \"the film is described as 'diverting ' and 'French , ' indicating a positive sentiment . Positive because it is described as enjoyable . Negative because it implies that the movie was not as good as expected .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : not only is it hokey , manipulative and as bland as wonder bread dipped in milk , but it also does the absolute last thing we need hollywood doing to us : it preaches .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "not only is it hokey , manipulative and as bland as wonder bread dipped in milk , but it also does the absolute last thing we need hollywood doing to us : it preaches .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"hokey\", \"manipulative\", \"bland\", \"preachy\"],\n    \"REASONING\" : \"the input contains negative words and expressions about the movie 's quality and message\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the performances take the movie to a higher level .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the performances take the movie to a higher level .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : [ \"the performances \", \"take the movie to a higher level \" ],\n    \"REASONING\" : \"Positive , because it suggests that the film is good despite its flaws . \",\n    \"SENTIMENT\" : \"Positive \"\n} ``"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : highlights are the terrific performances by christopher plummer , as the prime villain , and nathan lane as vincent crummles , the eccentric theater company manager .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "highlights are the terrific performances by christopher plummer , as the prime villain , and nathan lane as vincent crummles , the eccentric theater company manager .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"terrific performances \", \"prime villain \", \"eccentric theater company manager \"],\n    \"REASONING\" : \"Positive sentiment is conveyed through positive descriptions of the performances and characters .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : more of the same from taiwanese auteur tsai ming-liang , which is good news to anyone who 's fallen under the sweet , melancholy spell of this unique director 's previous films .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "more of the same from taiwanese auteur tsai ming-liang , which is good news to anyone who 's fallen under the sweet , melancholy spell of this unique director 's previous films .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\": \"unique director's previous films , good news \",\n    \"REASONING\": \"the sentence expresses positive sentiments about tsai ming-liang 's work , indicating it is a positive review .\",\n    \"SENTIMENT\": \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : instead of kicking off the intrigue and suspense and mystery of the whole thing , hart 's war , like the st . louis rams in the super bowl , waits until after halftime to get started .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "instead of kicking off the intrigue and suspense and mystery of the whole thing , hart 's war , like the st . louis rams in the super bowl , waits until after halftime to get started .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"intrigue\", \"suspense\", \"mystery\", \"kick-off\", \"interest\", \"start\"], \n    \"REASONING\" : \"the film is slow to start , with too much exposition and not enough action or drama , which makes it difficult for the audience to become invested in the story . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment . Negative sentiment"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : shiri is an action film that delivers on the promise of excitement , but it also has a strong dramatic and emotional pull that gradually sneaks up on the audience .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "shiri is an action film that delivers on the promise of excitement , but it also has a strong dramatic and emotional pull that gradually sneaks up on the audience .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"action film \", \"excitement \", \"dramatic pull \", \"surprise ending \"],\n    \"REASONING\" : \"the movie successfully combines action and drama in a way that keeps the audience engaged throughout .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : high crimes knows the mistakes that bad movies make and is determined not to make them , and maybe that is nobility of a sort .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "high crimes knows the mistakes that bad movies make and is determined not to make them , and maybe that is nobility of a sort .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : [ \"high crimes \", \"knows the mistakes that bad movies make \", \"determined not to make them \", \"nobility of a sort \" ],\n    \"REASONING\" : \"the movie is critical of itself in a way that few films have done before . it has a self-awareness that is refreshing , even if its message is ultimately flawed . \",\n    \"SENTIMENT\" : Positive\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : slow and ponderous , but rohmer 's drama builds to an intense indoor drama about compassion , sacrifice , and christian love in the face of political corruption .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "slow and ponderous , but rohmer 's drama builds to an intense indoor drama about compassion , sacrifice , and christian love in the face of political corruption .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"slow and ponderous \", \"rohmer 's drama \", \"intense indoor drama \", \"compassion \", \"sacrifice \", \"christian love \", \"political corruption ],\n    \"REASONING\" : \"the film is described as being 'slow and ponderous ' but still manages to build to an intense climax . it also has elements of compassion , sacrifice , and christian love , which are all positive themes . however , the film 's focus on political corruption is negative . \",\n    \"SENTIMENT\" : Positive Negative Positive Negative Positive Negative Negative Positive Negative Positive Negative Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative Positive Negative"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it 's dumb , but more importantly , it 's just not scary .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it 's dumb , but more importantly , it 's just not scary .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"dumb \", \"not scary \"],\n    \"REASONING\" : \"the sentence mentions two things that are generally negative about movies - being dumb and lacking in scare factors .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : . . . has freaky scenes where the crew wonder if they 're ghosts imagining themselves as alive . it 's a sly wink to the others without becoming a postmodern joke , made creepy by its `` men in a sardine can `` warped logic .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": ". . . has freaky scenes where the crew wonder if they 're ghosts imagining themselves as alive . it 's a sly wink to the others without becoming a postmodern joke , made creepy by its `` men in a sardine can `` warped logic .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"freaky scenes \", \"crew wonder if they 're ghosts imagining themselves as alive \", \"sly wink to the others without becoming a postmodern joke , made creepy by its `` men in a sardine can `` warped logic \" ],\n    \"REASONING\" : \"the film is clever but also unsettling due to its surreal elements \",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : mel gibson fights the good fight in vietnam in director randall wallace 's flag-waving war flick with a core of decency .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "mel gibson fights the good fight in vietnam in director randall wallace 's flag-waving war flick with a core of decency .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"mel gibson \", \"flag-waving \", \"war flick \", \"core of decency \"],\n    \"REASONING\" : \"Positive because it is a positive review of a movie with positive elements such as strong lead actor , good direction , and positive message .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : this picture is mostly a lump of run-of-the-mill profanity sprinkled with a few remarks so geared toward engendering audience sympathy that you might think he was running for office -- or trying to win over a probation officer .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "this picture is mostly a lump of run-of-the-mill profanity sprinkled with a few remarks so geared toward engendering audience sympathy that you might think he was running for office -- or trying to win over a probation officer .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"lump of run-of-the-mill profanity , \" \"few remarks so geared toward engendering audience sympathy , \" \"engendering audience sympathy , \" \"trying to win over a probation officer \"],\n    \"REASONING\" : \"the movie seems to be trying too hard to be funny . Negative sentiment .\",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : daily struggles and simple pleasures usurp the preaching message so that , by the time the credits roll across the pat ending , a warm , fuzzy feeling prevails .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "daily struggles and simple pleasures usurp the preaching message so that , by the time the credits roll across the pat ending , a warm , fuzzy feeling prevails .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : \"daily struggles , simple pleasures , preaching message , positive feeling \",\n    \"REASONING\" : \"Positive sentiment is inferred because the film does not preach but rather shares its message through its characters ' actions . Positive sentiment is also supported by the fact that the film ends with a warm and fuzzy feeling .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the script was reportedly rewritten a dozen times -- either 11 times too many or else too few .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the script was reportedly rewritten a dozen times -- either 11 times too many or else too few .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : \"rewritten , too many or too few \",\n    \"REASONING\" : \"negative feedback about rewriting , possibly due to negative tone in the description of the process .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : there 's something unintentionally comic in the film 's drumbeat about authenticity , given the stale plot and pornographic way the film revels in swank apartments , clothes and parties .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "there 's something unintentionally comic in the film 's drumbeat about authenticity , given the stale plot and pornographic way the film revels in swank apartments , clothes and parties .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"unintentionally comic \", \"drumbeat about authenticity \", \"stale plot \", \"pornographic way \", \"swank apartments \", \"clothes \", \"parties \"],\n    \"REASONING\" : \"the negative tone is established early on through the use of the word `` uncomically `` , which suggests disappointment or frustration . Positive sentiment does not exist in this review . Negative sentiment exists , but it is overshadowed by the overall dissatisfaction with the movie . \",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : an exhilarating serving of movie fluff .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "an exhilarating serving of movie fluff .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"exhilarating \", \"movie fluff \"],\n    \"REASONING\" : \"Positive sentiment because it is described as exhilarating and a serving of movie fluff , which suggests it is enjoyable and light-hearted .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : an annoying orgy of excess and exploitation that has no point and goes nowhere .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "an annoying orgy of excess and exploitation that has no point and goes nowhere .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"annoying \", \"excess \", \"exploitation \", \"no point \", \"goes nowhere \"],\n    \"REASONING\" : \"the input sentence is negative because it describes the movie as 'annoying , ' 'excessive ,' 'exploitative , 'pointless , 'and 'going nowhere . '\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a quiet , disquieting triumph .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a quiet , disquieting triumph .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"quiet \", \"disquieting \", \"triumph \"],\n    \"REASONING\" : \"the word 'triumph ' suggests a positive outcome , while 'quiet ' and 'disquieting ' suggest a more subdued tone .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : put it somewhere between sling blade and south of heaven , west of hell in the pantheon of billy bob 's body of work .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "put it somewhere between sling blade and south of heaven , west of hell in the pantheon of billy bob 's body of work .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"billy bob 's body of work \", \"put it somewhere between sling blade and south of heaven \", \"pantheon of billy bob 's body of work \"],\n    \"REASONING\" : \"the sentence is critical and negative about the movie , suggesting that it does not live up to previous films by the same director \",\n    \"SENTIMENT\" : Negative"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : forages for audience sympathy like a temperamental child begging for attention , giving audiences no reason to truly care for its decrepit freaks beyond the promise of a reprieve from their incessant whining .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "forages for audience sympathy like a temperamental child begging for attention , giving audiences no reason to truly care for its decrepit freaks beyond the promise of a reprieve from their incessant whining .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"begging for attention \", \"reprieve from their incessant whining \"],\n    \"REASONING\" : \"the film uses humor and empathy to engage with its characters , creating a sympathetic view of these eccentric individuals \",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : super troopers is an odd amalgam of comedy genres , existing somewhere between the often literal riffs of early zucker brothers/abrahams films , and the decidedly foul stylings of their post-modern contemporaries , the farrelly brothers .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "super troopers is an odd amalgam of comedy genres , existing somewhere between the often literal riffs of early zucker brothers/abrahams films , and the decidedly foul stylings of their post-modern contemporaries , the farrelly brothers .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"super troopers is an odd amalgam of comedy genres , exists somewhere between the often literal riffs of early zucker brothers/abrahams films , and the decidedly foul stylings of their post-modern contemporaries , the farrelly brothers . ],\n    \"REASONING\" : \"the input sentence provides enough context to understand that it is negative because it compares the film unfavorably to other movies in its genre and uses words like 'odd ' and 'foul . ',\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : collapses after 30 minutes into a slap-happy series of adolescent violence .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "collapses after 30 minutes into a slap-happy series of adolescent violence .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"collapses \", \"slap-happy \", \"adolescent violence \"],\n    \"REASONING\" : \"the sentence describes the film 's decline in quality and focus , suggesting it is not worth watching .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : shanghai ghetto should be applauded for finding a new angle on a tireless story , but you might want to think twice before booking passage .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "shanghai ghetto should be applauded for finding a new angle on a tireless story , but you might want to think twice before booking passage .", "answer": "Negative", "prediction": "```\n\n{\n    \"CLUES\" : [\"shanghai ghetto \", \"new angle \", \"tireless story \", \"think twice \", \"book passage ],\n    \"REASONING\" : \"the sentence is positive because it praises the film for its innovative approach and suggests caution in choosing a movie to watch . \",\n    \"SENTIMENT\" : Positive\n} ``"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : pryor lite , with half the demons , half the daring , much less talent , many fewer laughs .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "pryor lite , with half the demons , half the daring , much less talent , many fewer laughs .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [ \"lite \", \"half the demons \", \"half the daring \", \"less talent \", \"fewer laughs \" ],\n    \"REASONING\" : \"The input contains negative language such as 'lite ,' 'half the demons , ' 'half the daring , ' 'less talent , ' and 'fewer laughs . ' Negative sentiment is indicated by this use of negative language . Positive sentiment would not contain such language .\",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : even in the summertime , the most restless young audience deserves the dignity of an action hero motivated by something more than franchise possibilities .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "even in the summertime , the most restless young audience deserves the dignity of an action hero motivated by something more than franchise possibilities .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : \"even in the summertime , the most restless young audience deserves the dignity of an action hero motivated by something more than franchise possibilities . \",\n    \"REASONING\" : \"Positive sentiment because the film is being praised for its action hero and positive message .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it 's secondary to american psycho but still has claws enough to get inside you and stay there for a couple of hours .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it 's secondary to american psycho but still has claws enough to get inside you and stay there for a couple of hours .", "answer": "Positive", "prediction": "```\n\n{\n    \"CLUES\" : \"it 's secondary to american psycho , still has claws , gets inside you , stays there \",\n    \"REASONING\" : \"Positive sentiment because the movie is described as having \"claws '' and staying with the viewer for a while . Positive sentiment because the movie is described as having \"claws `` and staying with the viewer for a while . Positive sentiment because the movie is described as having ``claws `` and staying with the viewer for a while . Positive sentiment because the movie is described as having ``claws `` and staying with the viewer for a while . Positive sentiment because the movie is described as having ``claws `` and staying with the viewer for a while . Positive sentiment because the movie is described as having ``claws `` and staying with the viewer for a while . Positive sentiment because the movie is described as having ``claws `` and staying with the viewer for a while . Positive sentiment because the movie is described as having ``claws `` and staying with the viewer for a while . Positive sentiment because the movie is described as having ``claws `` and staying with the viewer for a while . Positive sentiment because the movie is described as having ``claws `` and staying with the viewer for a while . Positive sentiment because the movie is described as having ``claws `` and staying with the viewer for a while . Positive sentiment because the movie is described as having ``claws `` and staying with the viewer for a while . Positive sentiment because the movie is described as having ``claws `` and staying with the viewer for a while . Positive sentiment because the movie is described as having ``claws `` and staying with the viewer for a while . Positive sentiment because the movie is described as having ``claws `` and staying with the viewer for a while . Positive sentiment because the movie is described as having ``claws `` and staying with the viewer for a while . Positive sentiment because the movie is described as having ``claws `` and staying with the viewer for a while . Positive sentiment because the movie is described as having ``claws `` and staying with the viewer for a while . Positive sentiment because the movie is described as having ``claws `` and staying with the viewer for a while . Positive sentiment because the movie is described as having ``claws `` and staying with the viewer for a while . Positive sentiment because the movie is described as having ``claws `` and staying with the viewer for a while . Positive sentiment because the movie is described as having ``claws ``"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : [ jeff 's ] gorgeous , fluid compositions , underlined by neil finn and edmund mcwilliams 's melancholy music , are charged with metaphor , but rarely easy , obvious or self-indulgent .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "[ jeff 's ] gorgeous , fluid compositions , underlined by neil finn and edmund mcwilliams 's melancholy music , are charged with metaphor , but rarely easy , obvious or self-indulgent .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : \"[ jeff 's ] gorgeous , fluid compositions , underlined by neil finn and edmund mcwilliams 's melancholy music , are charged with metaphor , but rarely easy , obvious or self-indulgent .\",\n    \"REASONING\" : \"Positive sentiment because the review is praising the film 's visual style , musical score , and metaphoric elements.\",\n    \"SENTIMENT\" : \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : too long , and larded with exposition , this somber cop drama ultimately feels as flat as the scruffy sands of its titular community .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "too long , and larded with exposition , this somber cop drama ultimately feels as flat as the scruffy sands of its titular community .", "answer": "Negative", "prediction": "`` Positive `` Positive sentiment is indicated by the fact that the input does not contain any negative words or phrases . Positive sentiment is also suggested by the use of positive words like 'somber ' and 'cop drama ' . Positive sentiment is further supported by the fact that the input does n't contain any negative words or phrases . Positive sentiment is also suggested by the use of positive words like 'somber ' and 'cop drama ' . Positive sentiment is further supported by the fact that the input does n't contain any negative words or phrases . Positive sentiment is also suggested by the use of positive words like 'somber ' and 'cop drama ' . Positive sentiment is further supported by the fact that the input does n't contain any negative words or phrases . Positive sentiment is also suggested by the use of positive words like 'somber ' and 'cop drama ' . Positive sentiment is further supported by the fact that the input does n't contain any negative words or phrases . Positive sentiment is also suggested by the use of positive words like 'somber ' and 'cop drama ' . Positive sentiment is further supported by the fact that the input does n't contain any negative words or phrases . Positive sentiment is also suggested by the use of positive words like 'somber ' and 'cop drama ' . Positive sentiment is further supported by the fact that the input does n't contain any negative words or phrases . Positive sentiment is also suggested by the use of positive words like 'somber ' and 'cop drama ' . Positive sentiment is further supported by the fact that the input does n't contain any negative words or phrases . Positive sentiment is also suggested by the use of positive words like 'somber ' and 'cop drama ' . Positive sentiment is further supported by the fact that the input does n't contain any negative words or phrases . Positive sentiment is also suggested by the use of positive words like 'somber ' and 'cop drama ' . Positive sentiment is further supported by the fact that the input does n't contain any negative words or phrases . Positive sentiment is also suggested by the use of positive words like 'somber ' and 'cop drama ' . Positive sentiment is further supported by the fact that the input does n't contain any negative words or phrases . Positive sentiment is also suggested by the use of positive words like 'somber ' and 'cop drama ' . Positive sentiment is further supported by the fact that the input does n't contain any negative words or phrases . Positive sentiment is also suggested by the use of positive words like 'somber ' and"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : this is carion 's debut feature but his script and direction hums with a confidence that many spend entire careers trying to reach .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "this is carion 's debut feature but his script and direction hums with a confidence that many spend entire careers trying to reach .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [ \"debut \", \"script , direction , confidence , career , try reach \" ],\n    \"REASONING\" : \"the movie has an air of maturity and self-assurance that suggests it was created by someone who has been in the business for some time . \",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : this ludicrous film is predictable at every turn .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "this ludicrous film is predictable at every turn .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"ludicrous \", \"predictable at every turn \"],\n    \"REASONING\" : \"Negative sentiment due to the use of negative adjectives in describing the film .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : evokes the 19th century with a subtlety that is an object lesson in period filmmaking .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "evokes the 19th century with a subtlety that is an object lesson in period filmmaking .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : \"evokes , subtlety , object lesson , period filmmaking\",\n    \"REASONING\" : \"the movie is well-crafted and uses historical details accurately \",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : we ca n't accuse kung pow for misfiring , since it is exactly what it wants to be : an atrociously , mind-numbingly , indescribably bad movie . unfortunately , we 'd prefer a simple misfire .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "we ca n't accuse kung pow for misfiring , since it is exactly what it wants to be : an atrociously , mind-numbingly , indescribably bad movie . unfortunately , we 'd prefer a simple misfire .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\" : \"bad movie , misfire , atrociously , mind-numbingly , indescribably\",\n    \"REASONING\" : \"the speaker expresses strong negative feelings towards the film and its quality \",\n    \"SENTIMENT\" : \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : evokes a palpable sense of disconnection , made all the more poignant by the incessant use of cell phones .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "evokes a palpable sense of disconnection , made all the more poignant by the incessant use of cell phones .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : \"palpable sense of disconnection \", \"incessant use of cell phones \",\n    \"REASONING\" : \"the movie is about the disconnect between people in our daily lives , and it uses technology as a metaphor for this problem .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : once he starts learning to compromise with reality enough to become comparatively sane and healthy , the film becomes predictably conventional .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "once he starts learning to compromise with reality enough to become comparatively sane and healthy , the film becomes predictably conventional .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"unpredictable \", \"conventionally \"],\n    \"REASONING\" : \"the film 's positive aspects are outweighed by its negative ones . \",\n    \"SENTIMENT\" : \"Negative \"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : mib ii is a movie that makes it possible for the viewer to doze off for a few minutes or make several runs to the concession stand and/or restroom and not feel as if he or she has missed anything . that 's because relatively nothing happens .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "mib ii is a movie that makes it possible for the viewer to doze off for a few minutes or make several runs to the concession stand and/or restroom and not feel as if he or she has missed anything . that 's because relatively nothing happens .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\" : [\n        \"movie \",\n        \"viewer \",\n        \"run \",\n        \"concession stand \",\n        \"restroom \",\n        \"missed anything \"\n    ],\n    \"REASONING\" : \"the movie is so boring that the only thing you can think about is how long you have left before you can get out of the theater and go home , or at least take a nap .\",\n    \"SENTIMENT\" : Negative\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : although frailty fits into a classic genre , in its script and execution it is a remarkably original work .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "although frailty fits into a classic genre , in its script and execution it is a remarkably original work .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"original work \", \"script and execution \", \"genre \", \"classic \", \"exceptional \", \"unusual \", \"unique \", \"innovative \", \"imaginative \", \"fresh perspective \", \"new take \"],\n    \"REASONING\" : \"the input contains positive sentiments about the film 's originality , uniqueness , and fresh perspective .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a much better documentary -- more revealing , more emotional and more surprising -- than its pedestrian english title would have you believe .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a much better documentary -- more revealing , more emotional and more surprising -- than its pedestrian english title would have you believe .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : \"better documentary , more revealing , more emotional , more surprising , pedestrian english title\",\n    \"REASONING\" : \"Positive sentiment because the review is praising the documentary\",\n    \"SENTIMENT\" : Positive\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : verbinski implements every hack-artist trick to give us the ooky-spookies .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "verbinski implements every hack-artist trick to give us the ooky-spookies .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"hack-artist trick\", \"ooky-spookies\"],\n    \"REASONING\" : \"Negative\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : happily , some things are immune to the folly of changing taste and attitude . for proof of that on the cinematic front , look no further than this 20th anniversary edition of the film that spielberg calls , retrospectively , his most personal work yet .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "happily , some things are immune to the folly of changing taste and attitude . for proof of that on the cinematic front , look no further than this 20th anniversary edition of the film that spielberg calls , retrospectively , his most personal work yet .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [ \"happily \", \"some things are immune to the folly of changing taste and attitude . for proof of that on the cinematic front , look no further than this 20th anniversary edition of the film that spielberg calls , retrospectively , his most personal work yet . \" ],\n    \"REASONING\" : Positive sentiment is inferred because the input describes the film as \"his most personal work yet \" and implies it is well-received by those who appreciate its unique style . Positive sentiment is determined . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the real star of this movie is the score , as in the songs translate well to film , and it 's really well directed .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the real star of this movie is the score , as in the songs translate well to film , and it 's really well directed .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : \"the real star of this movie is the score , as in the songs translate well to film , and it 's really well directed .\",\n    \"REASONING\" : \"Positive because the score is mentioned positively and the direction is praised.\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the best of the pierce brosnan james bond films to date .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the best of the pierce brosnan james bond films to date .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"best \", \"pierce brosnan \", \"james bond films \", \"date \"],\n    \"REASONING\" : \"the input contains positive language about the film , such as 'best ' and 'pierce brosnan , ' which indicates a positive sentiment .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it 's jagger 's bone-dry , mournfully brittle delivery that gives the film its bittersweet bite .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it 's jagger 's bone-dry , mournfully brittle delivery that gives the film its bittersweet bite .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [ \"it 's jagger 's bone-dry \", \"mournfully brittle \", \"gives the film its bittersweet bite \" ],\n    \"REASONING\" : \"the movie is about brian and his wife 's relationship and how they cope with his health problems . the humor comes from their witty banter . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive ."}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : fails to convince the audience that these brats will ever be anything more than losers .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "fails to convince the audience that these brats will ever be anything more than losers .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"fails to convince , loses audience , never become anything more than losers\"],\n    \"REASONING\" : \"the negative sentiments expressed in the provided text indicate a lack of conviction and failure to engage the audience .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : with its paint fights , motorized scooter chases and dewy-eyed sentiment , it 's a pretty listless collection of kid-movie clichM-is .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "with its paint fights , motorized scooter chases and dewy-eyed sentiment , it 's a pretty listless collection of kid-movie clichM-is .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"listless collection\", \"kid-movie cliches\"],\n    \"REASONING\" : \"Negative sentiment due to criticism of movie cliches\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : [ a ] soulless , stupid sequel . . .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "[ a ] soulless , stupid sequel . . .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\" : \"soulless , stupid \",\n    \"REASONING\" : \"Negative sentiment towards the movie being a waste of time and money .\",\n    \"SENTIMENT\" : \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : smart , provocative and blisteringly funny .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "smart , provocative and blisteringly funny .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : \"smart , provocative , blisteringly funny \",\n    \"REASONING\" : \"Positive sentiments about the movie .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : lilia 's transformation from strict mother to sensual siren is superficially preposterous , but abbas infuses the role with an unimpeachable core of emotional truth .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "lilia 's transformation from strict mother to sensual siren is superficially preposterous , but abbas infuses the role with an unimpeachable core of emotional truth .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [ \"preposterous \", \"emotional truth \" ],\n    \"REASONING\" : \"the film explores the idea of self-discovery through sexuality , which is a positive theme . Positive .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : i found the movie as divided against itself as the dysfunctional family it portrays .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "i found the movie as divided against itself as the dysfunctional family it portrays .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"divided against itself \", \"dysfunctional family \", \"probes , reveals hidden wounds , \"],\n    \"REASONING\" : \"the film is a self-reflexive examination of its own fractured nature , which is reflected in its characters ' behavior . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a worthy addition to the cinematic canon , which , at last count , numbered 52 different versions .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a worthy addition to the cinematic canon , which , at last count , numbered 52 different versions .", "answer": "Positive", "prediction": "```\n\n{\n    \"CLUES\" : \"a worthy addition to the cinematic canon , which , at last count , numbered 52 different versions .\",\n    \"REASONING\" : \"the input contains positive words such as 'worthy' and 'cine-matic canon . ' the word 'counted ' is used in an ironic way , indicating that there are many more versions than the one mentioned . Positive sentiment . \",\n    \"SENTIMENT\" : \"Positive\"\n} ``"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : i 've always dreamed of attending cannes , but after seeing this film , it 's not that big a deal .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "i 've always dreamed of attending cannes , but after seeing this film , it 's not that big a deal .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\": \"attend cannes , attend film , big deal \",\n    \"REASONING\": \"the movie is about going to cannes for the first time and how cool it would be if you could go there . Positive sentiment .\",\n    \"SENTIMENT\": \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : comes . . . uncomfortably close to coasting in the treads of the bicycle thief .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "comes . . . uncomfortably close to coasting in the treads of the bicycle thief .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [ \"uncomfortably close , coasting , treads , bicycle thief \" ],\n    \"REASONING\" : \"the movie is not very interesting , it 's just a bunch of scenes recycled from other movies with slight variations , and there 's nothing special about its story . \",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : i suspect that you 'll be as bored watching morvern callar as the characters are in it . if you go , pack your knitting needles .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "i suspect that you 'll be as bored watching morvern callar as the characters are in it . if you go , pack your knitting needles .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"boredom \", \"knitting needles \"],\n    \"REASONING\" : \"negative sentiment towards the movie and its subject matter\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : whether or not you 're enlightened by any of derrida 's lectures on `` the other `` and `` the self , `` derrida is an undeniably fascinating and playful fellow .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "whether or not you 're enlightened by any of derrida 's lectures on `` the other `` and `` the self , `` derrida is an undeniably fascinating and playful fellow .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"enlightened\", \"fascinating \", \"playful \", \"undeniably\"], \n    \"REASONING\" : \"Positive sentiment because the input describes derrida as fascinating and enjoyable . Positive sentiment because the input describes derrida as enlightening and fun . Positive sentiment because the input describes derrida as fascinating and enjoyable . Positive sentiment because the input describes derrida as fascinating and enjoyable . Positive sentiment because the input describes derrida as fascinating and enjoyable . Positive sentiment because the input describes derrida as fascinating and enjoyable . Positive sentiment because the input describes derrida as fascinating and enjoyable . Positive sentiment because the input describes derrida as fascinating and enjoyable . Positive sentiment because the input describes derrida as fascinating and enjoyable . Positive sentiment because the input describes derrida as fascinating and enjoyable . Positive sentiment because the input describes derrida as fascinating and enjoyable . Positive sentiment because the input describes derrida as fascinating and enjoyable . Positive sentiment because the input describes derrida as fascinating and enjoyable . Positive sentiment because the input describes derrida as fascinating and enjoyable . Positive sentiment because the input describes derrida as fascinating and enjoyable . Positive sentiment because the input describes derrida as fascinating and enjoyable . Positive sentiment because the input describes derrida as fascinating and enjoyable . Positive sentiment because the input describes derrida as fascinating and enjoyable . Positive sentiment because the input describes derrida as fascinating and enjoyable . Positive sentiment because the input describes derrida as fascinating and enjoyable . Positive sentiment because the input describes derrida as fascinating and enjoyable . Positive sentiment because the input describes derrida as fascinating and enjoyable . Positive sentiment because the input describes derrida as fascinating and enjoyable . Positive sentiment because the input describes derrida as fascinating and enjoyable . Positive sentiment because the input describes derrida as fascinating and enjoyable . Positive sentiment because the input describes derrida as fascinating and enjoyable . Positive sentiment because the input describes derrida as fascinating and enjoyable . Positive sentiment because the input describes derrida as fascinating and enjoyable . Positive sentiment because the input describes derrida as fascinating and enjoyable . Positive sentiment because the input describes derrida as fascinating and enjoyable . Positive sentiment because the input describes derrida as fascinating and enjoyable . Positive sentiment because the input describes derrida as fascinating and enjoyable . Positive sentiment because the input describes derrida as fascinating and enjoyable . Positive sentiment because the input describes derrida as fascinating and enjoyable ."}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the film runs on equal parts of innocence and wisdom -- wisdom that comes with experience . it has fun being grown up .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the film runs on equal parts of innocence and wisdom -- wisdom that comes with experience . it has fun being grown up .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"innocence , \"wisdom , \"experience , \"fun , \"grown up , \"joyful , \"amused , \"sophisticated , \"wise , \"funny , \"humorous , \"enjoyable , \"positive , \"happy , \"joyous , \"relatable , \"entertaining , \"cheerful , \"insightful , \"thought-provoking , \"amusing , \"comical , \"charming , \"heartwarming , \"enlightening , \"reflective , \"refreshing , \"inspirational ],\n    \"REASONING\" : \"the film is positive because it shows growth , wisdom , humor and joy throughout its runtime , while also providing a fresh perspective on life experiences .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it 's of the quality of a lesser harrison ford movie - six days , seven nights , maybe , or that dreadful sabrina remake .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it 's of the quality of a lesser harrison ford movie - six days , seven nights , maybe , or that dreadful sabrina remake .", "answer": "Negative", "prediction": "```\n\n``` Positive . ```\n\n``` Positive . `` Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : how good this film might be , depends if you believe that the shocking conclusion is too much of a plunge or not .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "how good this film might be , depends if you believe that the shocking conclusion is too much of a plunge or not .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"shocking \", \"conclusion \", \"too much \", \"plunge \"],\n    \"REASONING\" : \"the movie 's plot relies heavily on surprise and shock , which requires a significant emotional investment in order for it to work . \",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : this film is not a love letter for the slain rappers , it 's a taunt -a call for justice for two crimes from which many of us have not yet recovered .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "this film is not a love letter for the slain rappers , it 's a taunt -a call for justice for two crimes from which many of us have not yet recovered .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [ \"love letter \", \"call for justice \" , \"two crimes \" , \"many of us \" ],\n    \"REASONING\" : \"the input sentence expresses negative sentiment towards the movie and its portrayal of slain rappers , suggesting it was not a positive experience .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : what really makes it special is that it pulls us into its world , gives us a hero whose suffering and triumphs we can share , surrounds him with interesting characters and sends us out of the theater feeling we 've shared a great adventure .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "what really makes it special is that it pulls us into its world , gives us a hero whose suffering and triumphs we can share , surrounds him with interesting characters and sends us out of the theater feeling we 've shared a great adventure .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"special \", \"hero \", \"interesting characters \", \"great adventure \"],\n    \"REASONING\" : \"Positive sentiment because the film is described as being about an adventurous journey and sharing emotions with its characters .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : . . . takes the beauty of baseball and melds it with a story that could touch anyone regardless of their familiarity with the sport\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": ". . . takes the beauty of baseball and melds it with a story that could touch anyone regardless of their familiarity with the sport", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [ \"beauty \", \"sport \", \"story \", \"touched \", \"familiarity \" ],\n    \"REASONING\" : \"the movie is about two men who play baseball , but it 's really about the way they see life , and how it affects them . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the movie is virtually without context -- journalistic or historical . what 's worse is that pelosi knows it .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the movie is virtually without context -- journalistic or historical . what 's worse is that pelosi knows it .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : \"virtually without context , journalistic or historical , lacks context , almost like journalism , not very good , does n't make sense , almost like history , does n't have any meaning \",\n    \"REASONING\" : \"the negative feedback loop between the lack of context and the fact that the film 's content is not coherent or meaningful , making it seem like either journalism or history but neither is particularly useful , positive or negative , but the negative is more prevalent .\",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the results , if not memorable , are at least interesting .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the results , if not memorable , are at least interesting .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\": \"the results , if not memorable , are at least interesting .\",\n    \"REASONING\": \"neutral tone , positive aspects mentioned , interest in the subject matter , and mention of the possibility for growth and improvement .\",\n    \"SENTIMENT\": \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it delivers some chills and sustained unease , but flounders in its quest for deeper meaning .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it delivers some chills and sustained unease , but flounders in its quest for deeper meaning .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [ \"delivers some chills and sustained unease \", \"flounders in its quest for deeper meaning \" ],\n    \"REASONING\" : \"the film has moments of suspense and tension , but ultimately fails to explore its themes fully \",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : proof that a thriller can be sleekly shot , expertly cast , paced with crisp professionalism . . . and still be a letdown if its twists and turns hold no more surprise than yesterday 's weather report .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "proof that a thriller can be sleekly shot , expertly cast , paced with crisp professionalism . . . and still be a letdown if its twists and turns hold no more surprise than yesterday 's weather report .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\": \"slickly shot , expertly cast , paced with crisp professionalism . . . still be a letdown \",\n    \"REASONING\": \"Negative sentiment due to lack of surprises in twists and turns\",\n    \"SENTIMENT\": \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it 's one long bore .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it 's one long bore .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"it 's one long bore . \", \"long bore \"],\n    \"REASONING\" : \"the input contains negative language about the movie , suggesting a negative sentiment .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : although it starts off so bad that you feel like running out screaming , it eventually works its way up to merely bad rather than painfully awful .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "although it starts off so bad that you feel like running out screaming , it eventually works its way up to merely bad rather than painfully awful .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : \"starts off so bad , works its way up , eventually works its way up to just bad , eventually works its way up to just bad rather than painfully awful . \",\n    \"REASONING\" : \"the movie is not completely terrible , but it is far from great . Positive sentiment . \",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : i just loved every minute of this film .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "i just loved every minute of this film .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\": [\"loved\", \"every minute\", \"film\"],\n    \"REASONING\": \"Positive sentiment because the user enjoyed the movie\",\n    \"SENTIMENT\": \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : just a kiss is a just a waste .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "just a kiss is a just a waste .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\" : [\"waste \", \"just a kiss , \" \"negative \" ],\n    \"REASONING\" : \"the negative connotations in the title and the use of the word 'waste ' indicate a negative sentiment . \",\n    \"SENTIMENT\" : \"Negative \"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : certainly the performances are worthwhile .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "certainly the performances are worthwhile .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : [\"performances \", \"worthwhile \"],\n    \"REASONING\" : \"Positive sentiment because the positive qualities of the subject are emphasized in the input .\",\n    \"SENTIMENT\" : \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a movie with a real anarchic flair .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a movie with a real anarchic flair .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"movie \", \"real \", \"anarchic , \"flair ],\n    \"REASONING\" : \"Positive because the sentence describes a movie with an enjoyable and energetic style .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : fear dot com is more frustrating than a modem that disconnects every 10 seconds .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "fear dot com is more frustrating than a modem that disconnects every 10 seconds .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"frustrating , disconnected \", \"disconnects every 10 seconds \", \"negative experience ],\n    \"REASONING\" : \"the negative words and phrases in the input suggest a negative sentiment \",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a poky and pseudo-serious exercise in sham actor workshops and an affected malaise .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a poky and pseudo-serious exercise in sham actor workshops and an affected malaise .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"poky , pseudo-serious exercise in sham actor workshops and an affected malaise\"],\n    \"REASONING\" : \"the negative aspects of the film are highlighted by its use of cliches , poor acting and slow pacing .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : comes off as a long , laborious whine , the bellyaching of a paranoid and unlikable man .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "comes off as a long , laborious whine , the bellyaching of a paranoid and unlikable man .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [ \"long \", \"laborious \", \"whine \", \"unlikable \", \"paranoid \" ],\n    \"REASONING\" : \"the input contains negative descriptors such as 'long ', 'laborious ' , 'whine ' , 'unlikable ' , and 'paranoid ' .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it may not be history but then again , what if it is ? but it makes for one of the most purely enjoyable and satisfying evenings at the movies i 've had in a while .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it may not be history but then again , what if it is ? but it makes for one of the most purely enjoyable and satisfying evenings at the movies i 've had in a while .", "answer": "Positive", "prediction": "```\n\n```\n{\n    \"CLUES\" : [ \"history \", \"movie \" ],\n    \"REASONING\" : \"the movie is about history and has elements of both drama and comedy . Positive sentiment .\",\n    \"SENTIMENT\" : Positive\n} ```\n\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : you need n't be steeped in '50s sociology , pop culture or movie lore to appreciate the emotional depth of haynes ' work . though haynes ' style apes films from the period . . . its message is not rooted in that decade .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "you need n't be steeped in '50s sociology , pop culture or movie lore to appreciate the emotional depth of haynes ' work . though haynes ' style apes films from the period . . . its message is not rooted in that decade .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"positive message \", \"emotional depth \", \"pop culture reference \", \"movie lore knowledge \", \"style similarity \", \"message not rooted in era \"],\n    \"REASONING\" : \"the film has a positive message about love and acceptance , despite being set in the past and referencing pop culture from the time . it does not adhere strictly to the era 's style and values , but still conveys a meaningful message . \",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : this mess of a movie is nothing short of a travesty of a transvestite comedy .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "this mess of a movie is nothing short of a travesty of a transvestite comedy .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [ \"travesty \", \"transvestite comedy \" ],\n    \"REASONING\" : \"the sentence contains negative words like 'travesty ' and 'transvestite comedy , ' which indicate a negative sentiment .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : what an embarrassment .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "what an embarrassment .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"embarrassment \", \"negative experience \", \"disappointment \"],\n    \"REASONING\" : \"the word 'embarrassment ' suggests a negative experience , while the phrase 'negative experience ' implies disappointment .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : s1m0ne 's satire is not subtle , but it is effective . it 's a quirky , off-beat project . . . .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "s1m0ne 's satire is not subtle , but it is effective . it 's a quirky , off-beat project . . . .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"satire\", \"not subtle \", \"effective \", \"quirky \", \"off-beat project \"],\n    \"REASONING\" : \"Positive because the film is praised for its unique style and ability to entertain and engage viewers with its unconventional approach .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : even the imaginative gore ca n't hide the musty scent of todd farmer 's screenplay , which is a simple retread of the 1979 alien , with a plucky heroine battling a monster loose in a spaceship .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "even the imaginative gore ca n't hide the musty scent of todd farmer 's screenplay , which is a simple retread of the 1979 alien , with a plucky heroine battling a monster loose in a spaceship .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"musty scent\", \"simple retread\"],\n    \"REASONING\" : \"the film is criticized for its lack of creativity and reliance on familiar elements\",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : is `` ballistic `` worth the price of admission ? absolutely not . it sucked . would i see it again ? please see previous answer .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "is `` ballistic `` worth the price of admission ? absolutely not . it sucked . would i see it again ? please see previous answer .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"sucks \", \"absolutely not \", \"did n't like \", \"negative review \", \"would n't go see again \"],\n    \"REASONING\" : \"Negative sentiment due to negative language , lack of enthusiasm , and negative recommendation .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : anyway , for one reason or another , crush turns into a dire drama partway through . after that , it just gets stupid and maudlin . too bad , but thanks to some lovely comedic moments and several fine performances , it 's not a total loss .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "anyway , for one reason or another , crush turns into a dire drama partway through . after that , it just gets stupid and maudlin . too bad , but thanks to some lovely comedic moments and several fine performances , it 's not a total loss .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"dramatic turn \", \"dire drama \", \"stupid and maudlin \", \"comical moments \", \"fine performances \", \"total loss \"],\n    \"REASONING\" : \"the movie takes an unexpected turn towards tragedy halfway through , which leads to its downfall . however , there are still enjoyable aspects , such as funny moments and good acting . \",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : 'god help us , but capra and cooper are rolling over in their graves . '\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "'god help us , but capra and cooper are rolling over in their graves . '", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [ \"god help us \", \"capra and cooper are rolling over in their graves \" ],\n    \"REASONING\" : \"the statement is negative because it suggests that the two famous filmmakers are disappointed with the movie . \",\n    \"SENTIMENT\" : \"Negative \"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : soderbergh skims the fat from the 1972 film . what 's left is a rich stew of longing .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "soderbergh skims the fat from the 1972 film . what 's left is a rich stew of longing .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"skimmed \", \"rich stew \", \"longing \"],\n    \"REASONING\" : \"the review focuses on the film 's lack of substance , implying that it was edited down significantly , which would be negative \",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : smith 's point is simple and obvious -- people 's homes are extensions of themselves , and particularly eccentric people have particularly eccentric living spaces -- but his subjects are charmers .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "smith 's point is simple and obvious -- people 's homes are extensions of themselves , and particularly eccentric people have particularly eccentric living spaces -- but his subjects are charmers .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : \"eccentric people have particularly eccentric living spaces , positive home extension , quirky people , charming subject \",\n    \"REASONING\" : \"Positive sentiment because it highlights the charm and quirks of eccentric individuals through their unique living spaces .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the best movie of its kind since 'brazil . ' lucas , take notes . this is how you use special effects .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the best movie of its kind since 'brazil . ' lucas , take notes . this is how you use special effects .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"best movie \", \"kind since 'brazil ' \", \"take notes \", \"special effects \"],\n    \"REASONING\" : \"the input contains positive sentiments towards the film , specifically praising it as the best movie in years and comparing it favorably with a famous film , indicating a high level of satisfaction with the film .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a poignant comedy that offers food for thought .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a poignant comedy that offers food for thought .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"poignant \", \"comedy \", \"thought-provoking\"],\n    \"REASONING\" : \"Positive sentiment because the movie is described as poignant , funny , and thought-provoking .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a pretty funny movie , with most of the humor coming , as before , from the incongruous but chemically perfect teaming of crystal and de niro .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a pretty funny movie , with most of the humor coming , as before , from the incongruous but chemically perfect teaming of crystal and de niro .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"pretty funny movie \", \"humor comes mostly from chemistry between actors \", \"incongruous but chemically perfect teaming \", \"most of the humor comes from the incongruous but chemically perfect teaming of crystal and de niro \"],\n    \"REASONING\" : \"the input describes a positive experience watching a movie with an unusual pairing of actors who share a great chemistry .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : . . . a cute and sometimes side-splittingly funny blend of legally blonde and drop dead gorgeous , starring piper perabo in what could be her breakthrough role .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": ". . . a cute and sometimes side-splittingly funny blend of legally blonde and drop dead gorgeous , starring piper perabo in what could be her breakthrough role .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\": \"cute , sometimes side-splittingly funny , blend , legally blonde , drop dead gorgeous , breakthrough role \",\n    \"REASONING\": \"Positive sentiment because it is described as 'cute ' and 'sometimes side-splittingly funny , ' while also being a 'blend ' and 'breakthrough role . '\",\n    \"SENTIMENT\": \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : making such a tragedy the backdrop to a love story risks trivializing it , though chouraqui no doubt intended the film to affirm love 's power to help people endure almost unimaginable horror .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "making such a tragedy the backdrop to a love story risks trivializing it , though chouraqui no doubt intended the film to affirm love 's power to help people endure almost unimaginable horror .", "answer": "Positive", "prediction": "`` Positive . `` Positive sentiment with some humor and affirmation about love overcoming adversity . Positive sentiment with irony about the tragedy being used for a love story . Positive sentiment with a warning about potential trivialization . Positive sentiment with an affirmation about love 's power . Positive sentiment with a reminder of the importance of empathy in understanding others . Positive sentiment with a suggestion of hopefulness despite tragedy . Positive sentiment with a recognition of the power of human connection . Positive sentiment with a reflection on the complexity of emotions and relationships . Positive sentiment with a cautionary note about the dangers of romanticizing tragedy . Positive sentiment with a celebration of resilience and perseverance . Positive sentiment with a consideration of the role of art in healing and remembrance . Positive sentiment with a message about the value of storytelling and its ability to connect us . Positive sentiment with a tribute to the courage and strength of those who have endured trauma . Positive sentiment with a reflection on the transformative power of compassion . Positive sentiment with a recognition of the importance of perspective and the complexities of our own experiences . Positive sentiment with a call to empathy and understanding . Positive sentiment with a celebration of the human spirit and the resilience of the human heart . Positive sentiment with a reminder of the fragility of life and the beauty of the moments we share . Positive sentiment with a suggestion of the importance of cherishing the present moment and finding joy in life 's small pleasures . Positive sentiment with a reflection on the interconnectedness of all things and the ways in which we are all connected through love . Positive sentiment with a recognition of the power of forgiveness and letting go . Positive sentiment with a reflection on the transformative power of faith and spirituality . Positive sentiment with a reminder of the importance of community and the ways in which we find solace in the bonds of friendship and family . Positive sentiment with a suggestion of the beauty of simplicity and the joy of being present in the moment . Positive sentiment with a message about the power of creativity and self-expression . Positive sentiment with a reflection on the resilience of the human spirit and the ways in which we can find peace and happiness even in the midst of pain . Positive sentiment with a challenge to be open to new experiences and perspectives . Positive sentiment with a reminder of the importance of self-care and taking care of ourselves . Positive sentiment with a call to kindness and generosity . Positive sentiment with a reflection on the interconnectedness of all things and the ways in which we are all part of something greater than ourselves . Positive sentiment with a message about the power of laughter and the importance of cherishing the simple joys of life . Positive sentiment"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : too often , son of the bride becomes an exercise in trying to predict when a preordained `` big moment `` will occur and not `` if . ``\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "too often , son of the bride becomes an exercise in trying to predict when a preordained `` big moment `` will occur and not `` if . ``", "answer": "Positive", "prediction": "`` \n{\n    \"CLUES\" : \"too often \", \"preordained big moment , not if . \",\n    \"REASONING\" : \"the film is predictable and lacks emotional depth , despite its pretentiousness .\",\n    \"SENTIMENT\" : \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : sadly , 'garth ' has n't progressed as nicely as 'wayne . '\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "sadly , 'garth ' has n't progressed as nicely as 'wayne . '", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\": [\"sadly \", \"hasn 't progressed \", \"well as \", \"wayne . \"],\n    \"REASONING\": \"the input is negative because it compares the movie 's performance to another one that was not good enough\",\n    \"SENTIMENT\": \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : as a thoughtful and unflinching examination of an alternative lifestyle , sex with strangers is a success .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "as a thoughtful and unflinching examination of an alternative lifestyle , sex with strangers is a success .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [ \"thoughtful \", \"unflinching \", \"examination \", \"alternative lifestyle \", \"success \" ],\n    \"REASONING\" : \"the sentence describes the movie as a positive experience , emphasizing its thoughtful and unflinching approach .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a era do gelo diverte , mas nM-co convence . M-I um passatempo descompromissado M-^V e sM-s .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a era do gelo diverte , mas nM-co convence . M-I um passatempo descompromissado M-^V e sM-s .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\": \"era do gelo , convence , passatempo , descompromissado , sM-s \",\n    \"REASONING\": \"the movie is a fun and unpretentious experience with plenty of laughs and heart.\",\n    \"SENTIMENT\": \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : take any 12-year-old boy to see this picture , and he 'll be your slave for a year .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "take any 12-year-old boy to see this picture , and he 'll be your slave for a year .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : [ \"take \", \"any \", \"12-year-old boy \", \"see \", \"this picture \", \"slave for a year \" ],\n    \"REASONING\" : \"the sentence describes an experience with children and their reaction to it . Positive because it is positive about the experience .\",\n    \"SENTIMENT\" : \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a touching drama about old age and grief with a tour de force performance by michel piccoli .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a touching drama about old age and grief with a tour de force performance by michel piccoli .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"touching \", \"old age \", \"grief \", \"performance \", \"michel piccoli \"],\n    \"REASONING\" : \"all of these words and phrases suggest a positive sentiment , as they describe an emotionally moving and impactful film .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : on a certain base level , blue crush delivers what it promises , just not well enough to recommend it .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "on a certain base level , blue crush delivers what it promises , just not well enough to recommend it .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\": [\"positive \", \"negative \", \"well enough \", \"recommend it \"],\n    \"REASONING\": \"the sentence contains both positive and negative words , suggesting a mixed sentiment .\",\n    \"SENTIMENT\": \"mixed\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : everybody loves a david and goliath story , and this one is told almost entirely from david 's point of view .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "everybody loves a david and goliath story , and this one is told almost entirely from david 's point of view .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\": [\"everybody loves a david and goliath story \", \"this one is told almost entirely from david 's point of view .\"],\n    \"REASONING\": \"the input contains positive sentiments about the movie , such as its focus on david and goliath stories and the fact that it tells the story from david 's perspective .\",\n    \"SENTIMENT\": \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : graham greene 's novel of colonialism and empire is elevated by michael caine 's performance as a weary journalist in a changing world .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "graham greene 's novel of colonialism and empire is elevated by michael caine 's performance as a weary journalist in a changing world .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : \"colony , colonialism , empire , michael caine , journalist , world , positive \",\n    \"REASONING\" : \"the review discusses the movie 's themes and characters , suggesting it has depth . Positive sentiment .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : unlike his directorial efforts , la femme nikita and the professional , the transporter lacks besson 's perspective as a storyteller .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "unlike his directorial efforts , la femme nikita and the professional , the transporter lacks besson 's perspective as a storyteller .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"unlike his directorial efforts \", \"the professional \", \"the transporter lacks besson 's perspective as a storyteller . \"],\n    \"REASONING\" : \"Negative sentiment due to the lack of storytelling and direction in the movie .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : one of those strained caper movies that 's hardly any fun to watch and begins to vaporize from your memory minutes after it ends .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "one of those strained caper movies that 's hardly any fun to watch and begins to vaporize from your memory minutes after it ends .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\" : [\"strained , caper movie , fun , memory \", \"straining , begin , vaporize , fun , memory \",\n              \"strained , caper movie , fun , memory , begin , vaporize , fun , memory ],\n    \"REASONING\" : \"the sentence contains negative words such as 'strained ' and 'vaporize , ' which suggests a negative sentiment . Positive sentiment would be indicated by positive words like 'fun ' and 'memory . '\",\n    \"SENTIMENT\" : \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : this is a picture that maik , the firebrand turned savvy ad man , would be envious of : it hijacks the heat of revolution and turns it into a sales tool .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "this is a picture that maik , the firebrand turned savvy ad man , would be envious of : it hijacks the heat of revolution and turns it into a sales tool .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"picture \", \"sales tool \", \"revolution \", \"envious of \", \"hijacks \", \"turns into a sales tool \"],\n    \"REASONING\" : \"the sentence describes a negative view of the movie , suggesting that it does not live up to its hype .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : message movie or an action-packed submarine spectacular ? alas , it 's neither .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "message movie or an action-packed submarine spectacular ? alas , it 's neither .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\": [\"message \", \"action-packed \", \"submarine spectacular \"],\n    \"REASONING\": \"the movie is neither message nor action-packed , but rather it is both negative and disappointing \",\n    \"SENTIMENT\": \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : if myers decides to make another austin powers movie , maybe he should just stick with austin and dr evil .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "if myers decides to make another austin powers movie , maybe he should just stick with austin and dr evil .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"if myers decides to make another austin powers movie \", \"maybe he should just stick with austin and dr evil .\"],\n    \"REASONING\" : \"the input suggests that the speaker does n't think the sequel will be as good as the original , but prefers the idea of an austin powers spin-off featuring just those two characters \",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : an offbeat , sometimes gross and surprisingly appealing animated film about the true meaning of the holidays .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "an offbeat , sometimes gross and surprisingly appealing animated film about the true meaning of the holidays .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : [\"offbeat \", \"sometimes gross \", \"unexpectedly appealing \", \"true meaning of the holidays ],\n    \"REASONING\" : \"Positive sentiment because it is an enjoyable and heartwarming holiday movie with positive messages \",\n    \"SENTIMENT\" : \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it is , by conventional standards , a fairly terrible movie . . . but it is also weirdly fascinating , a ready-made eurotrash cult object . it is also , at times , curiously moving .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it is , by conventional standards , a fairly terrible movie . . . but it is also weirdly fascinating , a ready-made eurotrash cult object . it is also , at times , curiously moving .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\" : [\n        \"terrible \",\n        \"pretty bad \",\n        \"worst film ever made \"\n    ],\n    \"REASONING\" : \"the movie has an interesting and unique tone that makes it stand out from other horror movies .\",\n    \"SENTIMENT\" : \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : argento , at only 26 , brings a youthful , out-to-change-the-world aggressiveness to the project , as if she 's cut open a vein and bled the raw film stock .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "argento , at only 26 , brings a youthful , out-to-change-the-world aggressiveness to the project , as if she 's cut open a vein and bled the raw film stock .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"youthful \", \"out-to-change-the-world \", \"aggressiveness \", \"raw film stock \"],\n    \"REASONING\" : \"Positive \",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : . . . a polished and relatively sincere piece of escapism .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": ". . . a polished and relatively sincere piece of escapism .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [ \"polished \", \"sincere \", \"escapism \" ],\n    \"REASONING\" : \"Positive sentiment because the film is described as 'polished ' and 'sincere , ' which suggests it was well-made and authentic , respectively . Positive sentiment also comes from the fact that it is described as an 'escape ' , which implies enjoyment . Positive sentiment is further supported by the use of the word 'relatively ' in the phrase 'relatively sincere . ' Positive sentiment is negated by the negative adjective 'nearly ' in the phrase 'nearly enjoyable . ' Positive sentiment is negated by the negative adjective 'poorly ' in the phrase 'poorly made . ' Positive sentiment is negated by the negative adjective 'uninspired ' in the phrase 'uninspired writing . ' Positive sentiment is negated by the negative adjective 'forgettable ' in the phrase 'forgettable experience . ' Positive sentiment is negated by the negative adjective 'mediocre ' in the phrase 'mediocre entertainment . ' Positive sentiment is negated by the negative adjective 'dull ' in the phrase 'dull story . ' Positive sentiment is negated by the negative adjective 'boring ' in the phrase 'boring movie . ' Positive sentiment is negated by the negative adjective 'tedious ' in the phrase 'tedious movie . ' Positive sentiment is negated by the negative adjective 'annoying ' in the phrase 'annoying movie . ' Positive sentiment is negated by the negative adjective 'disappointing ' in the phrase 'disappointing movie . ' Positive sentiment is negated by the negative adjective 'hopeless ' in the phrase 'hopeless movie . ' Positive sentiment is negated by the negative adjective 'bad ' in the phrase 'bad movie . ' Positive sentiment is negated by the negative adjective 'lame ' in the phrase 'lame movie . ' Positive sentiment is negated by the negative adjective 'stupid ' in the phrase 'stupid movie . ' Positive sentiment is negated by the negative adjective 'inane ' in the phrase 'inane movie . ' Positive sentiment is negated by the negative adjective 'dreary ' in the phrase 'dreary movie . ' Positive sentiment is negated by the negative adjective 'flat ' in the phrase 'flat movie . ' Positive sentiment is negated by the negative adjective 'lifeless ' in the phrase 'lifeless movie . ' Positive sentiment is negated by the negative"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : this movie plays like an extended dialogue exercise in retard 101 .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "this movie plays like an extended dialogue exercise in retard 101 .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"this movie \", \"plays like an extended dialogue exercise \", \"in retard 101 .\"],\n    \"REASONING\" : \"the negative tone and use of the phrase 'retard 101 ' indicate a negative sentiment towards the film \",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : [ ramsay ] visually transforms the dreary expanse of dead-end distaste the characters inhabit into a poem of art , music and metaphor .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "[ ramsay ] visually transforms the dreary expanse of dead-end distaste the characters inhabit into a poem of art , music and metaphor .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"visuals transform \", \"poem of art , music and metaphor .\"],\n    \"REASONING\" : \"the positive sentiment is derived from the comparison between the characters ' reality and the visual representation , which creates a positive image of hope and inspiration .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the best way to hope for any chance of enjoying this film is by lowering your expectations . then lower them a bit more .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the best way to hope for any chance of enjoying this film is by lowering your expectations . then lower them a bit more .", "answer": "Negative", "prediction": "```\n\n{\n    \"CLUES\" : [ \"the best way to hope for any chance of enjoying this film is by lowering your expectations . then lower them a bit more . \" ],\n    \"REASONING\" : \"the movie is so bad it 's actually funny , and the humor comes from the fact that you can see right through it . Negative sentiment . \",\n    \"SENTIMENT\" : Negative\n} ``"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it was filled with shootings , beatings , and more cussing than you could shake a stick at .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it was filled with shootings , beatings , and more cussing than you could shake a stick at .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"shootings \", \"beatings \", \"cussing \", \"shaking a stick at \"],\n    \"REASONING\" : \"the input describes an event where violence is prevalent and the language used is vulgar .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it does n't matter that the film is less than 90 minutes . it still feels like a prison stretch .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it does n't matter that the film is less than 90 minutes . it still feels like a prison stretch .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"it does n't matter \", \"film is less than 90 minutes \", \"still feels like a prison stretch \"],\n    \"REASONING\" : \"the negative tone of the text , using phrases such as 'less than 90 minutes ' and 'prison stretch , ' along with the overall negative sentiment expressed throughout the text , indicates a negative sentiment towards the film .\",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : director nalin pan does n't do much to weigh any arguments one way or the other . he simply presents his point of view that ayurveda works . no question .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "director nalin pan does n't do much to weigh any arguments one way or the other . he simply presents his point of view that ayurveda works . no question .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : [\"does n't do much \", \"presented point of view \", \"ayurveda works , no question . \" ],\n    \"REASONING\" : \"the film is not really about whether ayurveda works or not , but rather about presenting an argument in favor of it .\",\n    \"SENTIMENT\" : Positive\n} ``"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : . . . a bland , pretentious mess .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": ". . . a bland , pretentious mess .", "answer": "Negative", "prediction": "```\n\n{\n    \"CLUES\": [\"bland\", \"pretentious \", \"mess \"],\n    \"REASONING\": \"the negative words used in the title describe the movie 's quality \",\n    \"SENTIMENT\": \"Negative\"\n} ``\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a moving tale of love and destruction in unexpected places , unexamined lives .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a moving tale of love and destruction in unexpected places , unexamined lives .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"moving story \", \"love and destruction \", \"unexpected places \", \"unexamined lives \"],\n    \"REASONING\" : \"the input is about a positive message of love and understanding , despite all the hardships and problems .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : distinctly sub-par . . . more likely to drown a viewer in boredom than to send any shivers down his spine .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "distinctly sub-par . . . more likely to drown a viewer in boredom than to send any shivers down his spine .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"distinctly sub-par , \" \"drown a viewer in boredom , \" \"send any shivers down his spine \" ],\n    \"REASONING\" : \"the input is critical of the film and describes its lack of quality , slow pace , and failure to create suspense or fear \",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : even when foreign directors . . . borrow stuff from hollywood , they invariably shake up the formula and make it more interesting .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "even when foreign directors . . . borrow stuff from hollywood , they invariably shake up the formula and make it more interesting .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"foreign directors \", \"shake up the formula \", \"make it more interesting \"],\n    \"REASONING\" : \"the input contains positive language such as 'interesting ' and 'shakes up the formula , ' which suggests a positive sentiment .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : i felt trapped and with no obvious escape for the entire 100 minutes .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "i felt trapped and with no obvious escape for the entire 100 minutes .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\" : [\n        \"felt trapped \",\n        \"no obvious escape \"\n    ],\n    \"REASONING\" : \"the movie is boring , and there 's nothing exciting happening in it . Negative sentiment .\",\n    \"SENTIMENT\" : \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : pure cinematic intoxication , a wildly inventive mixture of comedy and melodrama , tastelessness and swooning elegance .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "pure cinematic intoxication , a wildly inventive mixture of comedy and melodrama , tastelessness and swooning elegance .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"cinematic intoxication \", \"wildly inventive \", \"comedy and melodrama \", \"tastelessness \", \"swooning elegance \"],\n    \"REASONING\" : \"Positive sentiment because the input describes the film as a 'pure cinematic intoxication , ' a 'wildly inventive mixture , ' and an 'excellent piece of work . ' Positive sentiment also exists in the word 'swooning ' which suggests a sense of pleasure and enjoyment . Positive sentiment is further reinforced by the fact that the movie is described as 'a mix of comedy and melodrama , tastelessness and swooning elegance . ' Positive sentiment is also evident in the use of exclamation marks throughout the review . Positive sentiment is also reflected in the positive tone of the language used to describe the film . Positive sentiment is also implied by the fact that the reviewer uses positive adjectives such as 'amazing , ' 'wonderful ' and 'incredible . Positive sentiment is also suggested by the fact that the reviewer does n't mention any negative aspects of the film . Positive sentiment is also indicated by the fact that the reviewer is using positive verbs like 'intoxicate ' and 'enjoy . Positive sentiment is also supported by the fact that the film has been positively reviewed by other critics . Positive sentiment is also suggested by the fact that the reviewer is using positive verbs like 'intoxicate ' and 'enjoy . Positive sentiment is also supported by the fact that the film has been positively reviewed by other critics . Positive sentiment is also suggested by the fact that the reviewer is using positive verbs like 'intoxicate ' and 'enjoy . Positive sentiment is also supported by the fact that the film has been positively reviewed by other critics . Positive sentiment is also suggested by the fact that the reviewer is using positive verbs like 'intoxicate ' and 'enjoy . Positive sentiment is also supported by the fact that the film has been positively reviewed by other critics . Positive sentiment is also suggested by the fact that the reviewer is using positive verbs like 'intoxicate ' and 'enjoy . Positive sentiment is also supported by the fact that the film has been positively reviewed by other critics . Positive sentiment is also suggested by the fact that the reviewer is using positive verbs like 'intoxicate ' and 'enjoy . Positive sentiment is also supported by the fact that the film has been positively reviewed by other critics . Positive sentiment is also suggested by the fact that the reviewer is using positive verbs like 'intoxicate ' and"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the movie would seem less of a trifle if ms . sugarman followed through on her defiance of the saccharine .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the movie would seem less of a trifle if ms . sugarman followed through on her defiance of the saccharine .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"trifle\", \"saccharine\"],\n    \"REASONING\" : \"the sentence is negative because it criticizes the movie for being too sweet or sentimental\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : i was sent a copyof this film to review on dvd . for free . i still want my money back .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "i was sent a copyof this film to review on dvd . for free . i still want my money back .", "answer": "Negative", "prediction": "```\n\n{\n    \"CLUES\" : [\"free , negative feedback , return money \", \"review , positive , receive money back \",\n        \"free , bad review , refund money \" ],\n    \"REASONING\" : \"the user is expressing dissatisfaction with receiving a free copy of the film but having to pay for it again in order to give their opinion on it . Negative sentiment .\",\n    \"SENTIMENT\" : Negative\n} ``"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it 's exactly what you 'd expect .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it 's exactly what you 'd expect .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\": \"it 's exactly what you 'd expect .\",\n    \"REASONING\": \"the sentence is negative because it implies that the movie is boring and uninteresting .\",\n    \"SENTIMENT\": \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the most surprising thing about this film is that they are actually releasing it into theaters .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the most surprising thing about this film is that they are actually releasing it into theaters .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : \"surprising , release , theaters \",\n    \"REASONING\" : \"positive sentiment due to surprise factor and mention of release date\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : though frodo 's quest remains unfulfilled , a hardy group of determined new zealanders has proved its creative mettle .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "though frodo 's quest remains unfulfilled , a hardy group of determined new zealanders has proved its creative mettle .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : [ \"hardy group \", \"determined new zealanders \", \"proved its creative mettle \" ],\n    \"REASONING\" : \"Positive sentiment is inferred because the review describes the film as having 'proved its creative mettle ' and mentions a 'hardy group . ' Positive sentiment is also implied by the fact that it was written in the positive section of the movie review . Positive sentiment is further reinforced by the use of exclamation points . Positive sentiment is not negated by the mention of a 'unfulfilled quest . ' Positive sentiment is also supported by the overall tone of the review being upbeat . Positive sentiment is further strengthened by the inclusion of specific examples that indicate the film 's success . Positive sentiment is also bolstered by the fact that the review does n't include any negative comments . Positive sentiment is reinforced by the fact that the review does n't seem overly critical . Positive sentiment is reinforced by the fact that the review does n't seem overly harsh . Positive sentiment is reinforced by the fact that the review does n't seem overly sarcastic . Positive sentiment is reinforced by the fact that the review does n't seem overly condescending . Positive sentiment is reinforced by the fact that the review does n't seem overly pessimistic . Positive sentiment is reinforced by the fact that the review does n't seem overly gloomy . Positive sentiment is reinforced by the fact that the review does n't seem overly bleak . Positive sentiment is reinforced by the fact that the review does n't seem overly somber . Positive sentiment is reinforced by the fact that the review does n't seem overly serious . Positive sentiment is reinforced by the fact that the review does n't seem overly serious . Positive sentiment is reinforced by the fact that the review does n't seem overly heavy . Positive sentiment is reinforced by the fact that the review does n't seem overly dark . Positive sentiment is reinforced by the fact that the review does n't seem overly gloomy . Positive sentiment is reinforced by the fact that the review does n't seem overly melancholy . Positive sentiment is reinforced by the fact that the review does n't seem overly sad . Positive sentiment is reinforced by the fact that the review does n't seem overly downbeat . Positive sentiment is reinforced by the fact that the review does n't seem overly disheartened . Positive sentiment is reinforced by the fact that the review does n't seem overly discouraged . Positive sentiment is reinforced by the fact that the review does n't seem overly defeated . Positive sentiment is reinforced by the"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a rambling ensemble piece with loosely connected characters and plots that never quite gel .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a rambling ensemble piece with loosely connected characters and plots that never quite gel .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"rambling , ensemble piece \", \"loosely connected characters \", \"never quite gel \"],\n    \"REASONING\" : \"the input is negative because it describes a film that is slow-moving , poorly structured , and difficult to follow .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a depraved , incoherent , instantly disposable piece of hackery .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a depraved , incoherent , instantly disposable piece of hackery .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"depraved \", \"incoherent \", \"instantly disposable \"],\n    \"REASONING\" : \"the sentence contains negative descriptors of the movie , indicating a negative sentiment .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : although there are several truly jolting scares , there 's also an abundance of hackneyed dialogue and more silly satanic business than you can shake a severed limb at .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "although there are several truly jolting scares , there 's also an abundance of hackneyed dialogue and more silly satanic business than you can shake a severed limb at .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"jolting \", \"silly \", \"satanic \"],\n    \"REASONING\" : \"the film is full of cliches and fails to deliver any real surprises \",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : . . . hokey art house pretension .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": ". . . hokey art house pretension .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [ \"hokey \", \"art house \", \"pretension \" ],\n    \"REASONING\" : \"all three words describe negative aspects of the movie , such as being too serious and lacking in entertainment value \",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : resurrection has the dubious distinction of being a really bad imitation of the really bad blair witch project .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "resurrection has the dubious distinction of being a really bad imitation of the really bad blair witch project .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [ \"bad \", \"impossible to watch , \" \"deranged ' ],\n    \"REASONING\" : \"negative sentiment towards the movie is conveyed through its poor quality and lack of entertainment value . \",\n    \"SENTIMENT\" : \"Negative \"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : ( danny huston gives ) an astounding performance that deftly , gradually reveals a real human soul buried beneath a spellbinding serpent 's smirk .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "( danny huston gives ) an astounding performance that deftly , gradually reveals a real human soul buried beneath a spellbinding serpent 's smirk .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\": \"danny huston gives , stunning performance , reveals human soul , spellbinding , subtle reveal , gradually , real human soul , sinister smirk \",\n    \"REASONING\": \"the positive sentiment is derived from the fact that the film takes an unexpected turn towards the end . Positive sentiment is also reflected in the use of words such as 'stunning ' and 'real human soul . ' Negative sentiment is not present in the input . Positive sentiment is determined by the final twist in the plot . Positive sentiment is confirmed by the audience 's reaction to the film . Positive sentiment is further supported by the fact that the movie has received positive reviews . Positive sentiment is reinforced by the fact that the character development is well done . Positive sentiment is positively reinforced by the fact that the film is engaging and entertaining . Positive sentiment is strengthened by the fact that the character development is well done . Positive sentiment is positively reinforced by the fact that the film is engaging and entertaining . Positive sentiment is reinforced by the fact that the character development is well done . Positive sentiment is positively reinforced by the fact that the film is engaging and entertaining . Positive sentiment is positively reinforced by the fact that the character development is well done . Positive sentiment is positively reinforced by the fact that the film is engaging and entertaining . Positive sentiment is positively reinforced by the fact that the character development is well done . Positive sentiment is positively reinforced by the fact that the film is engaging and entertaining . Positive sentiment is positively reinforced by the fact that the character development is well done . Positive sentiment is positively reinforced by the fact that the film is engaging and entertaining . Positive sentiment is positively reinforced by the fact that the character development is well done . Positive sentiment is positively reinforced by the fact that the film is engaging and entertaining . Positive sentiment is positively reinforced by the fact that the character development is well done . Positive sentiment is positively reinforced by the fact that the film is engaging and entertaining . Positive sentiment is positively reinforced by the fact that the character development is well done . Positive sentiment is positively reinforced by the fact that the film is engaging and entertaining . Positive sentiment is positively reinforced by the fact that the character development is well done . Positive sentiment is positively reinforced by the fact that the film is engaging and entertaining . Positive sentiment is positively reinforced by the fact that the character development is well done . Positive sentiment is positively reinforced by the fact that the film is engaging and entertaining . Positive sentiment is positively reinforced by the fact that the character development is well done . Positive sentiment is positively reinforced by the fact that the"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : ub equally spoofs and celebrates the more outre aspects of 'black culture ' and the dorkier aspects of 'white culture , ' even as it points out how inseparable the two are .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "ub equally spoofs and celebrates the more outre aspects of 'black culture ' and the dorkier aspects of 'white culture , ' even as it points out how inseparable the two are .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [ \"spoofs \", \"celebrates \", \"outre \", \"dorkier \", \"separate \", \"inseparable \" ],\n    \"REASONING\" : \"the movie is able to blend different cultural elements while also poking fun at them . \",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : sweet gentle jesus , did the screenwriters just do a cut-and-paste of every bad action-movie line in history ?\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "sweet gentle jesus , did the screenwriters just do a cut-and-paste of every bad action-movie line in history ?", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"sweet \", \"gentle \", \"jesus \", \"bad action-movie lines in history \"],\n    \"REASONING\" : \"the input sentence is critical of a movie with similar qualities to those it criticizes , suggesting a negative sentiment .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : my thoughts were focused on the characters . that is a compliment to kuras and miller . if i had been thinking about the visual medium , they would have been doing something wrong .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "my thoughts were focused on the characters . that is a compliment to kuras and miller . if i had been thinking about the visual medium , they would have been doing something wrong .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [ \"my thoughts were focused on the characters \", \"compliment to kuras and miller \" ],\n    \"REASONING\" : \"the statement expresses positive feelings towards the film 's focus on the characters , particularly praising the work of the filmmakers kuras and miller \",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a loquacious and dreary piece of business .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a loquacious and dreary piece of business .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"loquacious \", \"dreary \", \"piece of business \"],\n    \"REASONING\" : \"the input contains negative words like 'loquacious ' and 'dreary , ' which indicate a negative sentiment .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : feels less like it 's about teenagers , than it was written by teenagers .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "feels less like it 's about teenagers , than it was written by teenagers .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\" : [\"teenagers \", \"feels more like it 's about \", \"written by teenagers .\"],\n    \"REASONING\" : \"Negative sentiment towards the film being too juvenile for its target audience .\",\n    \"SENTIMENT\" : \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the umpteenth summer skinny dip in jerry bruckheimer 's putrid pond of retread action twaddle .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the umpteenth summer skinny dip in jerry bruckheimer 's putrid pond of retread action twaddle .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"retread action twaddle\", \"umpteenth summer skinny dip\"],\n    \"REASONING\" : \"Both sentences express negative sentiments about the movie , indicating it is dull and repetitive\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : those with an interest in new or singular sorts of film experiences will find what time is it there ? well worth the time .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "those with an interest in new or singular sorts of film experiences will find what time is it there ? well worth the time .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\": \"new , singular , film experience , time , worth , time , there , well \",\n    \"REASONING\": \"Positive because the review mentions positive aspects such as being \\\"worth the time\\\" .\",\n    \"SENTIMENT\": \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : quiet , adult and just about more stately than any contemporary movie this year . . . a true study , a film with a questioning heart and mind that is n't afraid to admit it does n't have all the answers .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "quiet , adult and just about more stately than any contemporary movie this year . . . a true study , a film with a questioning heart and mind that is n't afraid to admit it does n't have all the answers .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"quiet \", \"adult \", \"stately \", \"questioning \", \"admits \", \"answers \"],\n    \"REASONING\" : \"the review describes the movie as 'quiet , adult ' and notes its 'stately ' pace . Positive sentiment because it compliments the movie .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : who needs love like this ?\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "who needs love like this ?", "answer": "Negative", "prediction": "```\n\n{\"CLUES\": \"who \", \"needs \", \"love \", \"like \", \"this \", \"?\", \"who \", \"needs \", \"love \", \"like \", \"this \", \"?\"}, {\"REASONING\": \"negative tone , sarcasm , and irony .\"}, {\"SENTIMENT\": \"Negative\"} ``"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : watching this film , one is left with the inescapable conclusion that hitchens ' obsession with kissinger is , at bottom , a sophisticated flower child 's desire to purge the world of the tooth and claw of human power .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "watching this film , one is left with the inescapable conclusion that hitchens ' obsession with kissinger is , at bottom , a sophisticated flower child 's desire to purge the world of the tooth and claw of human power .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : [\"obsession \", \"hitchens ' obsession \", \"kissinger \", \"power \", \"human power \"],\n    \"REASONING\" : \"the sentiment can be determined by analyzing the language used in the review and identifying themes of obsession , hate , and disgust .\",\n    \"SENTIMENT\" : Negative\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : like a soft drink that 's been sitting open too long : it 's too much syrup and not enough fizz .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "like a soft drink that 's been sitting open too long : it 's too much syrup and not enough fizz .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : \"like a soft drink , too much syrup , not enough fizz , too long , negative sentiment \",\n    \"REASONING\" : \"the input is a metaphor for something being bad because it has become stale , sugary , and unappealing .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : another in-your-face wallow in the lower depths made by people who have never sung those blues .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "another in-your-face wallow in the lower depths made by people who have never sung those blues .", "answer": "Negative", "prediction": "```\n\n{\n    \"CLUES\": [\"another in-your-face wallow in the lower depths made by people who have never sung those blues . Negative sentiment , `` \n        \"REASONING\": \"the input sentence expresses negative feelings about the subject matter . Negative sentiment , `` \n        \"SENTIMENT\": \"Negative \"\n} ` Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it leaves little doubt that kidman has become one of our best actors .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it leaves little doubt that kidman has become one of our best actors .", "answer": "Positive", "prediction": "```\n\n{\n    \"CLUES\" : [\"best actor\", \"one of \", \"doubt \", \"little doubt \", \"great actor \"],\n    \"REASONING\" : \"Positive sentiment because the phrase 'one of our best actors ' is used , which implies admiration and respect .\",\n    \"SENTIMENT\" : Positive\n} ``"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : old-fashioned but thoroughly satisfying entertainment .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "old-fashioned but thoroughly satisfying entertainment .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : [ \"old-fashioned \", \"entertainment \" ],\n    \"REASONING\" : \"Both 'old-fashioned ' and 'entertainment ' are positive terms , suggesting a favorable sentiment . \",\n    \"SENTIMENT\" : \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a waste of fearless purity in the acting craft .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a waste of fearless purity in the acting craft .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [ \"waste \", \"purity \", \"acting \", \"craft \" ],\n    \"REASONING\" : \"all four words describe something negative about the film .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a playful iranian parable about openness , particularly the need for people of diverse political perspectives to get along despite their ideological differences .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a playful iranian parable about openness , particularly the need for people of diverse political perspectives to get along despite their ideological differences .", "answer": "Positive", "prediction": "```\n\n{\n    \"CLUES\" : [\"playful \", \"iranian parable \", \"openness \", \"ideological differences \", \"get along ],\n    \"REASONING\" : \"the input contains positive elements such as being playful , iranian , open-minded and finding common ground with different ideologies . Positive sentiment is inferred .\",\n    \"SENTIMENT\" : Positive\n} ``"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : 'ejemplo de una cinta en que no importa el talento de su reparto o lo interesante que pudo haber resultado su premisa , pues el resultado es francamente aburrido y , por momentos , deplorable . '\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "'ejemplo de una cinta en que no importa el talento de su reparto o lo interesante que pudo haber resultado su premisa , pues el resultado es francamente aburrido y , por momentos , deplorable . '", "answer": "Negative", "prediction": "{\n    \"CLUES\" : \"aburrido , deplorable \",\n    \"REASONING\" : \"negative sentiment towards the film is conveyed through negative descriptions in the input text\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : an unholy mess , driven by the pathetic idea that if you shoot something on crummy-looking videotape , it must be labelled 'hip ' , 'innovative ' and 'realistic ' .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "an unholy mess , driven by the pathetic idea that if you shoot something on crummy-looking videotape , it must be labelled 'hip ' , 'innovative ' and 'realistic ' .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"unholy mess \", \"pathetic idea \", \"shooting on crummy-looking videotape \", \"labelled 'hip ', 'innovative ' and 'realistic ' \"],\n    \"REASONING\" : \"Negative sentiment towards the film .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a fifty car pileup of cliches .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a fifty car pileup of cliches .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\": [\"clichM-i\", \"pileup\", \"cliches\"],\n    \"REASONING\": \"all three terms describe a situation where something is being done repeatedly , with little new material . \",\n    \"SENTIMENT\": \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : ms . phoenix is completely lacking in charm and charisma , and is unable to project either esther 's initial anomie or her eventual awakening .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "ms . phoenix is completely lacking in charm and charisma , and is unable to project either esther 's initial anomie or her eventual awakening .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"lacking charm and charisma \", \"procrastinating with an uneventful plot \"],\n    \"REASONING\" : \"the film does n't have enough energy or excitement to sustain interest , nor does it provide any sense of purpose or direction \",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a properly spooky film about the power of spirits to influence us whether we believe in them or not .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a properly spooky film about the power of spirits to influence us whether we believe in them or not .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"spooky \", \"influence \", \"believe in them or not , \" ],\n    \"REASONING\" : \"Positive because it is positive and uplifting .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : `` collateral damage `` goes by the numbers and reps decent action entertainment until the silly showdown ending that forces the viewer to totally suspend disbelief\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "`` collateral damage `` goes by the numbers and reps decent action entertainment until the silly showdown ending that forces the viewer to totally suspend disbelief", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"action entertainment\", \"silly showdown ending\"],\n    \"REASONING\" : \"the movie is described as decent , but ultimately fails due to its reliance on formulaic action sequences and contrived conclusion\",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : one lousy movie .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "one lousy movie .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : \"one lousy movie , one , two , three , one , two , three . . . Negative sentiments throughout .\",\n    \"REASONING\" : \"the use of numbers and repetition in the negative feedback suggests frustration and dissatisfaction with the movie .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : though this rude and crude film does deliver a few gut-busting laughs , its digs at modern society are all things we 've seen before .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "though this rude and crude film does deliver a few gut-busting laughs , its digs at modern society are all things we 've seen before .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"rude , crude \", \"digs at modern society \", \"all things we 've seen before \"],\n    \"REASONING\" : \"the film delivers a few gut-busting laughs but its negative points about modern society have been covered before \",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : any movie that makes hard work seem heroic deserves a look .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "any movie that makes hard work seem heroic deserves a look .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : [\"movie \", \"hard work \", \"heroic \", \"look \"],\n    \"REASONING\" : \"Positive , as it is recommending a movie that is considered heroic for its effort \",\n    \"SENTIMENT\" : \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the code talkers deserved better than a hollow tribute .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the code talkers deserved better than a hollow tribute .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"code talkers \", \"deserved , \"hollow tribute \"],\n    \"REASONING\" : \"the input is negative because it expresses dissatisfaction with the film 's lack of depth and sincerity .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : what kids will discover is a new collectible . what parents will suspect is that they 're watching a 76-minute commercial .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "what kids will discover is a new collectible . what parents will suspect is that they 're watching a 76-minute commercial .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"kids will discover\", \"new collectible \", \"parents will suspect \", \"commercial \"],\n    \"REASONING\" : \"the input suggests that it is a children 's movie with an adult perspective , which can be seen as a negative sentiment towards the product being marketed to them .\",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : nair does n't use [ monsoon wedding ] to lament the loss of culture . instead , she sees it as a chance to revitalize what is and always has been remarkable about clung-to traditions .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "nair does n't use [ monsoon wedding ] to lament the loss of culture . instead , she sees it as a chance to revitalize what is and always has been remarkable about clung-to traditions .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\": [\"nair does n't use \", \"monsoon wedding \", \"lament the loss of culture \", \"revitalize what is and always has been remarkable about clung-to traditions .\"],\n    \"REASONING\": \"the film explores the idea of cultural preservation through its characters ' experiences , rather than simply focusing on their loss .\",\n    \"SENTIMENT\": Positive\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : overall , cletis tout is a winning comedy that excites the imagination and tickles the funny bone .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "overall , cletis tout is a winning comedy that excites the imagination and tickles the funny bone .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"winning comedy\", \"excites imagination\", \"tickles funny bone\"],\n    \"REASONING\" : \"Positive sentiment because the movie is described as a winning comedy that is imaginative and fun\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it 's like every bad idea that 's ever gone into an after-school special compiled in one place , minus those daytime programs ' slickness and sophistication ( and who knew they even had any ? ) .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it 's like every bad idea that 's ever gone into an after-school special compiled in one place , minus those daytime programs ' slickness and sophistication ( and who knew they even had any ? ) .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\" : \"bad idea , bad program , after-school special , slickness , sophistication , bad ideas \",\n    \"REASONING\" : \"the sentence is negative because it criticizes the movie as being overly repetitive and unimpressive , suggesting that the audience will be bored and disappointed .\",\n    \"SENTIMENT\" : \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a few energetic stunt sequences briefly enliven the film , but the wheezing terrorist subplot has n't the stamina for the 100-minute running time , and the protagonists ' bohemian boorishness mars the spirit of good clean fun .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a few energetic stunt sequences briefly enliven the film , but the wheezing terrorist subplot has n't the stamina for the 100-minute running time , and the protagonists ' bohemian boorishness mars the spirit of good clean fun .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"stunt sequences \", \"weird plotline \", \"bohemian boorishness \", \"good clean fun \"],\n    \"REASONING\" : \"the movie is too long and lacks energy , and its central themes are poorly executed . \",\n    \"SENTIMENT\" : \"Negative \"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : if deuces wild had been tweaked up a notch it would have become a camp adventure , one of those movies that 's so bad it starts to become good . but it was n't .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "if deuces wild had been tweaked up a notch it would have become a camp adventure , one of those movies that 's so bad it starts to become good . but it was n't .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\": \"negative tone , campy , not as bad as expected , negative feedback\",\n    \"REASONING\": \"the movie is described as being too bad to be good , with a negative tone throughout , and no improvement was made upon tweaking \",\n    \"SENTIMENT\": \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : summer 's far too fleeting to squander on offal like this .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "summer 's far too fleeting to squander on offal like this .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : \"offal , squander , offal , offal , offal \",\n    \"REASONING\" : \"negative sentiment due to the use of negative words and expressions in the description of the film .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : any movie this boring should be required to have ushers in the theater that hand you a cup of coffee every few minutes . like a marathon runner trying to finish a race , you need a constant influx of liquid just to get through it .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "any movie this boring should be required to have ushers in the theater that hand you a cup of coffee every few minutes . like a marathon runner trying to finish a race , you need a constant influx of liquid just to get through it .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\" : [\"boring\", \"negative feedback \", \"awful movie \", \"unbearable \"],\n    \"REASONING\" : \"Negative feedback is given throughout the review , indicating a negative sentiment .\",\n    \"SENTIMENT\" : \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : more than simply a portrait of early extreme sports , this peek into the 1970s skateboard revolution is a skateboard film as social anthropology . . .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "more than simply a portrait of early extreme sports , this peek into the 1970s skateboard revolution is a skateboard film as social anthropology . . .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : [\"skateboard film \", \"social anthropology \", \"portrait \", \"early extreme sports \", \"peek into \", \"1970s skateboard revolution \"],\n    \"REASONING\" : \"the positive sentiment can be inferred from the fact that it describes the movie positively and gives examples of what makes it stand out .\",\n    \"SENTIMENT\" : \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it 's everything you do n't go to the movies for .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it 's everything you do n't go to the movies for .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\" : [\"it 's everything you do n't go to the movies for .\"],\n    \"REASONING\" : \"the movie is about something that is not commonly found in films , which makes it stand out from other movies . \",\n    \"SENTIMENT\" : \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it 's one of the most honest films ever made about hollywood .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it 's one of the most honest films ever made about hollywood .", "answer": "Positive", "prediction": "`` Positive . `` Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive . Positive ."}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : consider the film a celluloid litmus test for the intellectual and emotional pedigree of your date and a giant step backward for a director i admire .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "consider the film a celluloid litmus test for the intellectual and emotional pedigree of your date and a giant step backward for a director i admire .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : \"consider , film , intellectual , emotional , date , step back , admire \",\n    \"REASONING\" : \"the review is negative because it criticizes the film and suggests that the person who wrote the review did n't have a good time with their date . \",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the acting alone is worth the price of admission .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the acting alone is worth the price of admission .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"the acting \", \"worth the price of admission \"],\n    \"REASONING\" : \"positive sentiment , positive experience \",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the storylines are woven together skilfully , the magnificent swooping aerial shots are breathtaking , and the overall experience is awesome .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the storylines are woven together skilfully , the magnificent swooping aerial shots are breathtaking , and the overall experience is awesome .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"woven together \", \"spectacularly shot \", \"awesome experience \"],\n    \"REASONING\" : \"Positive sentiment due to praise for storytelling , cinematography , and overall experience\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : an engrossing and infectiously enthusiastic documentary .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "an engrossing and infectiously enthusiastic documentary .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [ \"engrossing \", \"infectious \", \"enthusiastic \", \"documentary \" ],\n    \"REASONING\" : \"the positive adjective 'engrossing ' is repeated twice , indicating a strong emotional connection with the subject matter . Positive sentiment . \",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : returning aggressively to his formula of dimwitted comedy and even dimmer characters , sandler , who also executive produces , has made a film that makes previous vehicles look smart and sassy .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "returning aggressively to his formula of dimwitted comedy and even dimmer characters , sandler , who also executive produces , has made a film that makes previous vehicles look smart and sassy .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : \"dimwitted comedy , dimmer characters , returns to formula , dumb humor , negative tone \",\n    \"REASONING\" : \"the input is about a movie Negative because it describes its negative aspects .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : what ensues are much blood-splattering , mass drug-induced bowel evacuations , and none-too-funny commentary on the cultural distinctions between americans and brits .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "what ensues are much blood-splattering , mass drug-induced bowel evacuations , and none-too-funny commentary on the cultural distinctions between americans and brits .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"much blood-splattering \", \"mass drug-induced bowel evacuations \", \"none-too-funny commentary \"],\n    \"REASONING\" : \"the movie is so bad it 's almost funny in its own way .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : toes the fine line between cheese and earnestness remarkably well ; everything is delivered with such conviction that it 's hard not to be carried away .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "toes the fine line between cheese and earnestness remarkably well ; everything is delivered with such conviction that it 's hard not to be carried away .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"cheese , earnestness \", \"convinced \", \"carried away \"],\n    \"REASONING\" : \"Positive sentiment because the review praises the film for its ability to balance humor and sincerity in a way that makes the viewer feel engaged and entertained .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : ruzowitzky has taken this mothball-y stuff and made a rather sturdy , old-fashioned entertainment out of it .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "ruzowitzky has taken this mothball-y stuff and made a rather sturdy , old-fashioned entertainment out of it .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [ \"mooball-ey \", \"mothball-ty \", \"old-fashioned \", \"sturdy \", \"mothball-y \", \"solid \", \"worthy \", \"good-hearted \" ],\n    \"REASONING\" : \"Positive sentiment because the film is described as a solid , good-hearted , and worthy old-fashioned entertainment . \",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : . . . delivers few moments of inspiration amid the bland animation and simplistic story .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": ". . . delivers few moments of inspiration amid the bland animation and simplistic story .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"bland\", \"simplest\", \"inspiration\", \"marginal\"],\n    \"REASONING\" : \"Negative sentiment due to negative descriptions of animation and story\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : highlighted by a gritty style and an excellent cast , it 's better than one might expect when you look at the list of movies starring ice-t in a major role .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "highlighted by a gritty style and an excellent cast , it 's better than one might expect when you look at the list of movies starring ice-t in a major role .", "answer": "Positive", "prediction": "```\n\n{\n    \"CLUES\" : \"gritty style , excellent cast , better than expected , list of movies starring ice-t \",\n    \"REASONING\" : \"the review is positive because it highlights the film 's strengths and compares it favorably with other works featuring ice-t .\",\n    \"SENTIMENT\" : \"Positive\"\n} ``"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the setting is so cool that it chills the characters , reducing our emotional stake in the outcome of `` intacto 's `` dangerous and seductively stylish game .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the setting is so cool that it chills the characters , reducing our emotional stake in the outcome of `` intacto 's `` dangerous and seductively stylish game .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"cool\", \"chills\", \"reducing \", \"emotional stake \", \"outcomes \", \"dangerous \", \"seductively stylish game .\"],\n    \"REASONING\" : \"the negative tone and imagery used throughout the review suggest a negative sentiment towards the movie .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : this one is certainly well-meaning , but it 's also simple-minded and contrived .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "this one is certainly well-meaning , but it 's also simple-minded and contrived .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [ \"well-meaning \", \"simple-minded \", \"contrived \" ],\n    \"REASONING\" : \"the sentiment of the input sentence can be determined by analyzing the words used in the sentence . \",\n    \"SENTIMENT\" : \"Negative \"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : apart from dazzling cinematography , we 've seen just about everything in blue crush in one form or the other .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "apart from dazzling cinematography , we 've seen just about everything in blue crush in one form or the other .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"dazzling cinematography\", \"everything in blue crush\"],\n    \"REASONING\" : \"the input is negative because it states that there is nothing new or exciting about the movie .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it 's a talking head documentary , but a great one .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it 's a talking head documentary , but a great one .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\": \"talking head documentary , great one\",\n    \"REASONING\": \"Positive sentiment because the movie is described as a great one despite being a talking head documentary\",\n    \"SENTIMENT\": \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : using an endearing cast , writer/director dover kosashvili takes a slightly dark look at relationships , both sexual and kindred .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "using an endearing cast , writer/director dover kosashvili takes a slightly dark look at relationships , both sexual and kindred .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"endearing cast \", \"writer/director \", \"darker look \", \"relationships \", \"sexual and kindred \", \"cast \", \"director \", \"look \", \"relationship \", \"kindred spirit \"],\n    \"REASONING\" : \"the film is positive in tone and does n't take itself too seriously , despite its darker subject matter .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the script by vincent r . nebrida . . . tries to cram too many ingredients into one small pot .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the script by vincent r . nebrida . . . tries to cram too many ingredients into one small pot .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"tries to cram too many ingredients into one small pot \", \"script by vincent r . nebrida \"],\n    \"REASONING\" : \"the review suggests that the script is not well-written , with too many elements trying to be included in one story . \",\n    \"SENTIMENT\" : \"Negative \"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : city by the sea is the cinematic equivalent of defensive driving : it 's careful , conscientious and makes no major mistakes . but what saves lives on the freeway does not necessarily make for persuasive viewing .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "city by the sea is the cinematic equivalent of defensive driving : it 's careful , conscientious and makes no major mistakes . but what saves lives on the freeway does not necessarily make for persuasive viewing .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : \"defensive driving , careful , conscientious , makes no major mistakes , persuasive viewing \",\n    \"REASONING\" : \"the film is too formulaic and predictable to be engaging , yet it does n't make any major errors in its approach . Negative . \"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the footage of the rappers at play and the prison interview with suge knight are just two of the elements that will grab you .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the footage of the rappers at play and the prison interview with suge knight are just two of the elements that will grab you .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : \"footage , rappers , prison interview , grabs you \",\n    \"REASONING\" : \"the film is entertaining and engaging , thanks in part to its charismatic subjects .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it 's absolutely amazing how first-time director kevin donovan managed to find something new to add to the canon of chan . make chan 's action sequences boring .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it 's absolutely amazing how first-time director kevin donovan managed to find something new to add to the canon of chan . make chan 's action sequences boring .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"amazing \", \"new \", \"chan 's action sequences boring \"],\n    \"REASONING\" : \"the input expresses negative sentiments towards the film 's action sequences being boring , while also stating that it is amazing that the director managed to come up with something new \",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : [ fincher 's ] camera sense and assured pacing make it an above-average thriller .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "[ fincher 's ] camera sense and assured pacing make it an above-average thriller .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"above-average \", \"thriller \"],\n    \"REASONING\" : \"the positive words used to describe the film 's technical aspects , such as its camera sense and pacing , indicate a positive sentiment .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : . . . if you , like me , think an action film disguised as a war tribute is disgusting to begin with , then you 're in for a painful ride .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": ". . . if you , like me , think an action film disguised as a war tribute is disgusting to begin with , then you 're in for a painful ride .", "answer": "Negative", "prediction": "```\n\n{\n    \"CLUES\" : [ \"disgusting \", \"painful ride \" ],\n    \"REASONING\" : \"the sentence contains negative language about the movie and its subject matter \",\n    \"SENTIMENT\" : \"Negative \"\n} ``"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : you can sip your vintage wines and watch your merchant ivory productions ; i 'll settle for a nice cool glass of iced tea and a jerry bruckheimer flick any day of the week .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "you can sip your vintage wines and watch your merchant ivory productions ; i 'll settle for a nice cool glass of iced tea and a jerry bruckheimer flick any day of the week .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\": [\"vintage wines \", \"merchant ivory productions \", \"iced tea \", \"jerry bruckheimer flicks \"],\n    \"REASONING\": \"the review is positive because it mentions enjoying various movies , and the tone is casual and friendly .\",\n    \"SENTIMENT\": \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the biggest problem with this movie is that it 's not nearly long enough .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the biggest problem with this movie is that it 's not nearly long enough .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [ \"biggest problem \", \"movie isn't long enough \" ],\n    \"REASONING\" : \"the negative sentiment comes from the fact that the movie is too short , which is a problem for many viewers . \",\n    \"SENTIMENT\" : \"Negative \"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : dull and mechanical , kinda like a very goofy museum exhibit\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "dull and mechanical , kinda like a very goofy museum exhibit", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\" : [],\n    \"REASONING\" : \"Negative\",\n    \"SENTIMENT\" : \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the sundance film festival has become so buzz-obsessed that fans and producers descend upon utah each january to ferret out the next great thing . 'tadpole ' was one of the films so declared this year , but it 's really more of the next pretty good thing .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the sundance film festival has become so buzz-obsessed that fans and producers descend upon utah each january to ferret out the next great thing . 'tadpole ' was one of the films so declared this year , but it 's really more of the next pretty good thing .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"sundance film festival \", \"buzz-obsessed \", \"fans \", \"producers \", \"ferret out \", \"next great thing \", \"pretty good thing \"],\n    \"REASONING\" : \"the input suggests a negative sentiment because it describes the festival as being obsessed with finding new talent and mentions that the film in question is not considered particularly noteworthy by comparison \",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : 'like a child with an important message to tell . . . [ skins ' ] faults are easy to forgive because the intentions are lofty . '\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "'like a child with an important message to tell . . . [ skins ' ] faults are easy to forgive because the intentions are lofty . '", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\": [\"important message\", \"lofty intentions\"],\n    \"REASONING\": \"the film is sincere and well-intentioned , despite some flaws\",\n    \"SENTIMENT\": \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a compelling yarn , but not quite a ripping one .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a compelling yarn , but not quite a ripping one .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [ \"compelling \", \"yarn \", \"ripping one \" ],\n    \"REASONING\" : \"the film is described as 'a compelling yarn , but not quite a ripping one ' , which suggests a mixed sentiment .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : despite some gulps the film is a fuzzy huggy .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "despite some gulps the film is a fuzzy huggy .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"fuzzy huggy \"],\n    \"REASONING\" : \"the phrase 'fuzzy huggy ' suggests a lack of substance or depth , which could be interpreted as negative .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : though jackson does n't always succeed in integrating the characters in the foreground into the extraordinarily rich landscape , it must be said that he is an imaginative filmmaker who can see the forest for the trees .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "though jackson does n't always succeed in integrating the characters in the foreground into the extraordinarily rich landscape , it must be said that he is an imaginative filmmaker who can see the forest for the trees .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"impressive \", \"imaginative \", \"see the forest for the trees \"],\n    \"REASONING\" : \"the positive sentiment comes from the praise given to the filmmaker 's imagination and ability to connect the characters with the landscape .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the thought of watching this film with an audience full of teenagers fixating on its body humour and reinforcement of stereotypes ( of which they 'll get plenty ) fills me with revulsion .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the thought of watching this film with an audience full of teenagers fixating on its body humour and reinforcement of stereotypes ( of which they 'll get plenty ) fills me with revulsion .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\": \"revulsion , thoughts about teen culture , body humor , stereotypes \",\n    \"REASONING\": \"the speaker feels disgust towards the idea of young people being exposed to such content .\",\n    \"SENTIMENT\": \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the film 's implicit premise is that the faith of the tonga people is in every way inferior to that of john .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the film 's implicit premise is that the faith of the tonga people is in every way inferior to that of john .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"faith \", \"tonga people \", \"inferior \", \"john \"],\n    \"REASONING\" : \"the negative connotations associated with being considered inferior , especially to someone else who shares your same religion or culture . \",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the picture 's fascinating byways are littered with trenchant satirical jabs at the peculiar egocentricities of the acting breed .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the picture 's fascinating byways are littered with trenchant satirical jabs at the peculiar egocentricities of the acting breed .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : \"fascinating byways , trenchant satirical jabs , peculiar egocentricities , acting breed\",\n    \"REASONING\" : \"the positive sentiment is derived from the appreciation for the film 's unique perspective and humor \",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : dogtown & z-boys evokes the blithe rebel fantasy with the kind of insouciance embedded in the sexy demise of james dean .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "dogtown & z-boys evokes the blithe rebel fantasy with the kind of insouciance embedded in the sexy demise of james dean .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"dogtown & z-boys \", \"blithe , rebellious fantasy \", \"insouciance \", \"sexy demise \", \"james dean \"],\n    \"REASONING\" : \"the movie has a certain charm and style , and it captures a certain time period \",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the film oozes craft .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the film oozes craft .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [ \"the film \", \"oozes craft \" ],\n    \"REASONING\" : \"Positive sentiment because the film is described as having an impressive level of craftsmanship .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a minor-league soccer remake of the longest yard .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a minor-league soccer remake of the longest yard .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"minor-league \", \"soccer remake \", \"longest yard \"],\n    \"REASONING\" : \"all three films have been critically panned , and this one has even less substance than its predecessors .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the weight of water uses water as a metaphor for subconscious desire , but this leaky script barely stays afloat .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the weight of water uses water as a metaphor for subconscious desire , but this leaky script barely stays afloat .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"negative\", \"poorly written \", \"leaky script \", \"barely stays afloat \"],\n    \"REASONING\" : \"the sentence contains negative words such as 'poorly written ', 'leaky script ', and 'barely stays afloat ' which indicates a negative sentiment .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : observant intelligence constantly vies with pretension -- and sometimes plain wacky implausibility -- throughout maelstrom .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "observant intelligence constantly vies with pretension -- and sometimes plain wacky implausibility -- throughout maelstrom .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"observant intelligence \", \"constantly vies with \", \"pretension , \"wacky implausibility \", \"maelstrom \"],\n    \"REASONING\" : \"the film is clever , witty and entertaining despite its flaws \",\n    \"SENTIMENT\" : \"Positive \"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : an 83 minute document of a project which started in a muddle , seesawed back and forth between controlling interests multiple times , then found its sweet spot\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "an 83 minute document of a project which started in a muddle , seesawed back and forth between controlling interests multiple times , then found its sweet spot", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"documentary \", \"project starts in a muddle \", \"seesaws back and forth between controlling interests \", \"finds its sweet spot\"],\n    \"REASONING\" : \"the film goes through various stages before finding its groove , but ultimately succeeds in telling its story \",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : wiseman is patient and uncompromising , letting his camera observe and record the lives of women torn apart by a legacy of abuse .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "wiseman is patient and uncompromising , letting his camera observe and record the lives of women torn apart by a legacy of abuse .", "answer": "Positive", "prediction": "`` Positive `` . Positive feedback for the filmmaker 's commitment to capturing real-life struggles . Positive sentiments about the subject matter being handled with sensitivity . Positive sentiments regarding the film 's patience in its storytelling . Positive sentiments regarding the film 's willingness to let the camera document life without any interference . Positive sentiments regarding the film 's respect for the subjects . Positive sentiments regarding the film 's ability to provide an insight into the lives of women who have been abused . Positive sentiments regarding the film 's ability to show empathy towards these women . Positive sentiments regarding the film 's ability to show understanding towards these women . Positive sentiments regarding the film 's ability to show compassion towards these women . Positive sentiments regarding the film 's ability to show care towards these women . Positive sentiments regarding the film 's ability to show concern towards these women . Positive sentiments regarding the film 's ability to show interest in these women . Positive sentiments regarding the film 's ability to show respect for these women . Positive sentiments regarding the film 's ability to show appreciation for these women . Positive sentiments regarding the film 's ability to show admiration for these women . Positive sentiments regarding the film 's ability to show love for these women . Positive sentiments regarding the film 's ability to show gratitude for these women . Positive sentiments regarding the film 's ability to show forgiveness for these women . Positive sentiments regarding the film 's ability to show hope for these women . Positive sentiments regarding the film 's ability to show encouragement for these women . Positive sentiments regarding the film 's ability to show inspiration for these women . Positive sentiments regarding the film 's ability to show motivation for these women . Positive sentiments regarding the film 's ability to show perseverance for these women . Positive sentiments regarding the film 's ability to show determination for these women . Positive sentiments regarding the film 's ability to show courage for these women . Positive sentiments regarding the film 's ability to show strength for these women . Positive sentiments regarding the film 's ability to show resilience for these women . Positive sentiments regarding the film 's ability to show fortitude for these women . Positive sentiments regarding the film 's ability to show persistence for these women . Positive sentiments regarding the film 's ability to show tenacity for these women . Positive sentiments regarding the film 's ability to show endurance for these women . Positive sentiments regarding the film 's ability to show endurance for these women . Positive sentiments regarding the film 's ability to show endurance for these women . Positive sentiments regarding the film 's ability to show endurance for"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : there 's a bit of thematic meat on the bones of queen of the damned , as its origins in an anne rice novel dictate , but generally , it 's a movie that emphasizes style over character and substance .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "there 's a bit of thematic meat on the bones of queen of the damned , as its origins in an anne rice novel dictate , but generally , it 's a movie that emphasizes style over character and substance .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"meat on the bones\", \"style over substance\"],\n    \"REASONING\" : \"the input contains negative words such as 'unimportant ' and 'insufficiently developed ' which indicate a negative sentiment .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : by the end of it all i sort of loved the people onscreen , even though i could not stand them . perhaps the film should be seen as a conversation starter . it 's not an easy one to review .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "by the end of it all i sort of loved the people onscreen , even though i could not stand them . perhaps the film should be seen as a conversation starter . it 's not an easy one to review .", "answer": "Negative", "prediction": "```\n\n{\n    \"CLUES\" : [ \"love \", \"conversation starter \" ],\n    \"REASONING\" : \"the film is about love and conversation , but the narrator has mixed feelings about it , which makes her difficult to relate to . Negative sentiment . \",\n    \"SENTIMENT\" : \"Negative \"\n} ``"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : snipes is both a snore and utter tripe .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "snipes is both a snore and utter tripe .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"snipes \", \"utter tripe .\"],\n    \"REASONING\" : \"Negative sentiment associated with the negative words used in the review .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : video games are more involving than this mess .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "video games are more involving than this mess .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"games \", \"involved \", \"mess \"],\n    \"REASONING\" : \"Positive sentiment because the user is saying that video games are more engaging than a bad movie , which suggests they enjoyed them .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : diane lane shines in unfaithful . almost everything else is wan .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "diane lane shines in unfaithful . almost everything else is wan .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\" : \"diane lane shines , unfaithful , wan \",\n    \"REASONING\" : \"the review mentions that Diane Lane shines in the film but that everything else is 'wan , ' which suggests a negative sentiment towards the movie .\",\n    \"SENTIMENT\" : \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a quiet treasure -- a film to be savored .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a quiet treasure -- a film to be savored .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : [\"quiet treasure \", \"savored \"],\n    \"REASONING\" : \"positive language is used throughout , and the film is described as 'a film to be savored . '\",\n    \"SENTIMENT\" : \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : if you ever wondered what it would be like to be smack in the middle of a war zone armed with nothing but a camera , this oscar-nominated documentary takes you there .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "if you ever wondered what it would be like to be smack in the middle of a war zone armed with nothing but a camera , this oscar-nominated documentary takes you there .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"war zone \", \"camera \", \"documentary \", \"oscar-nominated \", \"take you there \"],\n    \"REASONING\" : \"Positive because the movie presents an immersive experience of being at the center of a war zone without the danger of actually being there . \",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the overall effect is so completely inane that one would have to be mighty bored to even think of staying with this for more than , say , ten . . . make that three minutes .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the overall effect is so completely inane that one would have to be mighty bored to even think of staying with this for more than , say , ten . . . make that three minutes .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\": [\"inane\", \"bored\", \"stay \", \"ten . . . make that three minutes .\"],\n    \"REASONING\": \"the sentence uses negative words like 'inane' , 'bored', 'stay ', and 'make that three minutes ' to describe the overall effect of the movie .\",\n    \"SENTIMENT\": \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : an infinitely wittier version of the home alone formula .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "an infinitely wittier version of the home alone formula .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"infinitely wittier\", \"home alone formula\"],\n    \"REASONING\" : \"the sentence describes a film as being more enjoyable than the home alone series\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the truth about charlie is that it 's a brazenly misguided project .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the truth about charlie is that it 's a brazenly misguided project .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : \"misguided , project \",\n    \"REASONING\" : \"the negative connotations of the words suggest a negative sentiment .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : collapses under its own meager weight .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "collapses under its own meager weight .", "answer": "Negative", "prediction": "```\n\n```json\n{\n    \"CLUES\": [\"collapses\", \"own\", \"weight\"],\n    \"REASONING\": \"Negative\",\n    \"SENTIMENT\": \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : ice age is the first computer-generated feature cartoon to feel like other movies , and that makes for some glacial pacing early on .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "ice age is the first computer-generated feature cartoon to feel like other movies , and that makes for some glacial pacing early on .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : \"glacial pacing , feels like other movies , positive sentiment\",\n    \"REASONING\" : \"the movie is described as being slow-paced but still enjoyable because it has elements of other cartoons\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : its gentle , touching story creeps into your heart .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "its gentle , touching story creeps into your heart .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : \"gently , touching story , creeps into your heart\",\n    \"REASONING\" : \"positive sentiment is implied by the word 'gentle ' which suggests a positive tone , and the phrase 'touching story ' indicates an emotional connection with the subject matter . Positive sentiment is also suggested by the final phrase 'creeps into your heart . ' Positive sentiment is confirmed by the word 'love . ' Positive sentiment is further supported by the use of the word 'lovingly ' in describing the film . Positive sentiment is also reinforced by the fact that the movie has been praised for its positive message . Positive sentiment is confirmed by the use of the word 'love . ' Positive sentiment is also reinforced by the fact that the movie has been praised for its positive message . Positive sentiment is confirmed by the use of the word 'love . ' Positive sentiment is also reinforced by the fact that the movie has been praised for its positive message . Positive sentiment is confirmed by the use of the word 'love . ' Positive sentiment is also reinforced by the fact that the movie has been praised for its positive message . Positive sentiment is confirmed by the use of the word 'love . ' Positive sentiment is also reinforced by the fact that the movie has been praised for its positive message . Positive sentiment is confirmed by the use of the word 'love . ' Positive sentiment is also reinforced by the fact that the movie has been praised for its positive message . Positive sentiment is confirmed by the use of the word 'love . ' Positive sentiment is also reinforced by the fact that the movie has been praised for its positive message . Positive sentiment is confirmed by the use of the word 'love . ' Positive sentiment is also reinforced by the fact that the movie has been praised for its positive message . Positive sentiment is confirmed by the use of the word 'love . ' Positive sentiment is also reinforced by the fact that the movie has been praised for its positive message . Positive sentiment is confirmed by the use of the word 'love . ' Positive sentiment is also reinforced by the fact that the movie has been praised for its positive message . Positive sentiment is confirmed by the use of the word 'love . ' Positive sentiment is also reinforced by the fact that the movie has been praised for its positive message . Positive sentiment is confirmed by the use of the word 'love . ' Positive sentiment is also reinforced by the fact that the movie has been praised for its positive message . Positive sentiment is confirmed by the use of the word 'love . ' Positive sentiment is"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a loud , low-budget and tired formula film that arrives cloaked in the euphemism 'urban drama . '\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a loud , low-budget and tired formula film that arrives cloaked in the euphemism 'urban drama . '", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"low-budget \", \"tired formula film \", \"euphemism 'urban drama '\"],\n    \"REASONING\" : \"the review is negative because it describes the movie as unimpressive , lacking creativity , and not very well made \",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : `` roger michell ( `` notting hill `` ) directs a morality thriller . ``\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "`` roger michell ( `` notting hill `` ) directs a morality thriller . ``", "answer": "Negative", "prediction": "`` Negative `` Positive : Positive : Positive : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative : Negative"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it feels like a community theater production of a great broadway play : even at its best , it will never hold a candle to the original .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it feels like a community theater production of a great broadway play : even at its best , it will never hold a candle to the original .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [ \"community theater \", \"great broadway play \", \"even at its best \", \"never hold a candle \" ],\n    \"REASONING\" : \"the sentence compares the movie to a community theater production and suggests that it is inferior to the original , which implies a negative sentiment .\",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the values that have held the enterprise crew together through previous adventures and perils do so again-courage , self-sacrifice and patience under pressure .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the values that have held the enterprise crew together through previous adventures and perils do so again-courage , self-sacrifice and patience under pressure .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [ \"the values \", \"perils \", \"adventures \", \"previosuly \", \"perils \", \"self-sacrifice \", \"patience \", \"under pressure \" ],\n    \"REASONING\" : \"the sentence is positive because it describes the strength and perseverance of the characters throughout the story .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a mimetic approximation of better films like contempt and 8 1/2 .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a mimetic approximation of better films like contempt and 8 1/2 .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"mimetic approximation \", \"better films \", \"contempt \", \"8 1/2 \"],\n    \"REASONING\" : \"the sentence mentions several other movies with similar themes , indicating that it is comparing this film unfavorably to them\",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : viewers of `` the ring `` are more likely to remember the haunting images than the plot holes .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "viewers of `` the ring `` are more likely to remember the haunting images than the plot holes .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"viewers \", \"ring \", \"haunting images \", \"plot holes \"],\n    \"REASONING\" : \"the input mentions that viewers of 'the ring ' are more likely to remember the haunting images than the plot holes , indicating a negative sentiment towards the film .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : audiences can be expected to suspend their disbelief only so far -- and that does not include the 5 o'clock shadow on the tall wooden kid as he skips off to school .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "audiences can be expected to suspend their disbelief only so far -- and that does not include the 5 o'clock shadow on the tall wooden kid as he skips off to school .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"audiences can be expected to suspend their disbelief , 5 o 'clock shadow , tall wooden kid , skipping school\"],\n    \"REASONING\" : \"the sentence mentions elements of suspension of disbelief , aging , and youthful rebellion which suggests a more positive sentiment .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a shambles of a movie -- visually unattractive , unbearably loud and utterly silly . . . its hilarity is completely unintentional .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a shambles of a movie -- visually unattractive , unbearably loud and utterly silly . . . its hilarity is completely unintentional .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\": \"a shambles of a movie , visually unattractive , unbearably loud , utterly silly , hilarity is completely unintentional \",\n    \"REASONING\": \"the review describes the movie as a failure in terms like 'shambles ,' 'unattractive , ' 'unbearably loud ' and 'utterly silly , ' indicating a negative sentiment . Negative sentiment . Positive sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative sentiment Negative"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a triumph , a film that hews out a world and carries us effortlessly from darkness to light .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a triumph , a film that hews out a world and carries us effortlessly from darkness to light .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : [ \"triumph \", \"film \" ],\n    \"REASONING\" : \"the input contains positive language and imagery about the movie being a success and being able to navigate through difficult situations \",\n    \"SENTIMENT\" : \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the script kicks in , and mr . hartley 's distended pace and foot-dragging rhythms follow .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the script kicks in , and mr . hartley 's distended pace and foot-dragging rhythms follow .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"distended pace\", \"foot-dragging rhythms\"],\n    \"REASONING\" : \"the script is described as slow-moving and dragging along\",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : berling and bM-iart . . . continue to impress , and isabelle huppert . . . again shows uncanny skill in getting under the skin of her characters .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "berling and bM-iart . . . continue to impress , and isabelle huppert . . . again shows uncanny skill in getting under the skin of her characters .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [ \"impress \", \"show \", \"skill \", \"under the skin \" ],\n    \"REASONING\" : \"Positive sentiment because the praise is directed at several actors and actresses who have been praised for their performances in this movie .\",\n    \"SENTIMENT\" : Positive\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it lacks the compassion , good-natured humor and the level of insight that made [ eyre 's ] first film something of a sleeper success .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it lacks the compassion , good-natured humor and the level of insight that made [ eyre 's ] first film something of a sleeper success .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : \"lacks compassion , good-natured humor , and insight , is n't a sleeper success , doesn 't have the same level of humor , and wasn 't successful in the first place .\",\n    \"REASONING\" : \"the movie does not match the quality of its predecessor , and does not have the same level of humor . \",\n    \"SENTIMENT\" : Negative\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : together , miller , kuras and the actresses make personal velocity into an intricate , intimate and intelligent journey .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "together , miller , kuras and the actresses make personal velocity into an intricate , intimate and intelligent journey .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"intimate \", \"intricate \", \"intelligent \", \"journey \"],\n    \"REASONING\" : \"all these words suggest a positive sentiment , as they describe the film 's emotional depth and complexity .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : calculated swill .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "calculated swill .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [\"calculated \", \"swill \"],\n    \"REASONING\" : \"Negative sentiment towards calculated waste .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : all three women deliver remarkable performances .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "all three women deliver remarkable performances .", "answer": "Positive", "prediction": "```\n{\n    \"CLUES\" : [\"all three women \", \"deliver remarkable performances . \"],\n    \"REASONING\" : \"Positive sentiment because it praises the acting , which is highly commended by the reviewer . \",\n    \"SENTIMENT\" : \"Positive\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : maguire is a surprisingly effective peter/spider-man .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "maguire is a surprisingly effective peter/spider-man .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : \"first-person point-of-view , surprising effectiveness , unexpectedly positive .\",\n    \"REASONING\" : \"Positive because the review mentions the character 's first-person point-of-view being surprising and the actor 's performance being particularly effective in portraying spider-man .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it 's a cool event for the whole family . maybe not a classic , but a movie the kids will want to see over and over again .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it 's a cool event for the whole family . maybe not a classic , but a movie the kids will want to see over and over again .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"cool \", \"family-friendly \", \"kids-will-like-again ],\n    \"REASONING\" : \"Positive sentiment because the input describes the movie as being fun and appealing to children \",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : this rough trade punch-and-judy act did n't play well then and it plays worse now .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "this rough trade punch-and-judy act did n't play well then and it plays worse now .", "answer": "Negative", "prediction": "```\n\n{\n    \"CLUES\": [\"this rough trade punch-and-judy act did n't play well then and it plays worse now . \"],\n    \"REASONING\": \"the input is a movie review , indicating a negative sentiment , but the specific details are not clear enough to be more specific about the sentiment.\",\n    \"SENTIMENT\": \"Negative\"\n} ``"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : kaufman 's script is never especially clever and often is rather pretentious .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "kaufman 's script is never especially clever and often is rather pretentious .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\" : [\n        \"script is never especially clever \",\n        \"often is rather pretentious \"\n    ],\n    \"REASONING\" : \"the review describes the film as being lacking in creativity and style , which is generally seen as negative .\",\n    \"SENTIMENT\" : \"Negative\"\n}\n```"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : an enthralling aesthetic experience , one that 's steeped in mystery and a ravishing , baroque beauty .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "an enthralling aesthetic experience , one that 's steeped in mystery and a ravishing , baroque beauty .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"enthralling \", \"aesthetically \", \"mystery \", \"baroque beauty \"],\n    \"REASONING\" : \"Positive sentiment because the input describes an enjoyable and visually stunning experience .\",\n    \"SENTIMENT\" : \"Positive\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : the ring is worth a look , if you do n't demand much more than a few cheap thrills from your halloween entertainment .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "the ring is worth a look , if you do n't demand much more than a few cheap thrills from your halloween entertainment .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [ \"worth a look \", \"do n't demand much more \", \"cheap thrills \" ],\n    \"REASONING\" : \"Positive sentiment because it suggests that the movie is entertaining and does not require too much time or effort . \",\n    \"SENTIMENT\" : \"Positive \"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : confounding because it solemnly advances a daringly preposterous thesis . acting can not be acted .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "confounding because it solemnly advances a daringly preposterous thesis . acting can not be acted .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"confounding \", \"preposterous \", \"daringly \"],\n    \"REASONING\" : \"the sentence contains negative words about the movie , indicating a negative sentiment .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : it 's a work by an artist so in control of both his medium and his message that he can improvise like a jazzman .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "it 's a work by an artist so in control of both his medium and his message that he can improvise like a jazzman .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"work\", \"artist \", \"control \", \"medium \", \"message \", \"improvise \", \"jazzman \"],\n    \"REASONING\" : \"the sentence describes a painting , which is considered a work of art . the artist is described as being in control of both his medium and his message , and improvises like a jazz musician . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive sentiment . Positive"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : nothing more or less than an outright bodice-ripper -- it should have ditched the artsy pretensions and revelled in the entertaining shallows .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "nothing more or less than an outright bodice-ripper -- it should have ditched the artsy pretensions and revelled in the entertaining shallows .", "answer": "Negative", "prediction": "{\n    \"CLUES\" : [],\n    \"REASONING\" : \"the input is a negative review about a movie , suggesting a negative sentiment .\",\n    \"SENTIMENT\" : \"Negative\"\n}"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : [ screenwriter ] pimental took the farrelly brothers comedy and feminized it , but it is a rather poor imitation .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "[ screenwriter ] pimental took the farrelly brothers comedy and feminized it , but it is a rather poor imitation .", "answer": "Negative", "prediction": "```\n{\n    \"CLUES\" : \n        'screenwriter ' , \n        'pimental ' , \n        'farrelly brothers comedy ' , \n        'feminization ' , \n        'poor imitation ' , \n        'improvement ' , \n        'comedy ' , \n        'mocking ' , \n        'insults ' , \n        'humor ' , \n        'female perspective ' , \n        'male humor ' , \n        'male perspective ' , \n        'female perspective ' , \n        'negative impression ' , \n        'insensitive ' , \n        'insulting ' , \n        'stereotyping ' , \n        'homophobia ' , \n        'gender stereotypes ' , \n        'sexism ' , \n        'heteronormativity ' , \n        'homophobia ' , \n        'negative impression ' , \n        'homophobic stereotype ' , \n        'negative stereotype ' , \n        'negative stereotyping ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype ' , \n        'negative stereotype"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a meatier deeper beginning and/or ending would have easily tipped this film into the `` a `` range , as is , it 's a very very strong `` b+ . `` i love the robust middle of this picture .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a meatier deeper beginning and/or ending would have easily tipped this film into the `` a `` range , as is , it 's a very very strong `` b+ . `` i love the robust middle of this picture .", "answer": "Positive", "prediction": "`` Positive `` Positive sentiment with some minor negative feedback about the film being too long in the middle . Positive sentiment with some minor negative feedback about the film being too long in the middle . Positive sentiment with some minor negative feedback about the film being too long in the middle . Positive sentiment with some minor negative feedback about the film being too long in the middle . Positive sentiment with some minor negative feedback about the film being too long in the middle . Positive sentiment with some minor negative feedback about the film being too long in the middle . Positive sentiment with some minor negative feedback about the film being too long in the middle . Positive sentiment with some minor negative feedback about the film being too long in the middle . Positive sentiment with some minor negative feedback about the film being too long in the middle . Positive sentiment with some minor negative feedback about the film being too long in the middle . Positive sentiment with some minor negative feedback about the film being too long in the middle . Positive sentiment with some minor negative feedback about the film being too long in the middle . Positive sentiment with some minor negative feedback about the film being too long in the middle . Positive sentiment with some minor negative feedback about the film being too long in the middle . Positive sentiment with some minor negative feedback about the film being too long in the middle . Positive sentiment with some minor negative feedback about the film being too long in the middle . Positive sentiment with some minor negative feedback about the film being too long in the middle . Positive sentiment with some minor negative feedback about the film being too long in the middle . Positive sentiment with some minor negative feedback about the film being too long in the middle . Positive sentiment with some minor negative feedback about the film being too long in the middle . Positive sentiment with some minor negative feedback about the film being too long in the middle . Positive sentiment with some minor negative feedback about the film being too long in the middle . Positive sentiment with some minor negative feedback about the film being too long in the middle . Positive sentiment with some minor negative feedback about the film being too long in the middle . Positive sentiment with some minor negative feedback about the film being too long in the middle . Positive sentiment with some minor negative feedback about the film being too long in the middle . Positive sentiment with some minor negative feedback about the film being too long in the middle . Positive sentiment with some minor negative feedback about the film being too long in the middle . Positive sentiment with some minor negative feedback about the film being too long in the middle . Positive sentiment with some minor negative feedback about the film being too long in the middle"}, {"prompt": "<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n<|im_start|>user\nClassify the sentiment of the input sentence as Positive or Negative.\nFirst, list CLUES (i.e., keywords, phrases, contextual information, semantic relations, semantic meaning, tones, references) that support to classify sentiment of input.\nSecond, deduce the diagnostic REASONING process from premises (i.e., clues, input) that supports to determine the sentiment of the INPUT (Limit the number of words to 130).\nThird, based on clues, reasoning, and input, determine the overall SENTIMENT of the INPUT as either Positive or Negative.\n\nThe OUTPUT should follow the below JSON format :\n\n{\n    \"CLUES\" : List of words,\n    \"REASONING\" : String,\n    \"SENTIMENT\" : String (Only Positive or Negative)\n}\n\nINPUT : a fascinating literary mystery story with multiple strands about the controversy of who really wrote shakespeare 's plays .\nOUTPUT :<|im_end|>\n<|im_start|>assistant\n", "sentence": "a fascinating literary mystery story with multiple strands about the controversy of who really wrote shakespeare 's plays .", "answer": "Positive", "prediction": "{\n    \"CLUES\" : [\"fascinating \", \"literary mystery story \", \"multiple strands \", \"controversy \", \"really wrote shakespeare 's plays \"],\n    \"REASONING\" : \"the input is a positive review of a book , suggesting it has a good story and interesting ideas .\",\n    \"SENTIMENT\" : Positive\n}"}]